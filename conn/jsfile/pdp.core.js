/*v=1.21.530.1*/
//<script type="text/javascript">
var Ysh = {};
Ysh.ajax = function (dll, args) { return ExecuteBack(function () { return YshGrid.Execute(dll, args); }); }
Ysh.isIE = navigator.userAgent.toLowerCase().match(/msie ([\d.]+)/);
Ysh.Type = {
    isArray: function (o) { return Array.isArray(o); },
    isFunction: function (o) { return o instanceof Function; },
    isDate: function (o) { return Object.prototype.toString.call(o) === "[object Date]"; },
    isObject: function (o) { return Object.prototype.toString.call(o) === "[object Object]"; },
    isInteger: function (o) { return Number.isInteger(o); }
};
Ysh.Debug = {
    times: [],
    start: function (name) {
        this.times.push({ "name": name, time: new Date() });
    },
    show: function () {
        var msg = "";
        for (var i = 1; i < this.times.length; i++) {
            var prev = this.times[i - 1];
            var curr = this.times[i];
            msg += prev.name + " - " + curr.name + " use time:" + (curr.time - prev.time) + "\r\n";
        }
        alert(msg);
        this.times = [];
    },
    now: function () {
        var thisMoment = new Date();
        return thisMoment.getFullYear() + "-" + (thisMoment.getMonth() + 1) + "-" + thisMoment.getDate() +
            " " + thisMoment.getHours() + ":" + thisMoment.getMinutes() + ":" + thisMoment.getSeconds() + "." + thisMoment.getMilliseconds();
    }
};

Ysh.Const = {
    NULL_VALUE: -99999.0,
    NULL_TIME: Date.parse("2100/12/30"),
    NULL_TIME_SHORT_STR: "2100-12-30",
    NULL_TIME_FULL_STR: "2100-12-30 00:00:00",
    NOSAVE: "@(NOSAVE)@",
    CIRCLE_LIST: false,
    DESTORY: "__ysh_destory__"
};

Ysh.Delay = {
    tasks: {},
    exec: function (id, ms, f) {
        var task = this.tasks[id];
        if (task) {
            window.clearTimeout(task);
        }
        var o = this;
        this.tasks[id] = window.setTimeout(function () {
            f();
            o.tasks[id] = null;
        }, ms);
    }
};

Ysh.Dictionary = {
    init: function (type, keys, datas, selected) {
        var ret = {};
        var f = null;
        switch (type) {
            case "single":
                f = function (k) { return k == selected; }
                break;
            case "multi":
                f = function (k) { return selected.indexOf(k) >= 0; }
                break;
            default:
                f = function () { return false; }
                break;
        }
        var lst = [];
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            lst.push({ key: key, data: datas[i], selected: f(key) });
        }
        ret.list = lst;
        ret.selected = selected;
        return ret;
    },
    setAllSelected: function (list, selected) {
        for (var i = 0; i < list.length; i++)
            list[i].selected = selected;
    },
    setParent: function (o, list) {
        o.children = list;
        for (var i = 0; i < list.length; i++)
            list[i].parent = o;
    },
    setSelected: function (o, selected, up, down) {
        if (o.selected != selected)
            o.selected = selected;
        if (down && o.children) {
            for (var i = 0; i < o.children.length; i++)
                this.setSelected(o.children[i], selected, false, true);
        }
        if (up && o.parent) {
            if (selected) {
                var bAll = true;
                for (var i = 0; i < o.parent.children.length; i++) {
                    if (!o.parent.children[i].selected) {
                        bAll = false;
                        break;
                    }
                }
                this.setSelected(o.parent, bAll, true, false);
            } else
                this.setSelected(o.parent, false, true, false);
        }
    }
}

Ysh.Global = {
    get: function (name) {
        if (this[name]) return this[name];
        var p = window;
        while (true) {
            var obj = p[name];
            if (obj) {
                this[name] = obj;
                break;
            }
            if (p == p.parent)
                break;
            p = p.parent;
            if (p == null)
                break;
        }
        return this[name];
    }
}

Ysh.sleep = function (milliseconds) {
    var now = new Date();
    var exitTime = now.getTime() + milliseconds;
    while (true) {
        now = new Date();
        if (now.getTime() > exitTime)
            return;
    }
};
Ysh.isNull = function (v) { return v == Ysh.Const.NULL_VALUE; };
Ysh.isDBNull = function (v) { if (v.__type) return v.__type == "System.DBNull"; return false; }
Ysh.getDBValue = function (v) { if (this.isDBNull(v)) return ""; return v; }
Ysh.isNullTime = function (time) {
    if (Ysh.Type.isDate(time))
        return (time - Ysh.Const.NULL_TIME) == 0;
    return (time == Ysh.Const.NULL_TIME_SHORT_STR) || (time == Ysh.Const.NULL_TIME_FULL_STR);
};
Ysh.delayLoad = function (data, itemsPerGroup, fLoadItem, start, fLoadFinish) {
    if (!start)
        start = 0;
    var i = start;
    for (i = start, j = 0; (i < data.length) && (j < itemsPerGroup); i++ , j++) {
        fLoadItem(data, i);
    }
    if (i < data.length)
        setTimeout(function () { Ysh.delayLoad(data, itemsPerGroup, fLoadItem, i); }, 10);
    else {
        if (fLoadFinish)
            fLoadFinish();
    }
};

Ysh.Pinyin = {
    char_dict: "",
    polyphone: null,
    init: function () {
        this.char_dict = "";
        this.polyphone = { "19969": "DZ", "19975": "WM", "19988": "QJ", "20048": "YL", "20056": "SC", "20060": "NM", "20094": "QG", "20127": "QJ", "20167": "QC", "20193": "YG", "20250": "KH", "20256": "ZC", "20282": "SC", "20285": "QJG", "20291": "TD", "20314": "YD", "20340": "NE", "20375": "TD", "20389": "YJ", "20391": "CZ", "20415": "PB", "20446": "YS", "20447": "SQ", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20985": "AW", "21032": "PB", "21048": "XQ", "21049": "SC", "21089": "YS", "21119": "JC", "21242": "SB", "21273": "SC", "21305": "YP", "21306": "QO", "21330": "ZC", "21333": "SDC", "21345": "QK", "21378": "CA", "21397": "SC", "21414": "XS", "21442": "SC", "21477": "JG", "21480": "TD", "21484": "ZS", "21494": "YX", "21505": "YX", "21512": "HG", "21523": "XH", "21537": "PB", "21542": "PF", "21549": "KH", "21571": "E", "21574": "DA", "21588": "TD", "21589": "O", "21618": "ZC", "21621": "KHA", "21632": "ZJ", "21654": "KG", "21679": "LKG", "21683": "KH", "21710": "A", "21719": "YH", "21734": "WOE", "21769": "A", "21780": "WN", "21804": "XH", "21834": "A", "21899": "ZD", "21903": "RN", "21908": "WO", "21939": "ZC", "21956": "SA", "21964": "YA", "21970": "TD", "22003": "A", "22031": "JG", "22040": "XS", "22060": "ZC", "22066": "ZC", "22079": "MH", "22129": "XJ", "22179": "XA", "22237": "NJ", "22244": "TD", "22280": "JQ", "22300": "YH", "22313": "XW", "22331": "YQ", "22343": "YJ", "22351": "PH", "22395": "DC", "22412": "TD", "22484": "PB", "22500": "PB", "22534": "ZD", "22549": "DH", "22561": "PB", "22612": "TD", "22771": "KQ", "22831": "HB", "22841": "JG", "22855": "QJ", "22865": "XQ", "23013": "ML", "23081": "WM", "23487": "SX", "23558": "QJ", "23561": "YW", "23586": "YW", "23614": "YW", "23615": "SN", "23631": "PB", "23646": "ZS", "23663": "ZT", "23673": "YG", "23762": "TD", "23769": "ZS", "23780": "QJ", "23884": "QK", "24055": "XH", "24113": "DC", "24162": "ZC", "24191": "GA", "24273": "QJ", "24324": "NL", "24377": "TD", "24378": "QJ", "24439": "PF", "24554": "ZS", "24683": "TD", "24694": "WE", "24733": "LK", "24925": "TN", "25094": "ZG", "25100": "XQ", "25103": "XH", "25153": "PB", "25170": "PB", "25179": "KG", "25203": "PB", "25240": "ZS", "25282": "FB", "25303": "NA", "25324": "KG", "25341": "ZY", "25373": "WZ", "25375": "XJ", "25384": "A", "25457": "A", "25528": "SD", "25530": "SC", "25552": "TD", "25774": "ZC", "25874": "ZC", "26044": "YW", "26080": "WM", "26292": "PB", "26333": "PB", "26355": "ZY", "26366": "CZ", "26397": "ZC", "26399": "QJ", "26415": "ZS", "26451": "SB", "26526": "ZC", "26552": "JG", "26561": "TD", "26588": "JG", "26597": "CZ", "26629": "ZS", "26638": "YL", "26646": "XQ", "26653": "KG", "26657": "XJ", "26727": "HG", "26894": "ZC", "26937": "ZS", "26946": "ZC", "26999": "KJ", "27099": "KJ", "27449": "YQ", "27481": "XS", "27542": "ZS", "27663": "ZS", "27748": "TS", "27784": "SC", "27788": "ZD", "27795": "TD", "27812": "O", "27850": "PB", "27852": "MB", "27895": "SL", "27898": "PL", "27973": "QJ", "27981": "KH", "27986": "HX", "27994": "XJ", "28044": "YC", "28065": "WG", "28177": "SM", "28267": "QJ", "28291": "KH", "28337": "ZQ", "28463": "TL", "28548": "DC", "28601": "TD", "28689": "PB", "28805": "JG", "28820": "QG", "28846": "PB", "28952": "TD", "28975": "ZC", "29100": "A", "29325": "QJ", "29575": "SL", "29602": "FB", "30010": "TD", "30044": "CX", "30058": "PF", "30091": "YSP", "30111": "YN", "30229": "XJ", "30427": "SC", "30465": "SX", "30631": "YQ", "30655": "QJ", "30684": "QJG", "30707": "SD", "30729": "XH", "30796": "LG", "30917": "PB", "31074": "NM", "31085": "JZ", "31109": "SC", "31181": "ZC", "31192": "MLB", "31293": "JQ", "31400": "YX", "31584": "YJ", "31896": "ZN", "31909": "ZY", "31995": "XJ", "32321": "PF", "32327": "ZY", "32418": "HG", "32420": "XQ", "32421": "HG", "32438": "LG", "32473": "GJ", "32488": "TD", "32521": "QJ", "32527": "PB", "32562": "ZSQ", "32564": "JZ", "32735": "ZD", "32793": "PB", "33071": "PF", "33098": "XL", "33100": "YA", "33152": "PB", "33261": "CX", "33324": "BP", "33333": "TD", "33406": "YA", "33426": "WM", "33432": "PB", "33445": "JG", "33486": "ZN", "33493": "TS", "33507": "QJ", "33540": "QJ", "33544": "ZC", "33564": "XQ", "33617": "YT", "33632": "QJ", "33636": "XH", "33637": "YX", "33694": "WG", "33705": "PF", "33728": "YW", "33882": "SR", "34067": "WM", "34074": "YW", "34121": "QJ", "34255": "ZC", "34259": "XL", "34425": "JH", "34430": "XH", "34485": "KH", "34503": "YS", "34532": "HG", "34552": "XS", "34558": "YE", "34593": "ZL", "34660": "YQ", "34892": "XH", "34928": "SC", "34999": "QJ", "35048": "PB", "35059": "SC", "35098": "ZC", "35203": "TQ", "35265": "JX", "35299": "JX", "35782": "SZ", "35828": "YS", "35830": "E", "35843": "TD", "35895": "YG", "35977": "MH", "36158": "JG", "36228": "QJ", "36426": "XQ", "36466": "DC", "36710": "JC", "36711": "ZYG", "36767": "PB", "36866": "SK", "36951": "YW", "37034": "YX", "37063": "XH", "37218": "ZC", "37325": "ZC", "38063": "PB", "38079": "TD", "38085": "QY", "38107": "DC", "38116": "TD", "38123": "YD", "38224": "HG", "38241": "XTC", "38271": "ZC", "38415": "YE", "38426": "KH", "38461": "YD", "38463": "AE", "38466": "PB", "38477": "XJ", "38518": "YT", "38551": "WK", "38585": "ZC", "38704": "XS", "38739": "LJ", "38761": "GJ", "38808": "SQ", "39048": "JG", "39049": "XJ", "39052": "HG", "39076": "CZ", "39271": "XT", "39534": "TD", "39552": "TD", "39584": "PB", "39647": "SB", "39730": "LG", "39748": "TPB", "40109": "ZQ", "40479": "ND", "40516": "HG", "40536": "HG", "40583": "QJ", "40765": "YQ", "40784": "QJ", "40840": "YK", "40863": "QJG" };
    },
    getCamelChars: function (str) { var chars = []; for (var i = 0, len = str.length; i < len; i++) { chars.push(this._getChar(str.charAt(i))); } return this._getResult(chars); },
    _getChar: function (ch) { var unicode = ch.charCodeAt(0); if (unicode > 40869 || unicode < 19968) return ch; return this.polyphone[unicode] ? this.polyphone[unicode] : this.char_dict.charAt(unicode - 19968); },
    _getResult: function (chars) {
        var result = [''];
        for (var i = 0, len = chars.length; i < len; i++) {
            var str = chars[i], strlen = str.length;
            if (strlen == 1) {
                for (var j = 0; j < result.length; j++) {
                    result[j] += str;
                }
            } else {
                var swap1 = result.slice(0);
                result = [];
                for (var j = 0; j < strlen; j++) {
                    var swap2 = swap1.slice(0);
                    for (var k = 0; k < swap2.length; k++) {
                        swap2[k] += str.charAt(j);
                    }
                    result = result.concat(swap2);
                }
            }
        }
        return result;
    },
    isMatch: function (str, py) {
        if (py == "") return true;
        if (str == "") return false;
        if (str.indexOf(py) >= 0)
            return true;
        py = py.toUpperCase();
        var v = this.getCamelChars(str);
        for (var i = 0; i < v.length; i++) {
            if (v[i].indexOf(py) >= 0)
                return true;
        }
        return false;
    }
};
Ysh.Pinyin.init();

Ysh.ScrollLoad = function (data, container, fLoadItem, table, itemNum) {
    if (!itemNum)
        itemNum = 20;
    if (data.length < itemNum)
        itemNum = data.length;
    if (!table)
        table = container.children[0];
    if (!fLoadItem)
        fLoadItem = Ysh.BindTable;
    var iIndex = 1;

    for (var i = 0; i < itemNum; i++)
        fLoadItem(data, table, i);

    container.onscroll = function () {
        var scrollTop = this.scrollTop;
        var scrollHeight = table.clientHeight;
        var windowHeight = this.clientHeight;
        if (scrollTop + windowHeight >= scrollHeight) {
            var maxItem = (data.length < (iIndex + 1) * itemNum ? data.length : (iIndex + 1) * itemNum);
            for (var i = iIndex * itemNum; i < maxItem; i++)
                fLoadItem(data, table, i);
            iIndex++;
        }
    };
};

Ysh.BindTable = function (arrData, objTable, i, fTdControl, fTrControl) {
    var tr = objTable.insertRow();
    var tc;
    var titleRow = objTable.rows[0];
    for (var j = 0; j < titleRow.cells.length; j++) {
        var tdTitle = titleRow.cells[j];
        var col = tdTitle.getAttribute("col");
        //tc = tr.insertCell();
        tc = document.createElement("TD");
        if (tdTitle.style.display == "none")
            tc.style.display = "none";
        if (col) {
            if (col == "INDEX")
                tc.innerText = i + 1;
            else
                tc.innerHTML = arrData[i][col];
        }
        tr.appendChild(tc);
        if (fTdControl)
            fTdControl(tc, j);
    }
    if (fTrControl)
        fTrControl(tr, i, arrData[i]);
};

Ysh.ensure = function (obj, attr, def) {
    if (typeof obj[attr] == "undefined") {
        obj[attr] = def;
        return;
    }
    if (obj[attr] == null) {
        obj[attr] = def;
    }
};

Ysh.prompt = function (title, descr, defstr, w, h, f) {
    f = f || function (v) { return true; };
    if (!title)
        title = "输入内容";
    if (!descr)
        descr = "输入内容";
    if (!defstr)
        defstr = "";
    if (isNaN(parseInt(w, 10)))
        w = 400;
    if (isNaN(parseInt(h, 10)))
        h = parseInt(w, 10) * 3 / 4;
    var url = "/p.aspx?ncu=1&f=prompt&title=" + escape(title) + "&desc=" + escape(descr) + "&defstr=" + escape(defstr) + "&tm=" + new Date();
    return Ysh.Web.showModalDialog(url, "", w, h, f);
};

if (!String.prototype.includes) {
    String.prototype.includes = function (search, start) {
        if (typeof start !== 'number') {
            start = 0;
        }

        if (start + search.length > this.length) {
            return false;
        } else {
            return this.indexOf(search, start) !== -1;
        }
    };
}

if (!Array.prototype.includes) {
    Array.prototype.includes = function (search, start) {
        if (typeof start !== 'number') {
            start = 0;
        }
        return this.contains(search);
    };
}

if (!Array.prototype.findIndex) {
    Array.prototype.findIndex = function (f) {
        for (var i = 0; i < this.length; i++) {
            if (f(this[i])) return i;
        }
        return -1;
    }
}

if (!Array.prototype.insert) {
    Array.prototype.insert = function (index, arr) {
        if (arr.length == 0)
            return;
        if (index > this.length)
            index = this.length;
        var offsets = this.length - index;
        var offset = arr.length;
        var length0 = this.length;
        var length1 = this.length + arr.length;
        var i;
        for (i = 0; i < offsets; i++) {
            this[length1 - i - 1] = this[length0 - i - 1];
        }
        for (i = 0; i < offset; i++) {
            this[index + i] = arr[i];
        }
    }
}

if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function (obj) {
        for (var i = 0; i < this.length; i++) {
            if (this[i] == obj)
                return i;
        }
        return -1;
    }
}

if (!Array.prototype.erase) {
    Array.prototype.erase = function (obj) {
        for (var i = 0; i < this.length; i++) {
            if (this[i] == obj)
                break;
        }
        if (i != this.length)
            this.splice(i, 1);
    }
}

if (!Array.prototype.contains) {
    Array.prototype.contains = function (obj) {
        for (var i = 0; i < this.length; i++) {
            if (this[i] == obj)
                return true;
        }
        return false;
    }
}

if (!Array.prototype.swap) {
    Array.prototype.swap = function (idx0, idx1) {
        var obj = this[idx0];
        this[idx0] = this[idx1];
        this[idx1] = obj;
    }
}

if (!Array.prototype.search) {
    Array.prototype.search = function (meetfunc) {
        for (var i = 0; i < this.length; i++) {
            if (meetfunc(this[i]))
                return i;
        }
        return -1;
    }
}

if (!Array.prototype.find) {
    Array.prototype.find = function (predicate) {
        // 1. Let O be ? ToObject(this value).
        if (this == null) {
            throw new TypeError('"this" is null or not defined');
        }

        var o = Object(this);

        // 2. Let len be ? ToLength(? Get(O, "length")).
        var len = o.length >>> 0;

        // 3. If IsCallable(predicate) is false, throw a TypeError exception.
        if (typeof predicate !== 'function') {
            throw new TypeError('predicate must be a function');
        }

        // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
        var thisArg = arguments[1];

        // 5. Let k be 0.
        var k = 0;

        // 6. Repeat, while k < len
        while (k < len) {
            // a. Let Pk be ! ToString(k).
            // b. Let kValue be ? Get(O, Pk).
            // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
            // d. If testResult is true, return kValue.
            var kValue = o[k];
            if (predicate.call(thisArg, kValue, k, o)) {
                return kValue;
            }
            // e. Increase k by 1.
            k++;
        }

        // 7. Return undefined.
        return undefined;
    }
}

if (!Array.prototype.findFirst) {
    Array.prototype.findFirst = function (m, s, e) { if (typeof s == "undefined") s = 0; if (typeof e == "undefined") e = this.length - 1; if (s > e) return -1; for (var i = s; i <= e; i++) { if (m(this[i])) return i; } return -1; }
}

if (!Array.prototype.findLast) {
    Array.prototype.findLast = function (m, s, e) { if (typeof s == "undefined") s = 0; if (typeof e == "undefined") e = this.length - 1; if (s > e) return -1; for (var i = e; i >= s; i--) { if (m(this[i])) return i; } return -1; }
}

if (!Array.prototype.addSkipSame) {
    Array.prototype.addSkipSame = function (o) { if (this.indexOf(o) < 0) this.push(o); }
}

Ysh.Array = {
    pick: function (array, field, value) {
        var ret = [];
        for (var i = 0; i < array.length; i++) {
            var item = array[i];
            if (item[field] == value)
                ret.push(item);
        }
        return ret;
    },
    initN: function (n, o) {
        var array = [];
        for (var i = 0; i < n; i++)
            array.push(o);
        return array;
    },
    join: function (array, separator) {
        if (Ysh.Type.isArray(array))
            return array.join(separator);
        return this.link(array, function (o) { return o.toString(); }, separator);
    },
    linkN: function (offset, array, fToStr, separator, fSkip) {
        if (array.length == 0)
            return "";
        if (typeof separator == "undefined")
            separator = ",";
        if ((null == fSkip) || (typeof fSkip == "undefined"))
            fSkip = function () { return false; };
        var str = "";
        for (var i = 0; i < array.length; i += offset) {
            if (fSkip(array[i]))
                continue;
            if (str.length > 0)
                str += separator;
            str += fToStr(array[i]);
        }
        return str;
    },
    link: function (array, fToStr, separator, fSkip) {
        return this.linkN(1, array, fToStr, separator, fSkip);
    },
    each: function (array, fDo, fSkip) {
        if ((null == fSkip) || (typeof fSkip == "undefined"))
            fSkip = function (v, i) { return false; };
        for (var i = 0; i < array.length; i++) {
            var v = array[i];
            if (!fSkip(v, i))
                fDo(v, i);
        }
    },
    col: function (array, c, def) {
        var ret = [];
        for (var i = 0; i < array.length; i++) {
            var item = array[i];
            var v = item[c];
            ret.push((typeof v == "undefined") ? def : v);
        }
        return ret;
    },
    distinct: function (array, idx) {
        var ret = [];
        for (var i = 0; i < array.length; i++) {
            var v = array[i][idx];
            if (ret.indexOf(v) < 0)
                ret.push(v);
        }
        return ret;
    },
    distinctEx: function (array, f, skip) {
        var ret = [];
        for (var i = 0; i < array.length; i++) {
            var v = f(array[i]);
            if (v == skip)
                continue;
            if (ret.indexOf(v) < 0)
                ret.push(v);
        }
        return ret;
    },
    toArray: function (o) {
        if (o == null)
            return null;
        if (Ysh.Type.isArray(o))
            return o;
        return [o];
    },
    getLast: function (array) {
        return array[array.length - 1];
    },
    first: function (array, meet) {
        var i = Array.prototype.findFirst.apply(array, [meet]);
        return i < 0 ? null : array[i];
    },
    last: function (array, meet) {
        var i = Array.prototype.findLast.apply(array, [meet]);
        return i < 0 ? null : array[i];
    },
    reverse: function (array) {
        var newArray = [];
        for (var i = array.length - 1; i >= 0; i--) {
            newArray.push(array[i]);
        }
        return newArray;
    },
    toObject: function (array, columns, start) {
        start = start || 0;
        var item = {};
        for (var j = start; j < columns.length; j++) {
            item[columns[j]] = array[j - start];
        }
        return item;
    },
    fromObjectList: function (objectList, fields) {
        var ret = [];
        var fieldLength = fields.length;
        for (var i = 0; i < objectList.length; i++) {
            var o = objectList[i];
            var row = [];
            for (var f = 0; f < fieldLength; f++) {
                var key = fields[f];
                row.push(key ? o[key] : "");
            }
            ret.push(row);
        }
        return ret;
    },
    toObjectList: function (array2d, columns, start) {
        start = start || 0;
        var array = [];
        if ((!array2d) || (array2d.length == 0))
            return array;
        if ((typeof columns === "string") || (columns.length == 0)) {
            return array2d;
        }
        if (typeof array2d[0][columns[0]] != "undefined")
            return array2d;
        for (var i = 0; i < array2d.length; i++) {
            array.push(this.toObject(array2d[i], columns, start));
        }
        return array;
    },
    to1d: function (array2d, idx, f) {
        var array = [];
        for (var i = 0; i < array2d.length; i++) {
            var v = array2d[i][idx];
            if (f) v = f(v);
            array.push(v);
        }
        return array;
    },
    toTree: function (array2d, idIdx, pIdx) {
        var tree = {};
        tree.setTreeNode = function (node) {
            node.getId = function () { var id = this.__id; return (typeof id == "undefined") ? "" : id; }
            node.find = function (id) {
                var thisid = this.getId();
                if (thisid == id)
                    return this;
                if (!this.children)
                    return null;
                for (var i = 0; i < this.children.length; i++) {
                    var o = this.children[i].find(id);
                    if (o != null)
                        return o;
                }
                return null;
            };
            node.forEach = function (f) {
                f(this);
                if (!this.children)
                    return;
                for (var i = 0; i < this.children.length; i++)
                    this.children[i].forEach(f);
            };
            node.getSum = function (f) {
                var sum = f(this);
                if (this.children)
                    for (var i = 0; i < this.children.length; i++) {
                        sum += this.children[i].getSum(f);
                    }
                return sum;
            };
            node.contains = function (id) {
                if (!this.relations)
                    this.relations = {};
                var s = this.relations[id];
                if (s === true) return true;
                if (s === false) return false;
                s = (this.find(id) != null);
                this.relations[id] = s;
                return s;
            }
        };
        tree.add = function (data, idcol, pcol) {
            var length = data.length;
            do {
                length = data.length;
                var notmatch = [];
                for (var i = 0; i < data.length; i++) {
                    var item = data[i];
                    var pid = item[pcol]
                    if (pid == item[idcol])
                        pid = "";//父单位是自己的认为是顶级单位
                    var node = this.find(pid);
                    if (node != null) {
                        if (!node.children)
                            node.children = [];
                        var obj = { __id: item[idcol], data: item }
                        this.setTreeNode(obj);
                        obj.parent = node;
                        node.children.push(obj);
                    } else {
                        notmatch.push(item);
                    }
                }
                data = notmatch;
            } while (data.length > 0 && data.length != length);
        }
        tree.setTreeNode(tree);
        tree.add(array2d, idIdx, pIdx);
        return tree;
    },
    groupBy: function (array2d, groupcols, bInOrder) {
        var ret = [];
        var tempgroups = {};
        var gPrev = "";
        var gkey = "";
        for (var i = 0; i < array2d.length; i++) {
            var row = array2d[i];
            var g = "";
            var gv = [];
            for (var j = 0; j < groupcols.length; j++) {
                var s = row[groupcols[j]];
                g += s + "_$_";
                gv.push(s);
            }
            if (bInOrder) {
                if (g != gPrev) {
                    gkey = g + "_@_" + i;
                    gPrev = g;
                }
            } else {
                gkey = g;
            }
            if (tempgroups[gkey]) {
                tempgroups[gkey].push(row);
            } else {
                tempgroups[gkey] = [row];
                var o = { name: gv, data: tempgroups[gkey] };
                for (var j = 0; j < row.length; j++)
                    o[j] = row[j];
                ret.push(o);
            }
        }
        if (ret.length == 0)
            return ret;
        var l = ret[0].data[0].length;
        for (var i = 0; i < ret.length; i++) {
            var o = ret[i];
            for (var j = 0; j < l; j++)
                o[j] = Ysh.Array.to1d(o.data, j);
        }
        return ret;
    },
    groupBy_old: function (array2d, groupcol) {
        var ret = [];
        var tempgroups = {};
        for (var i = 0; i < array2d.length; i++) {
            var row = array2d[i];
            var g = row[groupcol];
            if (tempgroups[g]) {
                tempgroups[g].push(row);
            } else {
                tempgroups[g] = [row];
                var o = { name: g, data: tempgroups[g] };
                for (var j = 0; j < row.length; j++)
                    o[j] = row[j];
                ret.push(o);
            }
        }
        return ret;
    },
    sort: function (id, array2d, idx, type) {
        var options = this.sortOptions[id];
        if (null == options) {
            this.sortOptions[id] = options = {};
        }
        var desc = false;
        if (options.cur === idx) {
            desc = options.asc;
        }
        options.asc = !desc;
        options.cur = idx;
        array2d.sort(function (r1, r2) {
            //localeCompare
            var v1 = r1[idx];
            var v2 = r2[idx];
            if (v1 === v2)
                return 0;
            if (type == "num") {
                v1 = parseFloat(v1);
                v2 = parseFloat(v2);
            }
            if (v1 < v2)
                return desc ? 1 : -1;
            return desc ? -1 : 1;
        });
    },
    sortOptions: {},
    h2v: function (array2d) {
        if (array2d.length == 0)
            return array2d;
        var newArray = [];
        var cols = array2d[0].length;
        for (var i = 0; i < cols; i++)
            newArray.push([]);
        for (var i = 0; i < array2d.length; i++) {
            for (var j = 0; j < cols; j++)
                newArray[j].push(array2d[i][j]);
        }
        return newArray;
    },
    findRowBinary: function (array2d, idxCol, v) {
        var start = 0;
        var end = array2d.length - 1;
        while (start <= end) {
            var mid = parseInt(start + (end - start) / 2);
            var vCur = array2d[mid][idxCol];
            if (v == vCur) {
                return mid;
            } else if (v > vCur) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return -1;
    },
    findRow: function (array2d, idxCol, v) {
        for (var i = 0; i < array2d.length; i++) {
            var array1d = array2d[i];
            if (array1d[idxCol] == v)
                return i;
        }
        return -1;
    },
    reset2d: function (array2d, array1d, cols) {
        var ret = [];
        var idx = 0;
        for (var i = 0; i < array1d.length; i++) {
            var v = array1d[i];
            var row = null;
            for (var j = 0; j < array2d.length; j++) {
                if (array2d[j][idx] == v) {
                    row = array2d[j];
                    break;
                }
            }
            if (!row) {
                row = Ysh.Array.initN(cols + 1, "");
                row[idx] = v;
            }
            ret.push(row);
        }
        return ret;
    },
    combine2d: function (array1, array2, cols) {
        var ret = [];
        var idx1 = 0;
        var idx2 = 0;
        for (var i = 0; i < array1.length; i++) {
            var row = Ysh.Object.clone(array1[i]);
            var v = row[idx1];
            var append = false;
            for (var j = 0; j < array2.length; j++) {
                var row2 = array2[j];
                if (row2[idx2] == v) {
                    append = true;
                    for (var k = 0; k < cols + 1; k++) {
                        if (k == idx2)
                            continue;
                        row.push(row2[k]);
                    }
                    break;
                }
            }
            if (!append) {
                for (var k = 0; k < cols; k++)
                    row.push("");
            }
            ret.push(row);
        }
        return ret;
    },
    combine2dorder: function (array1, array2, cols0, cols) {
        var idx1 = 0;
        var idx2 = 0;
        var keys = [];
        var data = {};
        for (var i = 0; i < array1.length; i++) {
            var row1 = array1[i];
            var key = row1[idx1];
            keys.push(key);
            var row = Ysh.Object.clone(row1);
            for (var j = 0; j < cols; j++) {
                row.push("");
            }
            data[key] = row;
        }
        for (var i = 0; i < array2.length; i++) {
            var row2 = array2[i];
            var key = row2[idx2];
            var row = data[key];
            if (!row) {
                keys.push(key);
                var row = [];
                for (var j = 0; j < cols0 + cols; j++) {
                    if (j == idx1)
                        row[j] = key;
                    else
                        row[j] = "";
                }
                data[key] = row;
            }
            for (var k = 0; k < cols + 1; k++) {
                if (k == idx2)
                    continue;
                row[cols0 + k + (k > idx2 ? -1 : 0)] = row2[k];
            }
        }
        keys.sort();
        var ret = [];
        for (var i = 0; i < keys.length; i++)
            ret.push(data[keys[i]]);
        return ret;
    }
};

Ysh.Group = {
    create: function () {
        return {
            result: [],
            tempgroups: {},
            key: function (name) {
                var gkey = name;
                if (Ysh.Type.isArray(name)) {
                    gkey = name.join("_$_");
                }
                return gkey;
            },
            add: function (name, row) {
                var gkey = this.key(name);
                if (this.tempgroups[gkey])
                    this.tempgroups[gkey].push(row);
                else {
                    this.tempgroups[gkey] = [row];
                    var o = { name: name, data: this.tempgroups[gkey] };
                    this.result.push(o);
                }
            },
            set: function (name, data) {
                var gkey = this.key(name);
                if (!this.tempgroups[gkey]) {
                    var o = { name: name, data: data };
                    this.result.push(o);
                }
                this.tempgroups[gkey] = data;
            },
            contains: function (name) {
                return !!this.tempgroups[this.key(name)];
            }
        };
    }
}

Ysh.App = {
    start: function (path, para) {
        var shell;
        try {
            shell = new ActiveXObject("WScript.Shell");
        }
        catch (E) {
        }
        if (shell) {
            var arrpath = path.split("\\");
            var curpath = "";
            for (var i = 0; i < arrpath.length - 1; i++) {
                if (i == 0) {
                    curpath = arrpath[0];
                } else {
                    curpath = curpath + "\\" + arrpath[i];
                }
            }
            shell.CurrentDirectory = curpath;
            shell.Run('"' + runpath + '"' + para);
        }
    },
    browseFolder: function (title) {
        try {
            if (!title)
                title = "请选择文件路径";
            var shell = new ActiveXObject("Shell.Application");
            var folder = shell.BrowseForFolder(0, title, 0); //起始目录为：我的电脑
            if (folder != null) {
                folder = folder.items();  // 返回 FolderItems 对象
                folder = folder.item();  // 返回 Folderitem 对象
                folder = folder.Path;   // 返回路径
                if (folder.charAt(folder.length - 1) != "\\") {
                    folder = folder + "\\";
                }
                return folder;
            }
        } catch (e) {
            alert(e.message);
        }
        return null;
    }
};

Ysh.CC2000 = {
    getHorizontalAlign: function (a) { a = a % 8; if (a > 3) return "center"; return (a == 1) ? "left" : "right"; },
    getVerticalAlign: function (a) { if (a > 31) return "middle"; if (a > 15) return "bottom"; return "top"; },
    getMergeRangeCol: function (cellctrl, c, r, s, b) { var n = cellctrl.GetMergeRangeJ(c, r, s, b); if (n <= 0) return c; return n; },
    getMergeRangeRow: function (cellctrl, c, r, s, b) { var n = cellctrl.GetMergeRangeJ(c, r, s, b); if (n <= 0) return r; return n; },
    exportFile: function (cellctrl, type, filename) {
        switch (type) {
            case "pdf":
                return cellctrl.ExportPdfFile(filename, -1, 0, 1);
            case "csv":
                return cellctrl.ExportCSVFile(filename, cellctrl.GetCurSheet());
            case "txt":
                return cellctrl.ExportTextFile(",", filename, 1);
            case "xls":
                return cellctrl.ExportExcelFile(filename, -1) != 0;
            default: //xls
                return cellctrl.ExportExcelFile(filename, -1) != 0;
        }
    },
    exportFileDlg: function (cellctrl, type, f, filename) {
        var _this = this;
        if (typeof filename == "undefined") {
            Ysh.Web.showModalDialog("/_selectfile.htm", type + "|*." + type + "||", 480, 150, function (ret) { _this.doExportFileDlg(ret, cellctrl, type, f, filename); return true; });
        } else {
            Ysh.Web.showModalDialog("/_selectpath.htm?filename=" + filename, type + "|*." + type + "||", 480, 150, function (ret) { _this.doExportFileDlg(ret, cellctrl, type, f, filename); return true; });
        }
    },
    doExportFileDlg: function (ret, cellctrl, type, f, filename) {
        if (!ret)
            return true;
        if (f) f();
        try {
            this.exportFile(cellctrl, type, ret);
            //cellctrl.ExportExcelFile(ret, -1);
            Ysh.Web.alert("导出文件成功！");
        } catch (e) {
            Ysh.Web.alert("导出文件失败，请检查导出路径是否存在或者文件是否已被别的程序打开！");
        }
        return true;
    },
    exportExcel: function (cellctrl, f, filename) {
        this.exportFileDlg(cellctrl, "xls", f, filename);
    },
    importExcel: function (cellctrl, templatefile, importfile) {
        function ImportTemplate() {
            this.sheets = [];
            this.loadFile = function (cellctrl, templatefile) {
                var n = cellctrl.OpenFile(templatefile, "");
                if (n < 1) {
                    alert("打开模板文件失败，错误码：" + n);
                    return;
                }
                for (var i = 0; i < cellctrl.GetTotalSheets(); i++) {
                    cellctrl.SetCurSheet(i);
                    var sheet = this.loadCurSheet(cellctrl);
                    sheet.name = cellctrl.GetSheetLabel(i);
                    this.sheets.push(sheet);
                }
                cellctrl.CloseFile();
            };
            this.loadCurSheet = function (cellctrl) {
                var content = new C_FillContent();
                var template = content.loadTemplate(cellctrl);
                var sheet = { group: [], noGroup: [], bottomRows: 0 };
                var groupRow = -1;
                for (var i = 0; i < template.getFieldCount(); i++) {
                    var field = template.field(i);
                    if (field._group != "") {
                        sheet.group.push(field);
                        groupRow = field._rects[0].r0;
                    } else {
                        sheet.noGroup.push(field);
                    }
                }
                if (groupRow > -1) {
                    var totalRows = cellctrl.GetRows(cellctrl.GetCurSheet());
                    sheet.bottomRows = totalRows - groupRow - 1;
                    for (var i = 0; i < sheet.noGroup.length; i++) {
                        var field = sheet.noGroup[i];
                        if (field._rects[0].r0 > groupRow) {
                            field.isTail = true;
                            //把行数换成倒数
                            field._rects[0].r0 = totalRows - field._rects[0].r0 - 1;
                        }
                    }
                }
                return sheet;
            };
            this.loadData = function (cellctrl) {
                for (var i = 0; i < this.sheets.length; i++) {
                    //this.loadSheetData(cellctrl, i, this.sheets[i]);
                    var idx = this.getSheetIndexByName(cellctrl, this.sheets[i].name);
                    if (idx < 0) {
                        idx = i;
                    }
                    this.loadSheetData(cellctrl, idx, this.sheets[i]);
                }
            };
            this.getSheetIndexByName = function (cellctrl, name) {
                for (var i = 0; i < cellctrl.GetTotalSheets(); i++) {
                    if (cellctrl.GetSheetLabel(i) == name)
                        return i;
                }
                return -1;
            };
            this.loadSheetData = function (cellctrl, idx, sheet) {
                var totalRows = cellctrl.GetRows(idx);
                for (var i = 0; i < sheet.noGroup.length; i++) {
                    var field = sheet.noGroup[i];
                    field.value = cellctrl.GetCellString(field._rects[0].c0, (field.isTail ? totalRows - 1 - field._rects[0].r0 : field._rects[0].r0), idx);
                }
                for (var i = 0; i < sheet.group.length; i++) {
                    var field = sheet.group[i];
                    var startRow = field._rects[0].r0;
                    var endRow = totalRows - 1 - sheet.bottomRows;
                    var col = field._rects[0].c0;
                    var value = [];
                    for (var r = startRow; r <= endRow; r++) {
                        var str = cellctrl.GetCellString(col, r, idx);
                        if (str != "")
                            value.push(str);
                        else {
                            if (field.isAutoMerge() && (value.length > 0)) {
                                value.push(value[value.length - 1]);
                            } else {
                                value.push("");
                            }
                        }
                    }
                    field.value = value;
                }
            }
            this.toJson = function () {
                function addGroup(o, group) {
                    for (var i = 0; i < group.length; i++) {
                        var field = group[i];
                        o[field._name] = field.value;
                    }
                }
                var ret = {};
                for (var i = 0; i < this.sheets.length; i++) {
                    var sheet = this.sheets[i];
                    addGroup(ret, sheet.group);
                    addGroup(ret, sheet.noGroup);
                }
                return ret;
            }
        }
        var template = new ImportTemplate();
        template.loadFile(cellctrl, templatefile);
        var n = cellctrl.ImportExcelFile(importfile);
        if (n < 1) {
            alert("读取Excel文件失败：" + importfile);
            return null;
        }
        cellctrl.CloseFile();
        if (cellctrl.GetTotalSheets() < template.sheets.length) {
            alert("Excel表页不足，请检查后重新操作");
            return null;
        }
        template.loadData(cellctrl);
        return template.toJson();
    },
    filterColumns: function (cellctrl, sheetArray, titleRowArray) {
        var sheets = [];
        for (var i = 0; i < sheetArray.length; i++) {
            var s = sheetArray[i];
            var sheet = { "idx": sheetArray[i], "name": cellctrl.GetSheetLabel(s), "cols": [] };
            var r = titleRowArray[i];
            var cols = cellctrl.GetCols(s);
            for (var c = 0; c < cols; c++) {
                sheet.cols.push({ "text": cellctrl.GetCellString(c, r, s), "selected": true });
            }
            sheets.push(sheet);
        }
        var ret = Ysh.Web.showDialog("/_selectcolumns.htm?a=" + new Date(), sheets, "dialogWidth:480px; dialogHeight:360px; center:yes; help:no; resizable:no; status:no;scroll:auto;");
        if (ret) {
            for (var j = 0; j < sheets.length; j++) {
                var sht = sheets[j];
                for (var c = sht.cols.length - 1; c >= 0; c--) {
                    if (!sht.cols[c].selected)
                        cellctrl.DeleteCol(c, 1, sht.idx);
                }
            }
            return true;
        }
        return false;
    }
};

Ysh.Cookie = {
    get: function (name) {
        function getCookieVal(offset) {
            var endstr = document.cookie.indexOf(";", offset);
            if (endstr == -1)
                endstr = document.cookie.length;
            return unescape(document.cookie.substring(offset, endstr));
        }
        var arg = name + "=";
        var alen = arg.length;
        var clen = document.cookie.length;
        var i = 0;
        while (i < clen) {
            var j = i + alen;
            if (document.cookie.substring(i, j) == arg) {
                return getCookieVal(j);
            }
            i = document.cookie.indexOf(" ", i) + 1;
            if (i == 0)
                break;
        }
        return null;
    },
    set: function (name, value) {
        var expdate = new Date();
        expdate.setTime(expdate.getTime() + (10 * 60 * 60 * 1000 * 1));
        var argv = arguments;
        var argc = arguments.length;
        var expires = (argc > 2) ? argv[2] : expdate;
        var path = (argc > 3) ? argv[3] : null;
        var domain = (argc > 4) ? argv[4] : null;
        var secure = (argc > 5) ? argv[5] : false;
        document.cookie = name + "=" + escape(value) + "; expires=" + expires.toGMTString() + ((path == null) ? "" : ("; path=" + path)) + ((secure == true) ? "; secure" : "");
    }
};

Ysh.Compare = {
    compare: function (x, y) {
        if (typeof x === "string")
            return x.localeCompare(y);
        if (typeof y === "string")
            return -(y.localeCompare(x));
        return x - y;

    },
    compareArray: function (x, y) {
        if (!x)
            return -1;
        if (!y)
            return 1;
        return Ysh.Compare.compare(x.join(), y.join());
    },
    compareVoltage: function (x, y) {
        x = Ysh.String.toFloat(x.replace("kV", "").replace("±", ""), x);
        y = Ysh.String.toFloat(y.replace("kV", "").replace("±", ""), y);
        return Ysh.Compare.compare(x, y);
    },
    compareNumber: function (v1, v2) {
        v1 = Ysh.String.toFloat(v1, v1);
        v2 = Ysh.String.toFloat(v2, v2);
        return Ysh.Compare.compare(v1, v2);

    },
    compareAbs: function (v1, v2) {
        v1 = Math.abs(Ysh.String.toFloat(v1, v1));
        v2 = Math.abs(Ysh.String.toFloat(v2, v2));
        return Ysh.Compare.compare(v1, v2);
    },
    getComparison: function (type) {
        switch (type) {
            case "array":
                return Ysh.Compare.compareArray;
            case "voltage":
                return Ysh.Compare.compareVoltage;
            case "number":
                return Ysh.Compare.compareNumber;
            case "abs":
                return Ysh.Compare.compareAbs;
            default:
                return Ysh.Compare.compare;
        }
    }
};

Ysh.Css = {
    hasClass: function (obj, className) { return (!obj || !obj.className) ? false : (new RegExp("\\b" + className + "\\b")).test(obj.className) },
    addClass: function (obj, className) { this.removeClass(obj, className); return obj && (obj.className += (obj.className.length > 0 ? ' ' : '') + className); },
    removeClass: function (obj, className) { return obj && (obj.className = obj.className.replace(new RegExp("^" + className + "\\b\\s*|\\s*\\b" + className + "\\b", 'g'), '')); },
    include: function (url, idx) {
        var css, before = null, head = document.getElementsByTagName("head")[0];

        if (document.createElement) {
            if (url) {
                css = document.createElement('link');
                css.rel = 'stylesheet';
                css.href = url;
            } else css = document.createElement('style');
            css.media = 'all';
            css.type = 'text/css';

            if (idx >= 0) {
                for (var i = 0, ct = 0, len = head.childNodes.length; i < len; i++) {
                    var el = head.childNodes[i];
                    if (!el.tagName) continue;
                    var tagName = el.tagName.toLowerCase();
                    if (ct == idx) {
                        before = el;
                        break;
                    }
                    if (tagName == 'style' || tagName == 'link' && (el.rel && el.rel.toLowerCase() == 'stylesheet' || el.type && el.type.toLowerCase() == 'text/css')) ct++;
                }
            }
            head.insertBefore(css, before);

            return document.styleSheets[before ? idx : document.styleSheets.length - 1];
        } else return alert("I can't create a new stylesheet for you. Sorry.");
    },
    addRule: function (styleSheet, selector, styles) {
        if (!styleSheet) return false;
        if (styleSheet.insertRule) return styleSheet.insertRule(selector + ' {' + styles + '}', styleSheet.cssRules.length);
        if (styleSheet.addRule) {
            styleSheet.addRule(selector, styles);
            return true;
        }
        return false;
    },
    add: function (content) {
        var style;
        if (document.all) {    //IE
            style = document.createStyleSheet();
            style.cssText = content;
        }
        else {
            style = document.createElement("style");
            style.type = "text/css";
            style.textContent = content; //Safari、Chrome 下innerHTML只读
        }
        try { document.getElementsByTagName("head")[0].appendChild(style); } catch (e) { } //IE Error:不支持此接口
    }
};

Ysh.Refs = {
    loads: {},
    create: function (tagName, attr, fInsert) {
        var obj = {
            files: [], //{url: "", loaded: true, callback: [function1, function2]} 加上加载状态来保证js按顺序加载
            include: function (url, callback, args) {
                var url0 = Ysh.String.trimStart(url.toLowerCase(), "\\.");
                var file = this.isIncluded(url0);
                if (file !== false) {
                    if (file.loaded && Ysh.Type.isFunction(callback))
                        callback();
                    else if (!file.loaded) {
                        file.callback.push(callback);
                }
                    return false;
                }
                var fileInst = { url: url0, loaded: false, callback: [callback] };
                this.files.push(fileInst);
                this.insert(url, fileInst, args);
                return true;
            },
            init: function () {
                this.files = [];
                var scripts = document.getElementsByTagName(tagName);
                for (var i = 0; i < scripts.length; i++) {
                    var src = scripts[i][attr];
                    if (src != "")
                        this.files.push({ url: src.toLowerCase(), loaded: true });
                }
            },
            isIncluded: function (url) {
                for (var i = 0; i < this.files.length; i++) {
                    if (this.isSame(this.files[i].url, url))
                        return this.files[i];
                }
                return false;
            },
            isSame: function (url1, url2) {
                if (url1 == url2)
                    return true;
                if (url1.length > url2.length)
                    return url1.endsWith(url2);
                return url2.endsWith(url1);
            }
        };
        obj.insert = fInsert;
        return obj;
    },
    init: function () {
        this.Js.init();
        this.Css.init();
    },
    include_dump: function (urls, callback, args) {
        if (Ysh.Type.isArray(urls)) {
            var allcallback = null;
            var cbRecord = { count: 0, all: 0, bFull: false };
            if (Ysh.Type.isFunction(callback)) {
                allcallback = function () {
                    cbRecord.count++;
                    if (cbRecord.bFull) {
                        if (cbRecord.count == cbRecord.all)
                            callback();
                    }
                }
            }
            for (var i = 0; i < urls.length; i++) {
                if (this.include(urls[i], allcallback, args))
                    cbRecord.all++;
            }
            cbRecord.bFull = true;
            if (cbRecord.all == 0) { /*一个都不用装载*/
                if (Ysh.Type.isFunction(callback))
                    callback();
            }
            return true;
        }
        var url = urls;
        if (url.endsWith(".css")) {
            return this.Css.include(url, callback, args);
        } else {
            return this.Js.include(url, callback, args);
        }
    },
    includeUrl: function (url, callback, args) {
        if (url.indexOf(".css") > 0) {
            return this.Css.include(url, callback, args);
        } else {
            return this.Js.include(url, callback, args);
        }
    },
    includeUrlArray: function (urls, start, allcallback, args) {
        if (start == urls.length) {
            if (Ysh.Type.isFunction(allcallback))
                allcallback();
            return true;
        }
        var o = this;
        return this.includeUrl(urls[start], function () {
            o.includeUrlArray(urls, start + 1, allcallback, args);
        }, args);
    },
    include: function (urls, callback, args) {
        if (Ysh.Type.isArray(urls)) {
            return this.includeUrlArray(urls, 0, callback, args);
        }
        return this.includeUrl(urls, callback, args);
    }
}

Ysh.Refs.Js = Ysh.Refs.create("script", "src", function (url, fileInst, charset) {
    var head = document.getElementsByTagName('head')[0];
    var script = document.createElement('script');
    script.type = 'text/javascript';
    if (charset) script.charset = charset;
    script.src = url;
    if (fileInst && fileInst.callback && fileInst.callback.length > 0 && typeof (fileInst.callback[0]) == 'function') {
        script.onload = script.onreadystatechange = function () {
            if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") {
                fileInst.loaded = true;
                fileInst.callback.forEach(callback => {
                    if (Ysh.Type.isFunction(callback)) {
                callback();
                    }
                });
                console.log(url + " callback");
                script.onload = script.onreadystatechange = null;
            }
        };
    }
    head.appendChild(script);
});

Ysh.Refs.Css = Ysh.Refs.create("link", "href", function (url, fileInst, idx) {
    Ysh.Css.include(url, idx);
    if (!fileInst || !fileInst.callback)
        return false;
    fileInst.loaded = true;
    fileInst.callback.forEach(callback => {
    if (Ysh.Type.isFunction(callback)) {
        callback();
    }
});
    console.log(url + " callback");
});

Ysh.Key = {
    LeftArrow: 37, UpArrow: 38, RightArrow: 39, DownArrow: 40, Escape: 27, Enter: 13, Backspace: 8, Delete: 46, Space: 32
};

Ysh.Object = {
    a: function (o, attr, def) {
        def = def || "";
        if (!o) return def;
        if (typeof o[attr] == "undefined") return def;
        return o[attr];
    },
    add: function (o, attr, v) {
        var v0 = o[attr];
        if (v0)
            o[attr] = v0 + v;
        else
            o[attr] = v;
    },
    addHandle: function (o, event, handle, before) {
        var old = o[event];
        if (!old)
            o[event] = handle;
        else {
            o[event] = function () {
                if (before) {
                    if (handle.apply(this, arguments) === false)
                        return;
                    old.apply(this, arguments);
                } else {
                    old.apply(this, arguments);
                    handle.apply(this, arguments);
                }
            }
        }
    },
    addGetHandle: function (o, event, handle, before) {
        var old = o[event];
        if (!old)
            o[event] = handle;
        else {
            o[event] = function () {
                if (before) {
                    handle.apply(this, arguments);
                    return old.apply(this, arguments);
                } else {
                    var v = old.apply(this, arguments);
                    var newargs = [v];
                    for (var i = 0; i < arguments.length; i++)
                        newargs.push(arguments[i]);
                    return handle.apply(this, newargs);
                }
            }
        }
    },
    link: function (o, fToStr, separator, fSkip) {
        if (typeof separator == "undefined")
            separator = ",";
        if ((null == fSkip) || (typeof fSkip == "undefined"))
            fSkip = function (k, v) { return false; };
        var str = "";
        for (var k in o) {
            var v = o[k];
            if (fSkip(k, v))
                continue;
            if (Ysh.Type.isFunction(v))
                continue;
            if (str.length > 0)
                str += separator;
            str += fToStr(k, v);
        }
        return str;
    },
    each: function (o, fDo, fSkip) {
        if ((null == fSkip) || (typeof fSkip == "undefined"))
            fSkip = function (k, v) { return false; };
        for (var k in o) {
            var v = o[k];
            if (!fSkip(k, v))
                fDo(k, v);
        }
    },
    changeState: function (o, property, states) {
        var idx = states.indexOf(o[property]) + 1;
        o[property] = states[(idx == states.length) ? 0 : idx];
    },
    checkState: function (o, property, states, handles) {
        var idx = states.indexOf(o[property]);
        if (idx < 0)
            idx = 0;
        handles[idx]();
    },
    checkEnabled: function (o, property, handleTrue, handleFalse) {
        this.checkState(o, property, [true, false], [handleTrue, handleFalse]);
    },
    changeStateDo: function (o, property, states, handles) {
        var idx = states.indexOf(o[property]) + 1;
        if (idx == states.length)
            idx = 0;
        o[property] = states[idx];
        handles[idx]();
    }, clone: function (obj) {
        if (Ysh.Type.isArray(obj)) {
            var o = [];
            var i = obj.length;
            while (i--)
                o[i] = this.clone(obj[i]);
            return o;
        }
        if (Ysh.Type.isFunction(obj))
            return obj;
        if (Ysh.Type.isObject(obj)) {
            var o = {};
            for (var k in obj) {
                var v = obj[k];
                if (v === Ysh.Const.DESTORY)
                    delete o[k];
                else
                    o[k] = this.clone(v);
            }
            return o;
        }
        return obj;
    },
    combine: function (dest, src) {
        for (var name in src) {
            var d = dest[name];
            var bCombine = true;
            if (Ysh.Type.isArray(d))
                bCombine = false;
            else if (Ysh.Type.isFunction(d))
                bCombine = false;
            else if (Ysh.Type.isObject(d)) {
                bCombine = true;
            } else
                bCombine = false;
            if (bCombine) {
                this.combine(d, src[name]);
            } else {
                dest[name] = src[name];
            }
        }
        return dest;
    },
    extend: function (dest, src) {
        for (var name in src) {
            dest[name] = src[name];
        }
    },
    extendDeep: function (dest, src) {
        for (var p in src) {
            var v = src[p];
            if ((typeof v == "object") && (v != null)) {
                if (v.constructor == Array) {
                    dest[p] = [];
                    this.extendDeep(dest[p], v);
                } else {
                    dest[p] = {};
                    this.extendDeep(dest[p], v);
                }
            } else {
                dest[p] = v;
            }
        }
    },
    extendNoExist: function (dest, src) {
        for (var name in src) {
            if (typeof dest[name] == "undefined")
                dest[name] = src[name];
        }
    }
};

Ysh.Request = {
    get: function (name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
        var r = window.location.search.substr(1).match(reg);
        if (r != null) return unescape(r[2]); return "";
    }
};

Ysh.Script = {
    include: function (url, charset) {
        var oHead = document.getElementsByTagName('HEAD').item(0);
        var oScript = document.createElement("script");
        oScript.type = "text/javascript";
        if (charset)
            oScript.charset = charset;
        oScript.src = url;
        try {
            oHead.appendChild(oScript);
        }
        catch (e) {
        }
    }
};

if (!String.prototype.replaceAll) {
    String.prototype.replaceAll = function (olds, news) {
        return this.split(olds).join(news);
    };
}

if (!String.prototype.format) {
    String.prototype.format = function () {
        var str = this;
        var arg = arguments;
        if ((arg.length == 1) && (Ysh.Type.isArray(arg[0])))
            arg = arg[0];
        for (var i = 0; i < arg.length; i++) {
            str = str.replaceAll("{" + i + "}", arg[i]);
        }
        return str;
    }
}

if (!String.prototype.formatObject) {
    String.prototype.formatObject = function (o) {
        var str = this;
        for (var name in o) {
            var value = o[name];
            if (Ysh.Type.isFunction(value))
                continue;
            str = str.replaceAll("{" + name + "}", value);
        }
        return str;
    }
}

if (!String.prototype.left) {
    String.prototype.left = function (length) {
        if (length <= 0)
            return "";
        if (this.length <= length)
            return this;
        return this.substr(0, length);
    }
}

if (!String.prototype.right) {
    String.prototype.right = function (length) {
        if (length <= 0)
            return "";
        if (this.length <= length)
            return this;
        return this.substr(this.length - length, length);
    }
}

if (!String.prototype.startsWith) { String.prototype.startsWith = function (str) { return this.left(str.length) == str; } }

if (!String.prototype.endsWith) { String.prototype.endsWith = function (str) { return this.right(str.length) == str; } }

Ysh.String = {
    isEmpty: function (str) { if (str == null) return true; if (typeof str == "string") return str.length == 0; return false; },
    trimStart: function (str, trimChars) {
        if (this.isEmpty(str))
            return "";
        if (this.isEmpty(trimChars))
            return str.replace(/^\s*/g, "");
        return str.replace(new RegExp("^" + trimChars + "*", "g"), "");
    },
    trimEnd: function (str, trimChars) {
        if (this.isEmpty(str))
            return "";
        if (this.isEmpty(trimChars))
            return str.replace(/\s*$/g, "");
        return str.replace(new RegExp(trimChars + "*$", "g"), "");
    },
    trim: function (str, trimChars) {
        if (this.isEmpty(str))
            return "";
        if (this.isEmpty(trimChars))
            return str.replace(/(^\s*)|(\s*$)/g, "");
        return str.replace(new RegExp("^" + trimChars + "*|" + trimChars + "*$", "g"), "");
    },
    isNumber: function (str) { if (this.isEmpty(str)) return false; return !isNaN(str); },
    isPhone: function (str) { return /^(([0\+]\d{2,3}-)?(0\d{2,3})-)?(\d{7,8})(-(\d{3,}))?$/.test(str); }, //has a problem
    isMobilePhone: function (str) { return /^[1][3,4,5,7,8][0-9]{9}$/.test(str); },
    isMail: function (str) { return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(str); },
    isIP: function (str) { return /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/.test(str) },
    isDateTime: function (str) { return /^(?:19|20)[0-9][0-9]-(?:(?:0[1-9])|(?:1[0-2]))-(?:(?:[0-2][1-9])|(?:[1-3][0-1])) (?:(?:[0-2][0-3])|(?:[0-1][0-9])):[0-5][0-9]:[0-5][0-9]$/.test(str) },
    toInt: function (str, def) { if (this.isNumber(str)) return parseInt(str, 10); return def; },
    toFloat: function (str, def) { if (this.isNumber(str)) return parseFloat(str); return def; },
    formatInt: function (n, minLength, check) { var i = n; if (check) { i = parseInt(i, 10); if (!isNaN(i)) return n; }; var min = Math.pow(10, minLength); if (i >= min) return i; return this.right((min + i).toString(), minLength); },
    formatFloat: function (f, digits, check) { if (check) { if (isNaN(f)) return f; f = parseFloat(f); }; return f.toFixed(digits); },
    split2: function (str, sep) { var idx = str.indexOf(sep); if (idx < 0) return [str, ""]; return [str.substring(0, idx), str.substring(idx + sep.length)]; },
    splitMatch: function (str, rgExp) {
        var matches = str.match(new RegExp(rgExp, "g"));
        if (matches == null)
            return [str];
        var ret = [];
        var sidx = 0;
        for (var i = 0; i < matches.length; i++) {
            var m = matches[i];
            var idx = str.indexOf(m, sidx);
            if (idx > sidx) {
                ret.push(str.substring(sidx, idx));
            }
            ret.push(m);
            sidx = idx + m.length;
        }
        if (sidx < str.length) {
            ret.push(str.substring(sidx));
        }
        return ret;
    },
    getMatchInfo: function (str, rgExp) {
        var matches = str.match(new RegExp(rgExp, "g"));
        if (matches == null)
            return [];
        var ret = [];
        var sidx = 0;
        for (var i = 0; i < matches.length; i++) {
            var m = matches[i];
            var idx = str.indexOf(m, sidx);
            ret.push({ text: m, start: idx, isInRange: function (ii) { return (ii >= this.start) && (ii < this.start + this.text.length); } });
            sidx = idx + m.length;
        }
        return ret;
    },
    htmlEncode: function (str) { return str.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;"); },
    htmlDecode: function (str) { return str.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, "\"").replace(/&amp;/g, "&"); },
    isMatchText: function (text, str) {
        str = this.trim(str);
        if (!str) return true;
        str = str.toUpperCase();
        text = text.toUpperCase();
        if (text.indexOf(str) < 0) {
            var pinyins = Ysh.Pinyin.getCamelChars(text);
            for (var i = 0; i < pinyins.length; i++) {
                var pinyin = pinyins[i];
                if (pinyin.indexOf(str) < 0)
                    continue;
                return true;
            }
            return false;
        }
        return true;
    }
};

Ysh.Time = {
    SpanType: { Day: 0, Hour: 1, Minute: 2, Second: 3 },
    add: function (interval, number, dt) {
        var date = new Date(Ysh.Type.isDate(dt) || Ysh.Type.isInteger(dt) ? dt : Ysh.Time.parseDate(dt));
        switch (interval.toLowerCase()) {
            case "y": return new Date(date.setFullYear(date.getFullYear() + number));
            case "m": return new Date(date.setMonth(date.getMonth() + number));
            case "d": return new Date(date.setDate(date.getDate() + number));
            case "w":
            case "ww": return new Date(date.setDate(date.getDate() + 7 * number));
            case "h":
            case "hh": return new Date(date.setHours(date.getHours() + number));
            case "mi":
            case "mm": return new Date(date.setMinutes(date.getMinutes() + number));
            case "ss": return new Date(date.setSeconds(date.getSeconds() + number));
            case "se": return new Date(date.setMonth(date.getMonth() + number * 3));
            case "l": return new Date(date.setMilliseconds(date.getMilliseconds() + number));
        }
    },
    parseDate: function (str) {
        if (Ysh.Type.isDate(str)) return str;
        return Date.parse(str.replace("-", "/").replace("-", "/"));
    },
    Check: {
        compare: function (timestr1, timestr2) {
            return Ysh.Time.parseDate(timestr1) - Ysh.Time.parseDate(timestr2);
        },
        compareTimePart: function (timestr, timepart) {
            var datepart = timestr.split(" ")[0];
            timepartSplit = timepart.split(" ");
            if (timepartSplit.length > 1)
                timepart = timepartSplit[1];
            return this.compare(timestr, datepart + " " + timepart);
        },
        getNoInOrderIndex: function () {
            var timelist = arguments;
            if (arguments.length == 1) {
                if (Ysh.Type.isArray(arguments[0]))
                    timelist = arguments[0];
            }
            var n = timelist.length;
            if (n < 2)
                return -1;
            var datePrev = Ysh.Time.parseDate(timelist[0]);
            for (var i = 1; i < timelist.length; i++) {
                var dateCur = Ysh.Time.parseDate(timelist[i]);
                if (datePrev >= dateCur)
                    return i - 1;
                datePrev = dateCur;
            }
            return -1;
        }
    },
    diff: function (interval, date1, date2) {
        var long = date2.getTime() - date1.getTime(); //相差毫秒
        switch (interval.toLowerCase()) {
            case "y": return parseInt(date2.getFullYear() - date1.getFullYear(), 10);
            case "m": return parseInt((date2.getFullYear() - date1.getFullYear()) * 12 + (date2.getMonth() - date1.getMonth()), 10);
            case "d": return parseInt(long / 1000 / 60 / 60 / 24, 10);
            case "w":
            case "ww": return parseInt(long / 1000 / 60 / 60 / 24 / 7, 10);
            case "h":
            case "hh": return parseInt(long / 1000 / 60 / 60, 10);
            case "mi":
            case "mm": return parseInt(long / 1000 / 60, 10);
            case "ss": return parseInt(long / 1000, 10);
            case "l": return parseInt(long, 10);
        }
    },
    isLeapYear: function (year) {
        return (year % 100 == 0) ? (year % 400 == 0) : (year % 4 == 0);
    },
    getMonthMaxDays: function (year, month) {
        var mday = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        if (this.isLeapYear(year)) mday[1]++;
        return mday[month - 1];
    },
    getSpendTimeStr: function (span, type) {
        function getSpanUnit(t) {
            switch (t) {
                case Ysh.Time.SpanType.Day:
                    return "天";
                case Ysh.Time.SpanType.Hour:
                    return "小时";
                case Ysh.Time.SpanType.Minute:
                    return "分";
                default:
                    return "秒";
            }
        };
        function checkSpan(type, span) {
            if (span == "")
                return "不到1" + getSpanUnit(type);
            return span;
        };
        var ss = parseInt(span / 1000, 10);
        var dd = parseInt(ss / 86400, 10);
        var hh = parseInt((ss % 86400) / 3600, 10);
        var mm = parseInt((ss % 3600) / 60, 10);
        ss = ss % 60;
        var str = "";
        if (dd > 0)
            str += dd + getSpanUnit(Ysh.Time.SpanType.Day);
        if (type == Ysh.Time.SpanType.Day)
            return checkSpan(type, str);
        if (hh > 0)
            str += hh + getSpanUnit(Ysh.Time.SpanType.Hour);
        if (type == Ysh.Time.SpanType.Hour)
            return checkSpan(type, str);
        if (mm > 0)
            str += mm + getSpanUnit(Ysh.Time.SpanType.Minute);
        if (type == Ysh.Time.SpanType.Minute)
            return checkSpan(type, str);
        if (ss > 0)
            str += ss + getSpanUnit(Ysh.Time.SpanType.Second);
        return checkSpan(type, str);
    },
    getSpendTimeStrEx: function (span) {
        var ss = parseInt(span / 1000, 10);
        var dd = parseInt(ss / 86400, 10);
        var hh = parseInt((ss % 86400) / 3600, 10);
        var mm = parseInt((ss % 3600) / 60, 10);
        var str = "";
        if (dd > 0)
            return (parseFloat(ss) / 86400).toFixed(1) + "天";
        if (hh > 0)
            return (parseFloat(ss) / 3600).toFixed(1) + "小时";
        if (mm > 0)
            return (parseFloat(ss) / 60).toFixed(1) + "分";
        if (ss > 0)
            return ss.toFixed(1) + "秒";
    },
    getTimeStart: function (date, unit) {
        switch (unit) {
            case "y": return new Date(date.getFullYear(), 0, 1, 0, 0, 0);
            case "m": return new Date(date.getFullYear(), date.getMonth(), 1, 0, 0, 0);
            case "d": return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);
            case "h":
            case "hh": return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), 0, 0);
            case "mi": // v.getHours() + ":" + v.getMinutes()
            case "mm": return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), 0);
            case "w": return this.getTimeStart(new Date(date - ((date.getDay() + 6) % 7) * 86400000), "d");//周一开始
            default: return date;
        }
    },
    getTime: function (format,tm) {
        var now = tm||new Date();
        if (format == "")
            return now;
        var arr = format.split(',');
        now = this.getTimeStart(now, arr[0]);

        for (var i = 1; (i + 1) < arr.length; i += 2) {
            now = this.add(arr[i], parseInt(arr[i + 1], 10), now);
        }
        return now;
    },
    getTypeFormat: function (type, prev) {
        prev = prev || "";
        switch (type) {
            case 'y': return prev +"100000";
            case 'm': return prev +"110000";
            case 'd': return prev +"111000";
            case "h":
            case "hh": return prev + "111100";
            case "mi":
            case "mm": return prev + "111110";
            case "ss": return prev + "111111";
        }
        return "";
    },
    formatString: function (timestr, format) {
        if (!timestr) return "";
        if (Ysh.Type.isDate(timestr))
            timestr = this.toString(timestr);
        if (!format)
            format = "111111";
        var ff = parseInt(format, 10);
        var v = timestr;
        var sep1, sep2, sep3, sep4, sep5, len;
        var tt = [0, 0, 0, 0, 0, 0];
        len = v.length;
        sep1 = v.indexOf("-");
        if (sep1 < 0) return v;
        sep2 = v.indexOf("-", sep1 + 1);
        if (sep2 < 0) return v;
        sep3 = v.indexOf(" ", sep2 + 1);
        if (sep3 < 0) {
            sep3 = v.indexOf("T", sep2 + 1);
        }
        if (sep3 >= 0) {
            sep4 = v.indexOf(":", sep3 + 1);
            if (sep4 < 0) return v;
            tt[3] = parseInt(v.substring(sep3 + 1, sep4), 10);
            sep5 = v.indexOf(":", sep4 + 1);
            if (sep5 < 0) {
                tt[4] = parseInt(v.substring(sep4 + 1, len), 10);
                tt[5] = 0;
            } else {
                tt[4] = parseInt(v.substring(sep4 + 1, sep5), 10);
                tt[5] = parseInt(v.substring(sep5 + 1, len), 10);
            }
        } else {
            sep3 = len;
        }
        tt[0] = parseInt(v.substring(0, sep1), 10);
        tt[1] = parseInt(v.substring(sep1 + 1, sep2), 10);
        tt[2] = parseInt(v.substring(sep2 + 1, sep3), 10);
        var dt = new Date(tt[0], tt[1] - 1, tt[2], tt[3], tt[4], tt[5]);
        var arrWeek = ["日", "一", "二", "三", "四", "五", "六"]
        for (var i = 1; i < 6; i++) { if (tt[i] < 10) { tt[i] = "0" + tt[i]; } }
        if (isNaN(ff) || (ff < 0)) {
            var vv = format;
            vv = vv.replace("[yy]", ((tt[0] % 100) < 10) ? "0" + (tt[0] % 100) : (tt[0] % 100));
            vv = vv.replace("[y]", tt[0]);
            vv = vv.replace("[m]", tt[1]);
            vv = vv.replace("[d]", tt[2]);
            vv = vv.replace("[hh]", tt[3]);
            vv = vv.replace("[mm]", tt[4]);
            vv = vv.replace("[ss]", tt[5]);
            vv = vv.replace("[w]", arrWeek[dt.getDay()]);
            return vv;
        } else {
            var bFlag = [false, false, false, false, false, false, false];
            for (i = 0; i < 7; i++) { if (ff % 10 != 0) { bFlag[i] = true; }; ff = parseInt(ff / 10, 10); if (ff < 1) break; }
            var vv = "", uu = (bFlag[6]) ? "年月日时分秒" : "-- :: ";
            for (i = 5; i >= 0; i--) { if (bFlag[i]) { vv += tt[5 - i] + uu.substr(5 - i, 1); } }
            return bFlag[6] ? vv : vv.substring(0, vv.length - 1);
        }
    },
    toString: function (v, bDatePart, bMilisecond) {
        if (Ysh.Type.isDate(v)) {
            var y = v.getFullYear();
            var m = v.getMonth() + 1;
            if (m < 10) m = "0" + m;
            var d = v.getDate();
            if (d < 10) d = "0" + d;
            if (bDatePart)
                return y + '-' + m + '-' + d;
            var h = v.getHours();
            var i = v.getMinutes();
            var s = v.getSeconds();
            var r = y + '-' + m + '-' + d + ' '
                + ((h < 10) ? '0' : '') + h + ':' + ((i < 10) ? '0' : '') + i + ':' + ((s < 10) ? '0' : '') + s;
            if (!bMilisecond)
                return r;
            return r + "." + v.getMilliseconds();
        }
        return v;
    },
    getQuarterStartMonth: function (nowMonth) {
        return parseInt(nowMonth / 3) * 3;
    },
    getBaseString: function (time, base) {
        if (!Ysh.Type.isDate(time))
            time = new Date(this.parseDate(time));
        if (!base)
            base = new Date();
        var format = [1, 1, 1, 1, 1, 0]
        if (time.getFullYear() == base.getFullYear()) {
            format[0] = 0;
            if (time.getMonth() == base.getMonth()) {
                format[1] = 0;
                if (time.getDate() == base.getDate())
                    format[2] = 0;
            }
        }
        return this.formatString(time, format.join(""));
    },
    getRangeString: function (start, end, base, sep) {
        if (!base)
            base = new Date();
        if (start)
            start = new Date(this.parseDate(start));
        if (end)
            end = this.getBaseString(new Date(this.parseDate(end)), start || base);
        if (start)
            start = this.getBaseString(start, base);
        if (!start && !end) return "";
        return start + (sep || " - ") + end;
    }
};

Ysh.Number = {
    toFixed: function (o, n) {
        if (!o) return o;
        if (Ysh.Type.isArray(o)) {
            var ret = [];
            for (var i = 0; i < o.length; i++) {
                ret.push(Ysh.Number.toFixed(o[i], n));
            }
            return ret;
        }
        return Ysh.String.toFloat(o).toFixed(n);
    },
    toChinese: function (num) {
        if (!/^\d*(\.\d*)?$/.test(num)) {
            return "";
        }
        if (num == 0)
            return "零";
        var AA = new Array("零", "一", "二", "三", "四", "五", "六", "七", "八", "九");
        var BB = new Array("", "十", "百", "千", "万", "亿", "点", "");
        var a = ("" + num).replace(/(^0*)/g, "").split("."),
            k = 0,
            re = "";
        for (var i = a[0].length - 1; i >= 0; i--) {
            switch (k) {
                case 0:
                    re = BB[7] + re;
                    break;
                case 4:
                    if (!new RegExp("0{4}\\d{" + (a[0].length - i - 1) + "}$").test(a[0]))
                        re = BB[4] + re;
                    break;
                case 8:
                    re = BB[5] + re;
                    BB[7] = BB[5];
                    k = 0;
                    break;
            }
            if (k % 4 == 2 && a[0].charAt(i + 2) != 0 && a[0].charAt(i + 1) == 0) re = AA[0] + re;
            if (a[0].charAt(i) != 0) re = AA[a[0].charAt(i)] + BB[k % 4] + re;
            k++;
        }
        if (a.length > 1) //加上小数部分(如果有小数部分) 
        {
            re += BB[6];
            for (var i = 0; i < a[1].length; i++) re += AA[a[1].charAt(i)];
        }
        if (re.length < 2)
            return re;
        if (re.substr(0, 2) == "一十")
            return re.substr(1);
        return re;
    }
};

Ysh.Web = {
    tipAndFocus: function (ctrl, msg, bkClr) {
        Ysh.Web.alert(msg);
        if (typeof ctrl.focus == "function")
            ctrl.focus();
        if (typeof ctrl.select == "function")
            ctrl.select();
        var clr = ctrl.style.backgroundColor;
        ctrl.style.backgroundColor = (typeof bkClr == "undefined") ? "red" : bkClr;
        function removeBkColor() {
            event.srcElement.style.backgroundColor = clr;
            Ysh.Web.Event.detachEvent(event.srcElement, "propertychange", removeBkColor);
        }
        Ysh.Web.Event.attachEvent(ctrl, "propertychange", removeBkColor);
        return false;
    },
    focusEnd: function (e) {
        e.focus();
        var r = e.createTextRange();
        r.moveStart('character', e.value.length);
        r.collapse(true);
        r.select();
    },
    getEditValue: function (parent) {
        if (parent.children.length == 0)
            return parent.innerText;
        return parent.firstChild.value;
    },
    getHeight: function (ctrl) {
        while (true) {
            var rect = ctrl.getBoundingClientRect();
            var h = rect.bottom - rect.top;
            if (h > 0)
                return h;
            ctrl = ctrl.parentElement;
            if (ctrl == null)
                return 0;
        }
    },
    getParent: function (ctrl, tagname) {
        do {
            ctrl = ctrl.parentNode;
            if (!ctrl)
                return null;
            if (ctrl.tagName == tagname)
                return ctrl;
        } while (true);
        return null;
    },
    getSelectionStart: function (o) {
        if (o.tagName == "TEXTAREA") {
            if (document.selection) {
                o.focus();
                var ds = document.selection;
                var range = ds.createRange();
                var stored_range = range.duplicate();
                stored_range.moveToElementText(o);
                stored_range.setEndPoint("EndToEnd", range);
                o.selectionStart = stored_range.text.length - range.text.length;
                o.selectionEnd = o.selectionStart + range.text.length;
                return o.selectionStart;
            } else return o.selectionStart
        }
        else {
            if (o.createTextRange) {
                o.focus();
                var r = document.selection.createRange().duplicate()
                r.moveEnd('character', o.value.length)
                if (r.text == '') return o.value.length
                return o.value.lastIndexOf(r.text)
            } else return o.selectionStart;
        }
    },
    getSelectionEnd: function (o) {
        if (o.tagName == "TEXTAREA") {
            if (document.selection) {
                o.focus();
                var ds = document.selection;
                var range = ds.createRange();
                var stored_range = range.duplicate();
                stored_range.moveToElementText(o);
                stored_range.setEndPoint("EndToEnd", range);
                o.selectionStart = stored_range.text.length - range.text.length;
                o.selectionEnd = o.selectionStart + range.text.length;
                return o.selectionEnd;
            } else return o.selectionEnd
        }
        else {
            if (o.createTextRange) {
                o.focus();
                var r = document.selection.createRange().duplicate()
                r.moveStart('character', -o.value.length)
                return r.text.length
            } else return o.selectionEnd
        }
    },
    getTextLength: function (o) {
        return o.value.replace(/[^\x00-\xff]/g, "**").length
    },
    isHidden: function (o) {
        if (o.style.display == "none") return true;
        return ((o.style.width + "").left(1) == "0");
    },
    createElement: function (parent, tagName, options,styles) {
        var e = document.createElement(tagName);
        if (options)
            Ysh.Object.extend(e, options);
        if (styles)
            Ysh.Object.extend(e.style, styles);
        parent.appendChild(e);
        return e;
    },
    setHScroll: function (p, scrollobj) {
        var scrollwidth = Math.max(1, $(scrollobj).width());
        var barwidth = 1;
        if (p._bar == null) {
            var childwidth = 0;
            var jp = $(p);
            for (var i = 0; i < p.children.length; i++)
                childwidth += $(p.children[i]).outerWidth();
            barwidth = Math.max(0, jp.width() - childwidth - 15);

            var bar = document.createElement("div");
            var content = document.createElement("div");
            bar.appendChild(content);
            bar.style.display = "inline-block";
            bar.style.width = barwidth;
            bar.style.height = "19px";
            bar.style.overflowX = "scroll";
            bar.style.overflowY = "hidden";
            Ysh.Web.Event.attachEvent(bar, "onscroll", function () {
                var l = bar.scrollLeft;
                l = l * scrollwidth / barwidth;
                bar._scrollobj.scrollLeft = l;
            });
            content.style.backgroundColor = "white";
            content.style.height = "1px";
            p.appendChild(bar);
            p._bar = bar;
            p._content = content;
        } else {
            barwidth = $(p._bar).width();
        }
        //根据比例重新计算宽度
        scrollobj.style.overflowX = "hidden";
        p._content.style.width = scrollobj.scrollWidth * barwidth / scrollwidth;
        p._bar._scrollobj = scrollobj;
    },
    setTextFull: function (obj, fullpara) {
        obj._fullpara = fullpara;
        Ysh.Web.Event.attachEvent(obj, "onkeydown", function () {
            if (!event)
                return;
            if ((event.keyCode != 8) && (event.keyCode != 46))
                return;
            var matches = Ysh.String.getMatchInfo(obj.value, fullpara);
            if (matches.length == 0)
                return;
            var s = Ysh.Web.getSelectionStart(obj);
            var e = Ysh.Web.getSelectionEnd(obj);
            if ((s == 0) && (e == obj.value.length)) //全选
                return;

            if (s == e) { //没有选中，删除前后的内容
                if (event.keyCode == 8) //删前边的
                    s--;
                for (var i = 0; i < matches.length; i++) {
                    var m = matches[i];
                    if (m.isInRange(s)) { //全删
                        s = m.start;
                        obj.value = obj.value.substring(0, s) + obj.value.substring(s + m.text.length);
                        Ysh.Web.setSelectText(obj, s, s);
                        return false;
                    }
                }
                return true; //按正常删
            } else { //选中了内容，删除选中覆盖的内容
                for (var i = 0; i < matches.length; i++) {
                    var m = matches[i];
                    if (m.isInRange(s))
                        s = m.start;
                    if (m.isInRange(e))
                        e = m.start + m.text.length;
                }
                obj.value = obj.value.substring(0, s) + obj.value.substring(e);
                Ysh.Web.setSelectText(obj, s, s);
            }
            return false;
        }); /*
        Ysh.Web.Event.attachEvent(obj, "onselect", function () {
            var s = Ysh.Web.getSelectionStart(obj);
            var e = Ysh.Web.getSelectionEnd(obj);
            if (s != e) {
                alert([s, e]);
            }
        });
        Ysh.Web.Event.attachEvent(obj, "onclick", function () {
            var matches = obj.value.match(new RegExp(fullpara, "g"));
            if (null == matches)
                return;
            var idx = Ysh.Web.getSelectionStart(obj);
            for (var i = 0; i < matches.length; i++) {
            }
        });*/
    },
    setSelectText: function (el, start, end) {
        if (el.createTextRange) {
            var range = el.createTextRange();
            range.collapse();
            range.moveEnd('character', end);
            range.moveStart('character', start);
            range.select();
        }
        if (el.setSelectionRange) {
            el.focus();
            el.setSelectionRange(start, end);  //设光标 
        }
    },
    setFront: function (obj, wnd, index) {
        if (!index) index = -1;
        var doc = wnd ? wnd.document : document;
        //var frmFilter = doc.createElement("<iframe frameborder='0' src='' style=\"position:absolute;visibility:inherit;top:0;left:0; z-index: " + index + ";' filter='progid:dximagetransform.microsoft.alpha(style=0,opacity=0)';\"></iframe>");

        var frmFilter = doc.createElement("iframe");
        frmFilter.frameBorder = 0;
        frmFilter.style.cssText = "position:absolute;visibility:inherit;top:0;left:0; z-index: " + index + ";filter:progid:dximagetransform.microsoft.alpha(style=0,opacity=0)";

        obj.appendChild(frmFilter);
        frmFilter.style.height = frmFilter.parentNode.offsetHeight;
        frmFilter.style.width = frmFilter.parentNode.offsetWidth;
    },
    setPositionFixed: function (obj) {
        var scrollObj = obj.parentElement;
        while (scrollObj) {
            var tag = scrollObj.tagName.toLowerCase();
            if (tag == "body")
                break;
            if (tag == "div") {
                if ((scrollObj.style.overflowX == "auto") || (scrollObj.style.overflowX != "yes"))
                    break;
                var pos = scrollObj.style.position;
                if (pos) pos = pos.toLowerCase();
                if ((pos == "absolute") || (pos == "relative"))
                    break;
            }
            scrollObj = scrollObj.parentElement;
        }
        if (scrollObj) {
            Ysh.Web.Event.attachEvent(scrollObj, "onscroll", function () {
                obj.style.top = scrollObj.scrollTop - 1;
            });
        }
    },
    setWidthFixed: function (obj) {
        var w = "";
        var p = obj.parentElement;
        while (p) {
            if (!Ysh.String.isEmpty(p.style.width)) {
                if (!p.style.width.endsWith("%")) {
                    obj.style.width = p.style.width;
                    return;
                }
            }
            if (!Ysh.String.isEmpty(p.width)) {
                if (!p.width.endsWith("%")) {
                    obj.style.width = p.width;
                    return;
                }
            }
            p = p.parentElement;
        }
    },
    changeDisplay: function (ctrl, same, diff) {
        same = Ysh.Array.toArray(same);
        diff = Ysh.Array.toArray(diff);
        Ysh.Object.changeStateDo(ctrl.style, "display", ["", "none"], [function () {
            Ysh.Array.each(same, function (o) { o.style.display = ""; });
            Ysh.Array.each(diff, function (o) { o.style.display = "none"; });
        }, function () {
            Ysh.Array.each(same, function (o) { o.style.display = "none"; });
            Ysh.Array.each(diff, function (o) { o.style.display = ""; });
        }]);
    },
    MouseDrag: {
        deny: function () { return false; },
        start: function (endHandle, dragHandle, wnd) {
            if (!wnd) wnd = window;
            Ysh.Web.Event.attachEvent(wnd.document.body, "mouseup", endHandle);
            Ysh.Web.Event.attachEvent(wnd.document.body, "mousemove", dragHandle);
            Ysh.Web.Event.attachEvent(wnd.document.body, "selectstart", this.deny);
            if (wnd.document.body.setCapture) {
                wnd.document.body.setCapture();
            }
            else if (window.captureEvents)
                window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
        },
        end: function (endHandle, dragHandle, wnd) {
            if (!wnd) wnd = window;
            Ysh.Web.Event.detachEvent(wnd.document.body, "mousemove", dragHandle);
            Ysh.Web.Event.detachEvent(wnd.document.body, "mouseup", endHandle);
            Ysh.Web.Event.detachEvent(wnd.document.body, "selectstart", this.deny);
            if (wnd.document.body.releaseCapture)
                wnd.document.body.releaseCapture();
            else if (window.releaseEvents)
                window.releaseEvents(Event.MOUSEMOVE | Event.MOUSEUP);
        }
    },
    setMovable: function (dragctrl, movectrl, wnd) {
        if (!wnd) wnd = window;
        dragctrl.style.cursor = "move";
        if (!movectrl) movectrl = dragctrl;
        var xOffset = 0, yOffset = 0;
        function startMove() {
            xOffset = parseInt($(movectrl).position().left, 10) - wnd.event.clientX;
            yOffset = parseInt($(movectrl).position().top, 10) - wnd.event.clientY;
            Ysh.Web.MouseDrag.start(endMove, doMove, wnd);
        }
        function endMove() {
            Ysh.Web.MouseDrag.end(endMove, doMove, wnd);
        }
        function doMove() {
            movectrl.style.left = Math.max(wnd.event.clientX + xOffset, 0) + "px";
            movectrl.style.top = Math.max(wnd.event.clientY + yOffset, 0) + "px";
        }
        Ysh.Web.Event.attachEvent(dragctrl, "mousedown", startMove);
    },
    setMovable2: function (dragctrl, movectrl, wnd) {
        if (!wnd) wnd = window;
        movectrl.style.position = "absolute";
        dragctrl.style.cursor = "move";

        var drag = function (e) {
            var e = e || wnd.event,
                button = e.button || e.which;
            if (button == 1) {
                !+"\v1" ? document.selection.empty() : wnd.getSelection().removeAllRanges();
                movectrl.style.left = e.clientX - movectrl.offset_x + "px";
                movectrl.style.top = e.clientY - movectrl.offset_y + "px";
            } else {
                wnd.document.onmousemove = null;
            }
        }

        var dragstart = function (e) {
            e = e || wnd.event;
            movectrl.offset_x = e.clientX - movectrl.offsetLeft;
            movectrl.offset_y = e.clientY - movectrl.offsetTop;
            document.onmousemove = drag;
            return false;
        }
        dragctrl.onmousedown = dragstart;
        dragctrl.onmouseup = function () {
            document.onmousemove = null;
        }
    },
    setResizable: function (dragctrl, sizectrl, minWidth, maxWidth) {
        dragctrl.style.cursor = "e-resize";
        var xStart = 0, widthStart = 0;
        minWidth = ((typeof minWidth == "undefined") ? 1 : Math.max(minWidth, 1));
        if (typeof maxWidth == "undefined") maxWidth = Math.max(1, sizectrl.parentNode.clientWidth);
        function startSize() {
            xStart = event.clientX;
            widthStart = parseInt(sizectrl.clientWidth, 10);
            Ysh.Web.MouseDrag.start(endSize, doSize);
        }
        function endSize() { Ysh.Web.MouseDrag.end(endSize, doSize); }
        function doSize() {
            sizectrl.style.width = Math.min(Math.max(minWidth, widthStart + (event.clientX - xStart)), maxWidth);
        }
        Ysh.Web.Event.attachEvent(dragctrl, "mousedown", startSize);
    },
    setVResizable: function (dragctrl, sizectrl, minHeight, maxHeight) {
        dragctrl.style.cursor = "n-resize";
        var yStart = 0, heightStart = 0;
        minHeight = ((typeof minHeight == "undefined") ? 1 : Math.max(minHeight, 1));
        if (typeof maxHeight == "undefined") maxHeight = 1000000; //取父节点的高度不行，TR的父节点TBODY没高度
        function startSize() {
            yStart = event.clientY;
            heightStart = parseInt(sizectrl.clientHeight, 10);
            Ysh.Web.MouseDrag.start(endSize, doSize);
        }
        function endSize() { Ysh.Web.MouseDrag.end(endSize, doSize); }
        function doSize() {
            sizectrl.style.height = Math.min(Math.max(minHeight, heightStart + (event.clientY - yStart)), maxHeight);
        }
        Ysh.Web.Event.attachEvent(dragctrl, "mousedown", startSize);
    },
    showModalDialog: function (url, arg, title, width, height, isShadow, fClose, wnd) {
        wnd = wnd || window;
        wnd.dlgArguments = arg;
        if (!fClose) fClose = function (o) { return true; };
        if (!wnd.yshBackgroundDiv) {
            var yshBackgroundDiv = wnd.document.createElement("DIV");
            yshBackgroundDiv.style.cssText = "position:absolute;z-index:1010;background-color:gray;opacity=50;display:none;border:1px;left:0;top:0;width:100%;height:100%";
            //with (yshBackgroundDiv.style) { position = "absolute"; width = "100%"; height = "100%"; zIndex = 1000; left = 0; top = 0; backgroundColor = "#FFFFFF"; display = "none"; filter = "alpha(opacity=50)"; }
            wnd.document.body.appendChild(yshBackgroundDiv);
            wnd.yshBackgroundDiv = yshBackgroundDiv;
        }
        if (!wnd.yshDialogDiv) {
            wnd.yshDialogDiv = wnd.document.createElement("DIV");
            wnd.yshDialogDiv.style.cssText = "position:absolute;z-index:1011;display:none;border:0;";
            //with (wnd.yshDialogDiv.style) { position = "absolute"; zIndex = 1002; backgroundColor = "#FFFFFF"; display = "none"; border = "1px"; }
            wnd.document.body.appendChild(wnd.yshDialogDiv);
            //wnd.yshDialogDiv.innerHTML = '<table style="filter:alpha(opacity=200);width:600px;height:400px;background-color:#ffffff" cellspacing="1" cellpadding="0" border="0"><tr style="background-Color:#EBEFF9;height:25px;vertical-align:middle"><td style="text-align:left" id="tdDlgTitle"></td></tr><tr style="background-Color:#ffffff;"><td style="text-align:center" id="tdDlgContent"></td></tr><tr style="background-Color:#ffffff;height:25px;vertical-align:middle"><td style="text-align:center"><a id="aDlgOK" href="javascript:void(0)">确定</a>&nbsp;&nbsp;<a href="javascript:void(0)" onclick="Ysh.Web.closeDialog(function(p) { return true; });return false;">关闭</a></td></tr></table>';            
            wnd.yshDialogDiv.innerHTML = '<table style="width:100%;height:100%;" cellspacing="0" cellpadding="0" border="0">' +
                '<tr style="background-image:url(/Img/yunxing/title.png);background-repeat: no-repeat;background-size: 100% 130%;height:50px;vertical-align:middle" colspan="2"><td style="width:100%;text-align:center;padding-top:10px;border:0"><span style="color:white;font-family: 宋体;font-size:14px;font-weight:bold">' + title + '</span><img src="/Img/yunxing/close.png" style="width:20px;float:right;cursor:pointer;margin-right:25px;" /></td></tr>' +
                '<tr style="background-image:url(/Img/yunxing/background2.png);background-repeat: no-repeat;background-size: 100% 100%;"><td style="height:95%;border:0;padding:20px 20px;" colspan=2><iframe style="margin:0px;width: 100%; height: 100%;" src="about:blank" frameborder="0"></iframe></td></tr>' +
                '</table>';
        }
        Ysh.Web.setMovable2(wnd.yshDialogDiv.children[0].rows[0], wnd.yshDialogDiv, wnd);
        wnd.yshDialogDiv.style.width = (width > document.body.clientWidth ? document.body.clientWidth : width) + "px";
        wnd.yshDialogDiv.style.height = (height > document.body.clientHeight ? document.body.clientHeight : height) + "px";
        /*wnd.yshDialogDiv.innerHTML = '<table style="width:100%;height:100%;background-color:#ffffff" cellspacing="0" cellpadding="0" border="0">' +
        '<tr style="background-Color:#167e79;height:40px;vertical-align:middle"><td style="width:100%;text-align:left;padding-left:15px"><span style="color:white;font-family: 宋体;font-size:14px;font-weight:bold"></span></td><td style="width:40px;padding-right:8px;cursor:hand"><img src="/i/closewin.png" /></td></tr>' +
        '<tr><td colspan=2><iframe style="margin:0px;width: 100%; height: 100%;" src="' + url + '" scrolling="no" frameborder="0"></iframe></td></tr>' +
        '</table>';*/
        /*var type = "";
        if (title == "电网概况")
            type = "1";
        else if (title == "电厂概况")
            type = "2";
        else if (title == "输电概况")
            type = "3";
        else if (title == "变电概况")
            type = "4";
        else if (title == "直流概况")
            type = "5";
        else if (title == "调度管辖")
            type = "6";
        else if (title == "人员概况")
            type = "7";
        else if (title.indexOf("变电站") >= 0)
            type = "8";
        else if (title.indexOf("电厂") >= 0)
            type = "9";
        else if (title.indexOf("变压器") >= 0)
            type = "10";
        else if (title.indexOf("直流") >= 0)
            type = "11";
        else if (title.indexOf("交流") >= 0)
            type = "12";
        else if (title.indexOf("断路器") >= 0)
            type = "13";
        url = "FakeImg.html?type=" + type+"&width="+width+"&height="+height;//别忘了删了*/
        wnd.yshDialogDiv.children[0].rows[1].cells[0].children[0].src = url;
        //'<iframe style="margin:0px;width: 100%; height: 100%;" src="' + url + '" scrolling="no"></iframe>';
        var rect = wnd.document.body.getBoundingClientRect();
        wnd.yshDialogDiv.style.left = Math.max(0, (rect.right - rect.left - width) / 2) + "px";
        wnd.yshDialogDiv.style.top = Math.max(0, (rect.bottom - rect.top - height) / 2) + "px";

        wnd.closeDlg = function (dlg) {
            if (fClose(dlg ? dlg.returnValue : undefined)) {
                //隐藏div
                wnd.yshBackgroundDiv.style.display = "none";
                wnd.yshDialogDiv.style.display = "none";
                wnd.yshDialogDiv.children[0].rows[1].cells[0].children[0].src = "about:blank";
            }
        }
        wnd.yshDialogDiv.childNodes[0].rows[0].cells[0].children[1].onclick = function () { wnd.closeDlg(); }
        //设置标题
        wnd.yshDialogDiv.children[0].rows[0].cells[0].children[0].innerHTML = title;
        wnd.setDlgTitle = function (title) {
            wnd.yshDialogDiv.children[0].rows[0].cells[0].children[0].innerHTML = title;
        }
        if (!!isShadow)
            wnd.yshBackgroundDiv.style.display = "";
        wnd.yshDialogDiv.style.display = "";
        return wnd.yshDialogDiv;
    },
    showDialog: function (url, arg, filt) {
        var ua = navigator.userAgent.toLowerCase(); //客户端浏览器信息
        var size = "";
        if (window.ActiveXObject)//判断IE浏览器
            size = ua.match(/msie ([\d.]+)/)[1]; //得出IE的版本大小
        if (size == "6.0") {
            var filtarr = filt.split("dialogWidth:");
            if (filtarr.length == 2) {
                var iWidth = parseFloat(filtarr[1].substring(0, filtarr[1].indexOf(";")).replace("px", ""));
                filt = filtarr[0] + "dialogWidth:" + (iWidth + 20).toString() + "px" + filtarr[1].substring(filtarr[1].indexOf(";"));

                filtarr = filt.split("dialogHeight:");
                if (filtarr.length == 2) {
                    iWidth = parseFloat(filtarr[1].substring(0, filtarr[1].indexOf(";")).replace("px", ""));
                    filt = filtarr[0] + "dialogHeight:" + (iWidth + 50).toString() + "px" + filtarr[1].substring(filtarr[1].indexOf(";"));
                }
            }
        }
        try {
            return window.showModalDialog(url, arg, filt);
        }
        catch (e) {
            alert("弹出窗口被阻止，无法获取对应信息"); return undefined;
        }
    },
    showFullScreen: function (url, arg) {
        return this.showDialog(url, arg, "dialogWidth:" + window.screen.availWidth + "px; dialogHeight:" + window.screen.availHeight + "px; center:yes; help:no; resizable:no; status:no;scroll:no;");
    },
    createBackPanel: function (wnd) {
        if (!wnd.yshDlgPanel) {
            wnd.yshDlgPanel = wnd.document.createElement("DIV");
            with (wnd.yshDlgPanel.style) { width = "100%"; height = "100%"; }
            wnd.document.body.appendChild(wnd.yshDlgPanel);
        }
        var yshBackgroundDiv = wnd.document.createElement("DIV");
        with (yshBackgroundDiv.style) { position = "absolute"; width = "100%"; height = "100%"; zIndex = 1000; left = 0; top = 0; backgroundColor = "#FFFFFF"; display = "none"; filter = "alpha(opacity=50)"; }
        //wnd.document.body.appendChild(yshBackgroundDiv);
        wnd.yshDlgPanel.appendChild(yshBackgroundDiv);
        wnd.yshBackgroundDiv = yshBackgroundDiv;
        return yshBackgroundDiv;
    },
    createDialogPanel: function (wnd) {
        if (!wnd.yshDialogDiv) {
            wnd.yshDialogDiv = wnd.document.createElement("DIV");
            with (wnd.yshDialogDiv.style) { position = "absolute"; zIndex = 1002; backgroundColor = "#FFFFFF"; display = "none"; border = "1px"; }
            wnd.document.body.appendChild(wnd.yshDialogDiv);
            wnd.yshDialogDiv.innerHTML = '<table style="filter:alpha(opacity=200);width:600px;height:400px;background-color:#ffffff" cellspacing="1" cellpadding="0" border="0"><tr style="background-Color:#EBEFF9;height:25px;vertical-align:middle"><td style="text-align:left" id="tdDlgTitle"></td></tr><tr style="background-Color:#ffffff;"><td style="text-align:center" id="tdDlgContent"></td></tr><tr style="background-Color:#ffffff;height:25px;vertical-align:middle"><td style="text-align:center"><a id="aDlgOK" href="javascript:void(0)">确定</a>&nbsp;&nbsp;<a href="javascript:void(0)" onclick="Ysh.Web.closeDialog(function(p) { return true; });return false;">关闭</a></td></tr></table>';
            Ysh.Web.setMovable(wnd.yshDialogDiv, wnd.yshDialogDiv, wnd);
        }
        return wnd.yshDialogDiv;
    },
    closeDialog: function (f) {
        if (!f(window.yshDialogDiv.children[0].rows[1].cells[0]))
            return;
        window.yshBackgroundDiv.style.display = "none";
        window.yshDialogDiv.style.display = "none";
    },
    dialog: function (name, html, fClose, l, t, wnd) {
        if (!wnd) wnd = window;
        if (!fClose) fClose = function (o) { return true; };
        var divBack = this.createBackPanel(wnd);
        var divDlg = wnd.document.createElement("DIV");

        function closeDialog(f) {
            if (!f(divDlg.children[0].rows[1].cells[0]))
                return false;
            wnd.yshDlgPanel.innerHTML = "";
            return false;
        }
        with (divDlg.style) { position = "absolute"; zIndex = 1002; backgroundColor = "#FFFFFF"; display = "none"; border = "1px"; }
        wnd.yshDlgPanel.appendChild(divDlg);
        divDlg.innerHTML = '<table style="background-color:#ffffff" cellspacing="1" cellpadding="0" border="0"><tr style="background-Color:#EBEFF9;height:25px;vertical-align:middle"><td style="text-align:left" id="tdDlgTitle"></td></tr><tr style="background-Color:#ffffff;"><td style="text-align:center" id="tdDlgContent"></td></tr><tr style="background-Color:#ffffff;height:25px;vertical-align:middle"><td style="text-align:center"><input type="button" value="确定" class="btnDefault" />&nbsp;&nbsp;<input type="button" class="btnDefault" value="取消" /></td></tr></table>';
        Ysh.Web.setMovable(divDlg.children[0].rows[0].cells[0], divDlg, wnd);

        divDlg.children[0].rows[0].cells[0].innerHTML = name;
        divDlg.children[0].rows[1].cells[0].innerHTML = html;
        divDlg.children[0].rows[2].cells[0].children[0].onclick = function () { closeDialog(fClose); return false; }
        divDlg.children[0].rows[2].cells[0].children[1].onclick = function () { closeDialog(function () { return true; }); return false; }
        var rect = wnd.document.body.getBoundingClientRect();
        divBack.style.display = "";
        divDlg.style.display = "";
        divDlg.style.left = (typeof l == "undefined") || (l == null) ? Math.max(0, (rect.right - rect.left - divDlg.offsetWidth) / 2) : l;
        divDlg.style.top = (typeof t == "undefined") || (t == null) ? Math.max(0, (rect.bottom - rect.top - divDlg.offsetHeight) / 2) : t;
        return divDlg.children[0].rows[1].cells[0];
    },
    createDialogFromCtrl: function (name, panel, parent) {
    },
    openWindow: function (url, title, filt) {
        var ua = navigator.userAgent.toLowerCase(); //客户端浏览器信息
        var size = "";
        if (window.ActiveXObject)//判断IE浏览器
            size = ua.match(/msie ([\d.]+)/)[1]; //得出IE的版本大小
        if (size == "6.0") {
            var filtarr = filt.split("width=");
            if (filtarr.length == 2) {
                var iWidth = parseFloat(filtarr[1].substring(0, filtarr[1].indexOf(",")).replace("px", ""));
                filt = filtarr[0] + "width=" + (iWidth + 20).toString() + filtarr[1].substring(filtarr[1].indexOf(","));

                filtarr = filt.split("height=");
                if (filtarr.length == 2) {
                    var iWidth = parseFloat(filtarr[1].substring(0, filtarr[1].indexOf(",")).replace("px", ""));
                    filt = filtarr[0] + "height=" + (iWidth + 50).toString() + filtarr[1].substring(filtarr[1].indexOf(","));
                }
            }
        }
        try {
            return window.open(url, title, filt);
        }
        catch (e) {
            alert("弹出窗口被阻止，无法获取对应信息"); return undefined;
        }
    },
    setBusy: function (handler, finishmsg) {
        document.body.style.cursor = "wait";
        var src = event ? event.srcElement : null;
        if (src)
            src.style.cursor = "wait";
        window.setTimeout(function () {
            try {
                handler();
                if (finishmsg) {
                    alert(finishmsg);
                }
            } catch (E) {
                alert("页面出现错误：" + E.message);
            }
            document.body.style.cursor = "";
            if (src)
                src.style.cursor = "";
        }, 100);
    },
    getAttributeHtml: function (attr, style) {
        var styleHtml = Ysh.Object.link(style, function (k, v) { return k + ":" + v }, ";", function (k, v) { return (typeof v == "undefined") || (v === ""); });
        var str = Ysh.Object.link(attr, function (k, v) { return k + "='" + v.toString().replaceAll("'", "\"") + "'" }, " ", function (k, v) {
            if ((k == "colspan") || (k == "rowspan")) {
                return (typeof v == "undefined") || (v < 2);
            }
            return (typeof v == "undefined") || (v === "");
        });
        if (styleHtml != "") {
            str += " style='" + styleHtml + "'";
        }
        return str;
    },
    Button: {
        setDefaultCss: function (btn) {
            btn.className = "btnDefault";
            Ysh.Web.Event.attachEvent(btn, "mouseover", function () { btn.className = "btnOver"; });
            Ysh.Web.Event.attachEvent(btn, "mouseout", function () { btn.className = "btnDefault"; });
            Ysh.Web.Event.attachEvent(btn, "focus", function () { btn.blur(); });
        }
    },
    Check: {
        showMessage: function (ctrl, msg) { return Ysh.Web.tipAndFocus(ctrl, msg); },
        isEmpty: function (ctrl, msg) {
            var v = Ysh.String.trim(ctrl.value);
            ctrl.value = v;
            if (v.length > 0)
                return false;
            return !this.showMessage(ctrl, msg);
        },
        //options: { empty: true, integer: false, min: 0, containMin: false, max: 100, containMax: false, unit: "kW" },
        isNumber: function (ctrl, name, options) {
            if (!options) options = {};
            var s = Ysh.String.trim(ctrl.value);
            if (s.length == 0) {
                if (!options.empty)
                    return Ysh.Web.Check.showMessage(ctrl, name + "不能为空！");
                return true;
            }
            if (isNaN(s))
                return Ysh.Web.Check.showMessage(ctrl, name + "必须为数字！");
            var v = parseFloat(s);
            if (options.min != null) {
                if (!options.containMin) {
                    if (v <= options.min)
                        return Ysh.Web.Check.showMessage(ctrl, name + "必须大于" + options.min + (options.unit ? options.unit : ""));
                } else {
                    if (v < options.min)
                        return Ysh.Web.Check.showMessage(ctrl, name + "必须大于或等于" + options.min + (options.unit ? options.unit : ""));
                }
            }
            if (options.max != null) {
                if (!options.containMax) {
                    if (v >= options.max)
                        return Ysh.Web.Check.showMessage(ctrl, name + "必须小于" + options.max + (options.unit ? options.unit : ""));
                } else {
                    if (v > options.max)
                        return Ysh.Web.Check.showMessage(ctrl, name + "必须小于或等于" + options.max + (options.unit ? options.unit : ""));
                }
            }
            if (options.integer) {
                if (v != parseInt(v, 10))
                    return Ysh.Web.Check.showMessage(ctrl, name + "必须是整数！");
            }
            return true;
        },
        isPhone: function (ctrl, name, bCanNULL) {
            var s = Ysh.String.trim(ctrl.value);
            if (s.length == 0) {
                if (!bCanNULL)
                    return Ysh.Web.Check.showMessage(ctrl, name + "不能为空！");
                return true;
            }
            if (Ysh.String.isPhone(s))
                return true;
            return Ysh.Web.Check.showMessage(ctrl, name + "不是正确的电话号码！");
        },
        isMobilePhone: function (ctrl, name, bCanNULL) {
            var s = Ysh.String.trim(ctrl.value);
            if (s.length == 0) {
                if (!bCanNULL)
                    return Ysh.Web.Check.showMessage(ctrl, name + "不能为空！");
                return true;
            }
            if (Ysh.String.isMobilePhone(s))
                return true;
            return Ysh.Web.Check.showMessage(ctrl, name + "不是正确的手机号码！");
        },
        isMail: function (ctrl, name, bCanNULL) {
            var s = Ysh.String.trim(ctrl.value);
            if (s.length == 0) {
                if (!bCanNULL)
                    return Ysh.Web.Check.showMessage(ctrl, name + "不能为空！");
                return true;
            }
            if (Ysh.String.isMail(s))
                return true;
            return Ysh.Web.Check.showMessage(ctrl, name + "不是正确的电子邮件格式！");
        },
        isIP: function (ctrl, name, bCanNULL) {
            var s = Ysh.String.trim(ctrl.value);
            if (s.length == 0) {
                if (!bCanNULL)
                    return Ysh.Web.Check.showMessage(ctrl, name + "不能为空！");
                return true;
            }
            if (Ysh.String.isIP(s))
                return true;
            return Ysh.Web.Check.showMessage(ctrl, name + "不是正确的IP地址！");
        },
        isDateTime: function (ctrl, name, bCanNULL) {
            var s = Ysh.String.trim(ctrl.value);
            if (s.length == 0) {
                if (!bCanNULL)
                    return Ysh.Web.Check.showMessage(ctrl, name + "不能为空！");
                return true;
            }
            if (Ysh.String.isDateTime(s))
                return true;
            return Ysh.Web.Check.showMessage(ctrl, name + "不是正确的时间格式！");
        },
        compareDateTime: function (ctrl1, name1, bCanNULL1, ctrl2, name2, bCanNULL2) {
            if (!Ysh.Web.Check.isDateTime(ctrl1, name1, bCanNULL1))
                return false;
            if (!Ysh.Web.Check.isDateTime(ctrl2, name2, bCanNULL2))
                return false;
            var s1 = Ysh.String.trim(ctrl1.value);
            var s2 = Ysh.String.trim(ctrl2.value);
            if (s1.length == 0 || s2.length == 0)
                return true;
            var timeArray1 = s1.replace(" ", ":").replace(/\:/g, "-").split("-");
            var timeArray2 = s2.replace(" ", ":").replace(/\:/g, "-").split("-");
            var date1 = new Date(timeArray1[0], timeArray1[1], timeArray1[2], timeArray1[3], timeArray1[4], timeArray1[5]);
            var date2 = new Date(timeArray2[0], timeArray2[1], timeArray2[2], timeArray2[3], timeArray2[4], timeArray2[5]);

            if (date1.getTime() >= date2.getTime()) {
                alert("开始时间不能大于结束时间！");
                return false;
            }
            return true;
        },
        isTimeInOder: function (ctrls, names) {
            var values = [];
            Ysh.Array.each(ctrls, function (c) { values.push(c.value); });
            var idxNoInOrder = Ysh.Time.Check.getNoInOrderIndex(values);
            if (idxNoInOrder < 0)
                return true;
            alert(names[idxNoInOrder] + "必须小于" + names[idxNoInOrder + 1]);
            return false;
        },
        isValid: function (ctrl, name, length, bCanNULL) {
            length = length == 0 ? 50 : (length == 1 ? 200 : length);
            var s = Ysh.String.trim(ctrl.value);
            if (s.length == 0) {
                if (!bCanNULL)
                    return Ysh.Web.Check.showMessage(ctrl, name + "不能为空！");
                return true;
            }
            if (s.length > length)
                return this.showMessage(ctrl, name + "内容太长(超过" + length + "字符)，请重新输入!");
            return true;
        }
    },
    Div: {
        setFullHeight: function (div, wnd) {
            var hFull = $(wnd).height();
            var hReal = hFull - div._pos_top - div._space_bottom;
            $(div).height(Math.max(0, hReal));
        },
        setAutoScroll: function (div, heightBottom, wnd) {
            if (!wnd) wnd = window;
            if (!heightBottom) heightBottom = 0;
            div._pos_top = $(div).offset().top;
            div._space_bottom = heightBottom;
            this.setFullHeight(div, wnd);
            div.style.overflowY = "auto";
            if (!div._resize_bind) {
                div._resize_bind = true;
                Ysh.Web.Event.attachEvent(wnd, "onresize", function () {
                    if ($(div).is(":visible"))
                        Ysh.Web.Div.setFullHeight(div, wnd);
                });
            }
        }
    },
    Draw: {
        Point: {
            create: function (x, y) {
                return {
                    "x": x, "y": y,
                    isLeft: function (pt) { return this.x < pt.x; },
                    isTop: function (pt) { return this.y < pt.y; },
                    isSame: function (pt) { return this.x == pt.x && this.y == pt.y; }
                };
            }
        },
        Line: {
            create: function (start, end) {
                return {
                    s: start,
                    e: end,
                    points: null,
                    width: function () { return Math.abs(this.s.x - this.e.x); },
                    height: function () { return Math.abs(this.s.y - this.e.y); },
                    getPoints: function (offset) {
                        if (null == this.points) {
                            var points = [];
                            if (this.s.isSame(this.e)) {
                                points.push(this.s);
                            } else {
                                if (this.width() < this.height()) {
                                    var s, e;
                                    if (this.s.isTop(this.e)) { s = this.s; e = this.e; } else { s = this.e; e = this.s; }
                                    for (var y = s.y; y <= e.y; y += offset) {
                                        points.push(Ysh.Web.Draw.Point.create((e.x - s.x) / (e.y - s.y) * (y - s.y) + s.x, y));
                                    }
                                } else {
                                    var s, e;
                                    if (this.s.isLeft(this.e)) { s = this.s; e = this.e; } else { s = this.e; e = this.s; }
                                    for (var x = s.x; x <= e.x; x += offset) {
                                        points.push(Ysh.Web.Draw.Point.create(x, (e.y - s.y) / (e.x - s.x) * (x - s.x) + s.y));
                                    }
                                }
                            }
                            this.points = points;
                        }
                        return this.points;
                    }
                };
            }
        },
        point: function (pt, clr, size) {
            if (!size)
                size = 1;
            if (!clr)
                clr = "#000000";
            var div = document.createElement('div');
            div.style.left = pt.x + 'px';
            div.style.top = pt.y + 'px';
            div.style.position = "absolute";
            div.style.zIndex = 9999;
            div.style.width = size + "px";
            div.style.height = size + "px";
            div.style.overflow = "hidden";
            div.style.backgroundColor = clr; // "#000000";
            document.body.appendChild(div);
            return div;
        },
        line: function (pt1, pt2, clr, solid, size) {
            if (!size)
                size = 1;
            var ln = Ysh.Web.Draw.Line.create(pt1, pt2);
            var pts = ln.getPoints(solid ? size : size + 1);
            ln = {
                pts: [],
                clear: function () {
                    for (var i = 0; i < this.pts.length; i++) {
                        document.body.removeChild(this.pts[i]);
                    }
                }
            };
            for (var i = 0; i < pts.length; i++) {
                ln.pts.push(this.point(pts[i], clr, size));
            }
            return ln;
        },
        lineObject: function (oLeft, oRight, clr, solid, size) {
            var r1 = oLeft.getBoundingClientRect();
            var r2 = oRight.getBoundingClientRect();

            var pt1 = Ysh.Web.Draw.Point.create(r1.right, (r1.top + r1.bottom) / 2);
            var pt2 = Ysh.Web.Draw.Point.create(r2.left, (r2.top + r2.bottom) / 2);
            return this.line(pt1, pt2, clr, solid, size);
        }, lineTableRow: function (frmDraw, tbl1, tbl2, rowPairs) {
            if (rowPairs.length == 0) {
                frmDraw.drawLines([]);
                return;
            }
            var rect1 = tbl1.getBoundingClientRect();
            var rect2 = tbl2.getBoundingClientRect();
            var topOffset = Math.min(rect1.top, rect2.top);
            function getDrawPos(tr) {
                var r = tr.getBoundingClientRect();
                return (r.top + r.bottom) / 2 - topOffset;
            }
            var lines = [];
            for (var i = 0; i < rowPairs.length; i++) {
                var trLeft = rowPairs[i][0];
                var trRight = rowPairs[i][1];
                lines.push({ l: getDrawPos(trLeft), r: getDrawPos(trRight) });
            }
            frmDraw.setDrawHeight(Math.max(1, Math.max(rect1.bottom, rect2.bottom) - topOffset));
            frmDraw.drawLines(lines);
        }
    },
    Event: {
        isNumKey: function (keycode) {
            return ((keycode >= 48 && keycode <= 57) || (keycode >= 96 && keycode <= 105));
        },
        isCtrlKey: function (keycode) {
            return ("[8][9][20][37][38][39][40][46][110]".indexOf("[" + keycode + "]", 0) != -1);
        },
        attachEvent: function (ctrl, name, handle, useCapture) {
            if (name.left(2) == "on") //防止不小心写了on
                name = name.right(name.length - 2);
            if (ctrl.attachEvent)
                ctrl.attachEvent("on" + name, handle);
            else if (ctrl.addEventListener) {
                if (!useCapture) useCapture = false;
                ctrl.addEventListener(name, handle, false);
            } else {
                if (!ctrl.myEvents)
                    ctrl.myEvents = {};
                if (!ctrl.myEvents[name])
                    ctrl.myEvents[name] = [];
                ctrl.myEvents[name].push(handle);
                ctrl["on" + name] = function () {
                    if (!ctrl.myEvents || !ctrl.myEvents[name])
                        return;
                    Ysh.Array.each(ctrl.myEvents[name], function (e) { e(); });
                };
            }
        },
        detachEvent: function (ctrl, name, handle) {
            if (name.left(2) == "on") //防止不小心写了on
                name = name.right(name.length - 2);
            if (ctrl.detachEvent) {
                ctrl.detachEvent("on" + name, handle);
            } else if (ctrl.removeEventListener) {
                ctrl.removeEventListener(name, handle, false);
            } else if (ctrl.myEvents) {
                if (Ysh.Type.isArray(ctrl.myEvents[name])) {
                    ctrl.myEvents[name].erase(handle);
                }
            }
        },
        attachDelayEvent: function (ctrl, name, handle, delay) {
            this.attachEvent(ctrl, name, function () {
                if (ctrl.timers) {
                    if (typeof ctrl.timers[name] != "undefined")
                        window.clearTimeout(ctrl.timers[name]);
                } else {
                    ctrl.timers = {};
                }
                ctrl.timers[name] = window.setTimeout(function () { handle(); ctrl.timers[name] = undefined; }, delay);
            });
        }
    },
    File: {
        getPath: function (obj) {
            try {
                if (window.navigator.userAgent.indexOf("MSIE") >= 1) {
                    obj.select();
                    var f = obj.document.selection.createRange().text;
                    if (f) return f;
                }
                if (window.navigator.userAgent.indexOf("Firefox") >= 1) {
                    if (obj.files)
                        return window.URL.createObjectURL(obj.files[0]);
                    //return obj.files.item(0).getAsDataURL();
                }
            }
            catch (E) { }
            return obj.value;
        }
    },
    Select: {
        getSelectedValue: function (sSrc) {
            if (sSrc.selectedIndex < 0)
                return "";
            return sSrc.options[sSrc.selectedIndex].value;
        },
        getSelectedText: function (sSrc) {
            var l = sSrc.options.length;
            for (var i = 0; i < l; i++) {
                var opt = sSrc.options[i];
                if (opt.selected)
                    return opt.text;
            }
            return "";
        },
        getText: function (sSrc, v) {
            var l = sSrc.options.length;
            for (var i = 0; i < l; i++) {
                var opt = sSrc.options[i];
                if (opt.value != v)
                    continue;
                return opt.text;
            }
            return "";
        },
        setSelected: function (s, v) {
            for (var i = 0; i < s.options.length; i++) {
                var opt = s.options[i];
                if (opt.value == v) {
                    s.selectedIndex = i;
                    return opt;
                }
            }
            return null;
        },
        setSelectedByText: function (s, v) {
            for (var i = 0; i < s.options.length; i++) {
                var opt = s.options[i];
                if (opt.innerText == v) {
                    s.selectedIndex = i;
                    return opt;
                }
            }
            return null;
        },
        addOption: function (sSrc, value, text) {
            var oOption = document.createElement("OPTION");
            sSrc.options.add(oOption);
            oOption.innerText = text;
            oOption.title = text;
            oOption.value = value;
            return oOption;
        },
        clear: function (sSrc) { for (var i = 0; sSrc.length = 0; i++) { sSrc.remove(i); } }
        , input: null, hideInput: function () { if (this.input != null) this.input.style.display = "none"; }
        , refreshDropDown: function (sel, text) {
            //function refreshSelectDropDown(sel, text) {
            var l = sel.options.length;
            var arr = [];
            var textUpperCase = text.toUpperCase();
            for (var i = 0; i < l; i++) {
                var opt = sel.options[i];
                if (Ysh.Pinyin.isMatch(opt.text, textUpperCase)) {
                    arr.push([opt.value, opt.text]);
                }
            }
            if (Ysh.Web.Text.dll != null)
                Ysh.Web.Text.dll.style.display = "none";
            Ysh.Web.Text.setDropDownList(Ysh.Web.Select.input.firstChild, arr, function (key, text) {
                sel.value = key;
                if (key == "") {//空的选不中，看看第一个是不是空的
                    if (sel.options.length > 0) {
                        if (sel.options[0].value == "")
                            sel.selectedIndex = 0;
                    }
                }
                sel.fireEvent("onchange");
                sel._search = "";
                Ysh.Web.Select.input.style.display = "none";
            }, true, sel);
            //}
        }
        , setInput: function (sel) {
            if (Ysh.Web.Select.input == null) {
                var dom = document.createElement('div'), frame = document.createElement('iframe');
                document.body.appendChild(dom);
                with (frame) { //用来在ie6下遮住select元素 
                    setAttribute('frameborder', '0');
                    setAttribute('scrolling', 'no');
                    style.cssText = 'padding:2px;z-index:10000;position:absolute;left:0;top:0;visibility: inherit;height:100%;',
                        style.filter = "progid:dximagetransform.microsoft.alpha(style=0,opacity=0)"
                }
                with (dom) {
                    style.cssText = "z-index:10001";
                    //appendChild(frame);
                    dom.innerHTML = "<input type='text' style='border:1px solid #797979;width:100%;height:100%' />"
                }
                Ysh.Web.Select.input = dom;
                Ysh.Web.Select.input.onmouseout = function () {
                    this.style.width = "1px";
                }
                Ysh.Web.Event.attachEvent(Ysh.Web.Select.input.firstChild, "onblur", function () {
                    Ysh.Web.Select.input.style.display = "none";
                });
                with (Ysh.Web.Select.input.firstChild) {
                    onclick = function (e) {
                        e = e || window.event;
                        e.cancelBubble = true;
                        Ysh.Web.Select.refreshDropDown(Ysh.Web.Select.input._sel, Ysh.Web.Select.input.firstChild.value);
                        return false;
                    };
                    onkeyup = function () {
                        Ysh.Web.Select.input._sel._search = Ysh.Web.Select.input.firstChild.value;
                        Ysh.Web.Select.refreshDropDown(Ysh.Web.Select.input._sel, Ysh.Web.Select.input.firstChild.value);
                    }
                }
            }
            Ysh.Web.Select.input.style.display = "";
            Ysh.Web.Select.input._sel = sel;
            Ysh.Web.Select.input.firstChild.value = (sel._search ? sel._search : "");
            Ysh.Web.Select.input.isHide = false;

            var self = sel;
            Ysh.Web.Select.input.style.width = "";
            var txtbox = self.getBoundingClientRect();
            var left = txtbox.left + document.documentElement.scrollLeft;
            var top = txtbox.top + document.documentElement.scrollTop;
            var width = txtbox.right - txtbox.left;
            Ysh.Web.Select.input.style.cssText = 'position:absolute;left:' + (left) + 'px;top:' + (top - 1) + 'px;width:' + (self.offsetWidth) + 'px;height:' + (self.offsetHeight) + 'px';
            //Ysh.Web.Select.input.style.cssText = 'position:absolute;left:' + (left - 2) + 'px;top:' + (top - 3) + 'px;width:' + self.offsetWidth + 'px;height:' + self.offsetHeight + 'px';
            Ysh.Web.Select.input.firstChild.focus();
        }
    },
    Table: {
        clearRows: function (tbl, remain) {
            while (tbl.rows.length > remain)
                tbl.deleteRow(-1);
        },
        isLastVisible: function (tr, td) {
            var lngth = tr.cells.length;
            for (var i = lngth - 1; i >= 0; i--) {
                var cell = tr.cells[i];
                if (cell.style.display == "none")
                    continue;
                return cell == td;
            }
            return false;
        },
        setColumnHide: function (tbl, c, bHide) {
            var display = bHide ? "none" : "";
            for (var r = 0; r < tbl.rows.length; r++)
                tbl.rows[r].cells[c].style.display = display;
        },
        setColumnWidth: function (tbl, rowIndex, cStart, widths, cols) {
            var width = widths / cols;
            var row = tbl.rows[rowIndex];
            for (var c = cStart; c < row.cells.length; c++)
                row.cells[c].style.width = width + "%";
        },
        setGridStyle: function (tbl, pos, gridStyle, borderStyle) {
            Ysh.ensure(pos, "rowStart", 0);
            Ysh.ensure(pos, "rowEnd", pos.rowStart);
            Ysh.ensure(pos, "colStart", 0);
            Ysh.ensure(pos, "colEnd", pos.colStart);
            for (var r = pos.rowStart; r <= pos.rowEnd; r++) {
                var row = tbl.rows[r];
                for (var c = pos.colStart; c <= pos.colEnd; c++) {
                    var cell = row.cells[c];
                    if (r == pos.rowStart) {
                        cell.style.borderTop = borderStyle;
                        cell.style.borderBottom = (pos.rowStart == pos.rowEnd) ? borderStyle : gridStyle;
                    } else if (r == pos.rowEnd) {
                        cell.style.borderBottom = borderStyle;
                    } else {
                        cell.style.borderBottom = gridStyle;
                    }
                    if (c == pos.colStart) {
                        cell.style.borderLeft = borderStyle;
                        cell.style.borderRight = (pos.colStart == pos.colEnd) ? borderStyle : gridStyle;
                    } else if (c == pos.colEnd) {
                        cell.style.borderRight = borderStyle;
                    } else {
                        cell.style.borderRight = gridStyle;
                    }
                }
            }
        },
        setInnerHTML: function (tbl, html) {
            if (navigator && navigator.userAgent.match(/msie/i)) {
                var temp = tbl.ownerDocument.createElement('div');
                temp.innerHTML = '<table><tbody>' + html + '</tbody></table>';
                if (tbl.tBodies.length == 0) {
                    tbl.appendChild(tbl.ownerDocument.createElement("tbody"));
                }
                tbl.replaceChild(temp.firstChild.firstChild, tbl.tBodies[0]);
            } else {
                tbl.innerHTML = html;
            }
        },
        setCheckBoxState: function (tbl, rowStart, colCheckBox, bChecked, rowSpan, bottomRows) {
            if (typeof rowSpan == "undefined")
                rowSpan = 1;
            if (typeof bottomRows == "undefined")
                bottomRows = 0;
            for (var i = rowStart; i < tbl.rows.length - bottomRows; i += rowSpan) {
                var tdItemCheckBox = tbl.rows[i].cells[colCheckBox];
                if (!tdItemCheckBox)
                    continue;
                if (tdItemCheckBox.children.length > 0) {
                    tdItemCheckBox.children[0].checked = bChecked;
                }
            }
        },
        setRowsState: function (tbl, rowStart, state, value, rowSpan) {
            if (typeof rowSpan == "undefined")
                rowSpan = 1;
            for (var i = rowStart; i < tbl.rows.length; i += rowSpan) {
                for (var j = 0; j < rowSpan; j++) {
                    tbl.rows[i + j][state] = value;
                }
            }
        },
        setFixedRowStyle: function (tbl, rowCount) {
            var tblIndex = tbl.style.zIndex;
            if (!tblIndex)
                tblIndex = 1;
            else
                tblIndex++;
            tbl.style.postion = "absolute";
            tbl.style.zIndex = tblIndex;
            for (var r = 0; r < rowCount; r++) {
                var row = tbl.rows[r];
                for (var c = 0; c < row.cells.length; c++) {
                    row.cells[c].style.zIndex = tblIndex;
                    row.cells[c].style.position = "relative";
                }
            }
        },
        setFixedColumnStyle: function (tbl, colCount, startRow, endRow) {
            var tblIndex = tbl.style.zIndex;
            if (!tblIndex)
                tblIndex = 1;
            else
                tblIndex++;
            tbl.style.postion = "absolute";
            tbl.style.zIndex = tblIndex;
            for (var r = startRow; r <= endRow; r++) {
                var row = tbl.rows[r];
                for (var c = 0; c < colCount; c++) {
                    row.cells[c].style.zIndex = tblIndex;
                    row.cells[c].style.position = "relative";
                }
            }
        },
        setFixedRow: function (tbl, rowCount) {
            this.setFixedRowStyle(tbl, rowCount);
            var p = tbl.parentElement;
            if (typeof p.scrollTop_prev != "undefined") {
                for (var r = 0; r < rowCount; r++) {
                    var row = tbl.rows[r];
                    for (var c = 0; c < row.cells.length; c++) {
                        row.cells[c].style.top = 0;
                    }
                }
                tbl.parentElement.scrollTop_prev = 0;
                tbl.parentElement.scrollTop = 0;
                p.onscroll = null;
                //return;
            }
            Ysh.Web.Event.attachEvent(p, "onscroll", function () {
                if (p != tbl.parentElement) //已经失效了
                    return;
                var thisTop = p.scrollTop;
                if (p.scrollTop_prev == thisTop)
                    return;
                for (var r = 0; r < rowCount; r++) {
                    var row = tbl.rows[r];
                    for (var c = 0; c < row.cells.length; c++) {
                        row.cells[c].style.top = thisTop - 1;
                    }
                }
                p.scrollTop_prev = thisTop;
            });
        },
        setFixedColumn: function (tbl, colCount, startRow, endRow) {
            if (!startRow) startRow = 0;
            if (!endRow) endRow = tbl.rows.length - 1;
            this.setFixedColumnStyle(tbl, colCount, startRow, endRow);
            var p = tbl.parentElement;
            Ysh.Web.Event.attachEvent(p, "onscroll", function () {
                if (p != tbl.parentElement) //已经失效了
                    return;
                var thisLeft = p.scrollLeft;
                if (p.scrollLeft_prev == thisLeft)
                    return;
                for (var r = startRow; r <= endRow; r++) {
                    var row = tbl.rows[r];
                    for (var c = 0; c < colCount; c++) {
                        row.cells[c].style.left = thisLeft;
                    }
                }
                p.scrollLeft_prev = thisLeft;
            });
        },
        setFixedBorder: function (tbl, rowCount, colCount) {
            var startRow = 0, endRow = tbl.rows.length - 1;
            this.setFixedColumnStyle(tbl, colCount, startRow, endRow);
            this.setFixedRowStyle(tbl, rowCount);
            for (var r = startRow; r <= Math.min(endRow, rowCount - 1); r++) {
                for (var c = 0; c < colCount; c++) {
                    tbl.rows[r].cells[c].style.zIndex++;
                }
            }
            var p = tbl.parentElement;
            Ysh.Web.Event.attachEvent(p, "onscroll", function () {
                p.scrollTimerId = window.setTimeout(function () {
                    var thisLeft = p.scrollLeft;
                    if (p.scrollLeft_prev != thisLeft) {
                        for (var r = startRow; r <= endRow; r++) {
                            var row = tbl.rows[r];
                            for (var c = 0; c < colCount; c++) {
                                row.cells[c].style.left = thisLeft;
                            }
                        }
                        p.scrollLeft_prev = thisLeft;
                    }
                    var thisTop = p.scrollTop;
                    if (p.scrollTop_prev != thisTop) {
                        for (var r = 0; r < rowCount; r++) {
                            var row = tbl.rows[r];
                            for (var c = 0; c < row.cells.length; c++) {
                                row.cells[c].style.top = thisTop;
                            }
                        }
                        p.scrollTop_prev = thisTop;
                    }
                }, 100);
            });
        },
        setTitleDisplayCtrl: function (p, tbl, rowCount) { //目前不支持有行合并的情况
            if (!rowCount)
                rowCount = 1;
            function setTableColumnsState(cStart, cCount, showState) {
                var rowStart = rowCount;
                var rowEnd = tbl.rows.length;
                showState = (showState ? "" : "none");
                for (var r = rowStart; r < rowEnd; r++) {
                    for (var c = 0; c < cCount; c++)
                        tbl.rows[r].cells[cStart + c].style.display = showState;
                }
            }
            var panel = Ysh.Web.createElement(p, "span");  //TODO:表头列没合并，表数据列合并时不对，例如ListShow
            for (var r = 0; r < rowCount; r++) {
                var row = tbl.rows[r];
                var cStart = 0;
                for (var c = 0; c < row.cells.length; c++) {
                    var cell = row.cells[c];
                    var colspan = cell.colSpan;
                    var str = "";
                    if (cell.title != "nouse") {
                        str = cell.title;
                        if (str == "")
                            str = cell.innerText;
                    }
                    if (str != "") {
                        var span = Ysh.Web.createElement(panel, "span");
                        span.innerHTML = "<input style='margin-left:5px' type=checkbox />" + str;
                        span.cStart = cStart;
                        span.colspan = colspan;
                        span.onclick = function () { var checked = !this.children[0].checked; this.children[0].checked = checked; setTableColumnsState(this.cStart, this.colspan, checked); }
                    }
                    cStart += parseInt(colspan, 10);
                }
            }
        },
        delayLoad: function (tbl, data, rowsPerGroup, fShowRow, bottomrows, fLoadFinish) {
            if (!fShowRow) {
                fShowRow = function (row, data, r) {
                    var item = data[r];
                    for (var i = 0; i < item.length; i++) {
                        var cell = row.insertCell(-1);
                        cell.innerText = item[i];
                    }
                }
            }
            Ysh.delayLoad(data, rowsPerGroup, function (data, r) {
                var row = (bottomrows) ? tbl.insertRow(tbl.rows.length - bottomrows) : tbl.insertRow(-1);
                fShowRow(row, data, r);
            }, 0, fLoadFinish);
        } //
    },
    Text: {
        addText: function (textbox, v) {
            function getFullPos(obj, fullpara, pos) {
                var matches = Ysh.String.getMatchInfo(obj.value, fullpara);
                if (matches.length == 0)
                    return pos;
                for (var i = 0; i < matches.length; i++) {
                    var m = matches[i];
                    if (m.isInRange(pos) && (pos != m.start))
                        return m.start + m.text.length;
                }
                return pos;
            }
            var str = textbox.value;
            var pos = Ysh.Web.getSelectionStart(textbox);// this.getCursorPosition(textbox);
            var fullpara = textbox._fullpara;
            if (fullpara) {
                pos = getFullPos(textbox, fullpara, pos);
            }
            textbox.value = str.substring(0, pos) + v + str.substring(pos);
            Ysh.Web.setSelectText(textbox, pos + v.length, pos + v.length);
        },
        ClearBkImage: function () {
            var obj = event.srcElement; if (!obj._bkImg) obj._bkImg = obj.style.backgroundImage; obj.style.backgroundImage = "none";
        },
        getCursorPosition: function (textbox) {
            textbox.focus();
            var rang = document.selection.createRange();
            rang.setEndPoint("StartToStart", textbox.createTextRange());
            return rang.text.length;
        },
        SetBkImage: function () {
            var obj = event.srcElement; if (Ysh.String.trim(obj.value).length > 0) return; obj.style.backgroundImage = obj._bkImg; obj.style.backgroundRepeat = "no-repeat";
        },
        ResetBkImage: function () {
            if ((!event) || (event.propertyName != "value"))
                return;
            var obj = event.srcElement;
            if (!obj._bkImg) obj._bkImg = obj.style.backgroundImage;
            if (Ysh.String.trim(obj.value).length > 0) {//隐藏背景
                if (obj.style.backgroundImage == "none")
                    return;
                obj.style.backgroundImage = "none";
            } else {//显示背景
                if (obj.style.backgroundImage != "none")
                    return;
                obj.style.backgroundImage = obj._bkImg.format($(obj).width()); obj.style.backgroundRepeat = "no-repeat";
            }
        }, ddl: null, hideDropDownList: function () { if (this.ddl != null) this.ddl.style.display = "none"; },
        setDropDownList: function (txtobj, arrstr, fSelected, bIncludeEmpty, ddlBox) {
            if (!bIncludeEmpty) {
                if (arrstr.length == 0)
                    return;
            }
            if (Ysh.Web.Text.ddl == null) {
                var dom = document.createElement('div'), frame = document.createElement('iframe'), ul = document.createElement('ul');
                document.body.appendChild(dom);
                with (frame) { //用来在ie6下遮住select元素 
                    setAttribute('frameborder', '0');
                    setAttribute('scrolling', 'no');
                    style.cssText = 'z-index:10000;position:absolute;left:0;top:0;visibility: inherit;height:100%;',
                        style.filter = "progid:dximagetransform.microsoft.alpha(style=0,opacity=0)"
                }
                with (dom) { //对弹出层li元素绑定onmouseover，onmouseover 
                    className = "autoDis";
                    style.cssText = "z-index:10001";
                    //appendChild(frame);
                    ul.style.borderStyle = "solid";
                    ul.style.borderColor = "#D4D0C8";
                    ul.style.borderWidth = "1px";
                    appendChild(ul);
                    onmouseover = function (e) { //在li元素还没有加载的时候就绑定这个方法，通过判断target是否是li元素进行处理 
                        e = e || window.event;
                        var target = e.srcElement || e.target;
                        if (target.tagName == 'LI') { //添加样式前先把所有的li样式去掉，这里用的是一种偷懒的方式，没有单独写removeClass方法 
                            for (var i = 0, lis = Ysh.Web.Text.ddl.getElementsByTagName('li'); i < lis.length; i++)
                                //lis[i].className = '';
                                Ysh.Css.removeClass(target, "cur");
                            Ysh.Css.addClass(target, "cur");
                            //target.className = "cur"; //也没有写addClass方法，直接赋值了 
                        }
                    };
                    onmouseout = function (e) {
                        e = e || window.event;
                        var target = e.srcElement || e.target;
                        if (target.tagName == 'LI')
                            //target.className = '';
                            Ysh.Css.removeClass(target, "cur");
                    };
                }
                Ysh.Web.Text.ddl = dom;
            }
            Ysh.Web.Text.ddl.isHide = false;
            Ysh.Web.Text.ddl.style.display = "";
            txtobj.onblur = function () { if (Ysh.Web.Text.ddl) Ysh.Web.Text.ddl.isHide = true; setTimeout(function () { if (Ysh.Web.Text.ddl.isHide) Ysh.Web.Text.ddl.style.display = 'none'; txtobj.onblur = null; }, 300); }
            if (!txtobj._useddl) {
                Ysh.Web.Event.attachEvent(txtobj, "onblur", function () { if (Ysh.Web.Text.ddl) Ysh.Web.Text.ddl.isHide = true; setTimeout(function () { if (Ysh.Web.Text.ddl.isHide) Ysh.Web.Text.ddl.style.display = 'none'; }, 300); });
                txtobj._useddl = true;
            }
            var self = txtobj;
            var bak = [], baks = [], s, li = [], left = 0, top = 0, val = self.value;
            for (var i = 0, leng = arrstr.length; i < leng; i++) { //判断input的数据是否与数据源里的数据一致 

                var itemText = arrstr[i];
                var itemKey = itemText;
                if (Ysh.Type.isArray(itemText)) {
                    itemKey = itemText[0];
                    itemText = itemText[1];
                }
                bak.push(itemText + "<span style='display:none'>" + itemKey + "</span>");
                baks.push(itemText);
            }
            Ysh.Web.Text.ddl.scrollTop = 0;
            Ysh.Web.Text.ddl.style.width = "";
            //这个弹出层定位方法之前也是用循环offsetParent，但发现ie跟ff下差别很大（可能是使用方式不当），所以改用这个getBoundingClientRect 
            var txtbox = (ddlBox || self).getBoundingClientRect();
            left = txtbox.left + document.documentElement.scrollLeft;
            top = txtbox.top + document.documentElement.scrollTop + self.offsetHeight;
            var width = txtbox.right - txtbox.left;
            s = bak.length; // bak.length > this.pop_len ? this.pop_len : bak.length;
            var height = ((s > 10 ? 10 : s) * 25 + 2);
            if ((top + height) > document.documentElement.scrollHeight)
                top = txtbox.top + document.documentElement.scrollTop - height;
            with (Ysh.Web.Text.ddl) {
                style.cssText = /*'width:' + self.offsetWidth + 'px;' +*/'position:absolute;z-index:10001;left:' + left + 'px;top:' + top + 'px;display:none;';
                //getElementsByTagName('iframe')[0].setAttribute('width', self.offsetWidth);
                //getElementsByTagName('iframe')[0].style.height = (28 * (autoComplete.source + "").split(',').length) + "px";
                onclick = function (e) {
                    e = e || window.event;
                    e.cancelBubble = true;
                    var target = e.srcElement || e.target;
                    if (target.tagName == 'LI') {
                        var text = target.innerHTML.substring(0, target.innerHTML.indexOf('<'));
                        if (fSelected) {
                            var key = target.children[target.children.length - 1].innerText;
                            fSelected(key, text);
                        } else {
                            self.value = text;
                            self.focus();
                            self.select();
                        }
                    }
                    this.style.display = 'none';
                };
            }
            for (var i = 0; i < s; i++)
                li.push('<li title="' + baks[i] + '">' + bak[i] + '</li>');
            Ysh.Web.Text.ddl.getElementsByTagName('ul')[0].innerHTML = li.join('');
            Ysh.Web.Text.ddl.style.display = 'block';
            Ysh.Web.Text.ddl.style.height = height + 'px';
            Ysh.Web.Text.ddl.style.overflowY = s > 10 ? 'scroll' : '';
            var newBox = Ysh.Web.Text.ddl.getBoundingClientRect();
            if (newBox.right - newBox.left < width) {
                Ysh.Web.Text.ddl.style.width = width + "px";
            }
        }, setPrompt: function (textbox, title, descr) {
            var v0 = textbox.value;
            var v = Ysh.prompt(title, descr, v0);
            if ((typeof v == "undefined") || (v == v0))
                return;
            textbox.value = v;
            textbox.fireEvent("onchange");
        }
    },
    Time: {
        addStepButton: function (wnd, date1, date2) {
            var interval = "d";
            function moveClick(interval, time1, time2, diff, bNext) {
                var Frist;
                var Second;
                if (bNext) {
                    Frist = Ysh.Time.toString(Ysh.Time.add(interval, diff, time1));
                    Second = Ysh.Time.toString(Ysh.Time.add(interval, diff, time2));
                }
                else {
                    Frist = Ysh.Time.toString(Ysh.Time.add(interval, -diff, time1));
                    Second = Ysh.Time.toString(Ysh.Time.add(interval, -diff, time2));
                }
                return [Frist, Second];
            }
            var time1 = new Date(Ysh.Time.parseDate(date1.GetValue()));
            var time2 = new Date(Ysh.Time.parseDate(date2.GetValue()));
            var temp = new Date(Ysh.Time.parseDate(date2.GetValue()));
            temp.setHours(temp.getHours() + 12);
            temp.setHours(0);

            var dt;
            var diff = Ysh.Time.diff(interval, time1, temp);
            if (diff <= 0) {
                alert("输入的时间有误，请选择正确的时间段！");
                return;
            }
            var o = Ysh.Web.createElement(wnd, "img", {
                src: "/i/prev.png", onclick: function () {
                    dt = moveClick(interval, time1, time2, diff, false);
                    date1.SetValue(dt[0]);
                    date2.SetValue(dt[1]);
                }
            });
            o.style.width = "16px";
            o.style.height = "16px";

            o = Ysh.Web.createElement(wnd, "img", {
                src: "/i/next.png", onclick: function () {
                    dt = moveClick(interval, time1, time2, diff, true);
                    date1.SetValue(dt[0]);
                    date2.SetValue(dt[1]);
                }
            });

            o.style.width = "16px";
            o.style.height = "16px";
        }
    },
    alerts: function (str, caption) {
        disappear = function () {
            $("#bgdiv").remove();
            $("#msgdiv").remove();
            $("#msgtitle").remove();
            msgobj = null;
            msgdiv = null;
        };
        disappear();
        var m_text = str.replace(/\r\n/g, "<br />").replace(/\r/g, "<br />").replace(/\n/g, "<br />");
        var m_wait = 1000;
        var m_fade = 500;
        var m_bordercolor = "#167E79";
        var m_titlecolor = "#60D1C4";
        var msgw, msgh, bordercolor;
        bordercolor = m_bordercolor; //提示窗口的边框颜色
        titlecolor = m_titlecolor; //提示窗口的标题颜色

        var swidth, sheight;
        swidth = document.body.offsetWidth;
        sheight = document.body.offsetHeight;
        if (sheight < screen.height) {
            sheight = screen.height;
        }
        if (msgobj == null) {
            var msgobj = document.createElement("div");
        }
        msgobj.setAttribute("id", "msgdiv");
        msgobj.setAttribute("align", "center");
        msgobj.style.background = "white";
        msgobj.style.border = "1px solid " + bordercolor;
        msgobj.style.position = "absolute";
        msgobj.style.font = "12px/1.6em verdana, geneva, arial, helvetica, sans-serif";
        msgobj.style.zIndex = "10001";
        if (title == null) {
            var title = document.createElement("h4");
        }
        title.setAttribute("id", "msgtitle");
        title.setAttribute("align", "left");
        title.style.margin = "0";
        title.style.padding = "3px";
        title.style.background = bordercolor;
        title.style.filter = "progid:dximagetransform.microsoft.alpha(startx=20, starty=20, finishx=100, finishy=100,style=1,opacity=75,finishopacity=100);";
        title.style.opacity = "0.75";
        title.style.border = "1px solid " + bordercolor;
        title.style.font = "12px verdana, geneva, arial, helvetica, sans-serif";
        title.style.color = "white";
        title.style.cursor = "pointer";
        title.innerHTML = "消息提示";
        title.onclick = function () {
            disappear();
        }
        document.body.appendChild(msgobj);
        document.getElementById("msgdiv").appendChild(title);
        var txt = document.createElement("p");
        txt.style.margin = "1em 0"
        txt.setAttribute("id", "msgtxt");
        txt.style.padding = "10px";
        txt.innerHTML = m_text;
        document.getElementById("msgdiv").appendChild(txt);

        msgobj.style.width = msgobj.offsetWidth < 180 ? 180 : msgobj.offsetWidth;
        msgobj.style.left = Math.max(0, (GGetWndWidth() - msgobj.offsetWidth) / 2);
        msgobj.style.top = Math.max(0, (GGetWndHeight() - msgobj.offsetHeight) / 2);

        fadeout = function () {
            $("#bgdiv").fadeOut(1000);
            $("#msgdiv").fadeOut(1000);
            $("#msgtitle").fadeOut(1000, function () { disappear() });
        }
        setTimeout("fadeout()", caption);
    },
    Loading: function (fun, msg) {
        GShowWorking(msg);
        window.setTimeout(function () {
            try { fun(); } catch (E) { }
            GHideWorking();
        }, 100);
    },
    confirm: function (msg, fun, title) {
        title = title || "确认";
        Ysh.Web.showModalDialog("p.aspx?f=confirm&title=" + escape(title) + "&desc=" + escape(msg) + "&a=" + Math.random(), null, 300, 200, fun);
    },
    alert: function (msg, title) {
        //title = title || "提示";
        //Ysh.Web.showModalDialog("p.aspx?f=alert&title=" + escape(title) + "&desc=" + escape(msg) + "&a=" + Math.random(), null, 300, 200);
        alert(msg);
    }
};

Ysh.Xml = {
    createXMLRoot: function (xml) {
        var xmlDoc = new ActiveXObject('MSXML2.DOMDocument');
        xmlDoc.async = false;
        xmlDoc.loadXML(xml);
        return xmlDoc.documentElement;
    },

    getFirstTag: function (xmlNd, tagNm) {
        return xmlNd.getElementsByTagName(tagNm).item(0);
    },

    getFirstTagAttr: function (xmlNd, tagNm, attrNm) {
        return xmlNd.getElementsByTagName(tagNm).item(0).getAttribute(attrNm);
    },

    setFirstTagAttr: function (xmlNd, tagNm, attrNm, attrVar) {
        xmlNd.getElementsByTagName(tagNm).item(0).setAttribute(attrNm, attrVar);
    },

    findNodeByAttr: function (nodes, tagNm, attrNm, attrV) {
        for (var i = 0; i < nodes.childNodes.length; i++) {
            var node = nodes.childNodes.item(i);
            var attrVar = getFirstTagAttr(node, tagNm, attrNm);
            if (attrVar == attrV)
                return node;
        }
        return null;
    },

    removeNodeByAttr: function (nodes, tagNm, attrNm, attrV) {
        var node = findNodeByAttr(nodes, tagNm, attrNm, attrV);
        if (null == node)
            return false;
        nodes.removeChild(node);
        return true;
    },

    getInnerXml: function (xmlNd) {
        return Ysh.Array.link(xmlNd.childNodes, function (nd) { return nd.xml; }, "");
    }
};
//</script>

var SelectEnum = { None: 0, Single: 1, Multiple: 2 };

function TableCellBind(cellctrl) {
    this.cellctrl = cellctrl;
    this.widths = [];
    this.selectType = SelectEnum.None; //0-不选，1-单选，2-多选
    this.selectColumn = 0;//选择列的位置
    this.allSelectedHandle = "";
    this.itemSelectedHandle = "";
    this.startGetRow = function (tr, r, s) { };
    this.endGetRow = function (tr, r, s) { };
    this.startGetCol = function (td, c, r, s) { };
    this.endGetCol = function (td, c, r, s) { };
    this.getTitleCol = function (cellctr, binder, td, c, r1, s) {
        if (r1 != binder.titleRows)
            return;
        var str = cellctrl.GetCellString(c, r1 + 1, s);
        if (str == "")
            return;
        str = str.replace("<<<", "").replace(">>>", "");
        var arrStr = str.split(",");
        if (arrStr.length > 1 && arrStr[1] == "INDEX")
            return;
        td.titleCol = str.split(",")[0];
        td.style["cursor"] = "hand";
    };
    this.setRowHeight = function (tr, h) {
        tr.style["height"] = h;
    };
    this.setColWidth = function (td, w) {
        td.style["width"] = w;
    };
    this.endBind = function (rows) {
    };
    this.setTdText = function (td, text, c, r, s) {
        td.text = text;
        var nAlign = cellctrl.GetCellAlign(c, r, s); //对齐方式
        td.style["vertical-align"] = CB_GetCellVAlign(nAlign);
        td.style["text-align"] = CB_GetCellHAlign(nAlign);
        var clrText = cellctrl.GetCellTextColor(c, r, s); //字体颜色
        td.style["color"] = (clrText <= 0) ? "#000000" : CC_ToColor(cellctrl.GetColor(clrText));
        var clrBack = cellctrl.GetCellBackColor(c, r, s); //背景颜色
        td.style["background-color"] = (clrBack <= 0) ? "#FFFFFF" : CC_ToColor(cellctrl.GetColor(clrBack));
        //        var clrAlign = cellctrl.GetCellTextStyle(c, r, s);
        //        var wordbreak = "white-space:nowrap;";
        //        if (clrAlign == "2") {
        //            wordbreak = "word-break: break-all;";
        //        }
        var nFont = cellctrl.GetCellFont(c, r, s);
        var nFontSize = cellctrl.GetCellFontSize(c, r, s);
        td.style["font-family"] = (nFont < 0) ? cellctrl.GetDefaultFontName() : cellctrl.GetFontName(nFont);
        td.style["font-size"] = (((nFontSize <= 0) ? cellctrl.GetDefaultFontSize() : nFontSize) * 1.4) + "px";
    }

    this.getRowList = function (binder) {
        var s = cellctrl.GetCurSheet();
        var rows = cellctrl.GetRows(s);
        var cols = cellctrl.GetCols(s);
        //获取所有列宽
        for (var c = 1; c < cols; c++) {
            this.widths.push({ width: cellctrl.GetColWidth(1, c, s) - 2, setted: false });
        }
        var lstTr = [];
        for (var r = 1; r < rows; r++) {
            var tr = TableCellBind.createRow();
            lstTr.push(tr);
            this.startGetRow(tr, r, s);
            for (var c = 1, c1 = 1; c < cols; c = c1 + 1) {
                var c0 = F_GetMergeRangeCol(cellctrl, c, r, s, 0);
                var r0 = F_GetMergeRangeRow(cellctrl, c, r, s, 1);
                c1 = F_GetMergeRangeCol(cellctrl, c, r, s, 2);
                if ((c0 != c) || (r0 != r))
                    continue;
                var v = cellctrl.GetCellString(c, r, s);
                var td = TableCellBind.createCell();
                this.startGetCol(td, c, r, s);
                tr.cells.push(td);
                var r1 = F_GetMergeRangeRow(cellctrl, c, r, s, 3);
                if (binder)
                    this.getTitleCol(cellctrl, binder, td, c, r1, s); //获取标题对应的fieldid
                if (v != "") {
                    this.setTdText(td, v, c, r, s);
                }
                if (c1 != c0) {
                    td.attr["colspan"] = c1 - c0 + 1;
                } else {
                    var w = this.widths[c - 1];
                    if ((w.width <= 0) || (w.width == "0%")) {
                        td.style["display"] = "none";
                    } else {
                        if (!w.setted) {
                            this.setColWidth(td, w.width);
                            w.setted = true;
                        }
                    }
                }
                if (r1 != r0) {
                    td.attr["rowspan"] = r1 - r0 + 1;
                } else {
                    var h = cellctrl.GetRowHeight(1, r, s);
                    if (h <= 2)
                        tr.style["display"] = "none";
                    else
                        this.setRowHeight(tr, h - 2);
                }
                this.endGetCol(td, c, r, s);
            }
            this.endGetRow(tr, r, s);
        }
        this.endBind(lstTr);
        return lstTr;
    }
}

TableCellBind.createRow = function () {
    return { attr: {}, style: {}, cells: [] };
}

TableCellBind.createCell = function () {
    return { attr: { rowspan: 1, colspan: 1 }, style: {}, text: "" };
}

TableCellBind.createGeneralBind = function (cellctrl) {
    var binder = new TableCellBind(cellctrl);
    if (cellctrl) {
        var rowLast = cellctrl.GetRows(cellctrl.GetCurSheet()) - 1;
        var colLast = 1;
        var tt = (new C_FillContent()).loadTemplate(cellctrl);
        var idRect = tt.field(tt.getFieldIndex("id"))._rects[0];
        var idcol = idRect.c0;
        var titleRows = idRect.r0 - 1;
        binder.titleRows = titleRows;
        binder.rm = idRect.rm;
        binder.idRect = idRect;
    }
    function isTitleRow(r) { return r <= binder.titleRows; }
    function isContentRow(r) { return r > binder.titleRows; }
    binder.setRowHeight = function (tr, h) { }
    binder.setContentRow = function (tr, r, s) { }
    binder.setTitleRow = function (tr, r, s) {
        tr.style["height"] = "30px";
    }
    binder.setContentCol = function (td, c, r, s) { }
    binder.setTitleCol = function (td, c, r, s) { }
    binder.startGetRow = function (tr, r, s) {
        if (r == 1 && this.titleRows > 0) {
            if (this.selectType == SelectEnum.None)
                return;
            var tdSelect = TableCellBind.createCell();
            if (this.selectType == SelectEnum.Multiple)
                tdSelect.text = "<input type='checkbox' onclick='Ysh.Web.Table.setCheckBoxState(Ysh.Web.getParent(this,\"TABLE\")," + this.titleRows + "," + this.selectColumn + ",this.checked," + this.rm + ");" + this.allSelectedHandle + "' />";
            else
                tdSelect.text = "选择";
            tdSelect.attr["rowspan"] = this.titleRows;
            if (this.selectColumn == 0)
                tr.cells.unshift(tdSelect);
            else
                tr.cells.splice(this.selectColumn, 0, tdSelect);
            return;
        }
        if (r == this.titleRows + 1) {
            if (this.selectType != SelectEnum.None) {
                var tdSelect = TableCellBind.createCell();
                var itemSelectedStr = "";
                if (this.itemSelectedHandle != "")
                    itemSelectedStr += "onclick='" + this.itemSelectedHandle + "' ";
                tdSelect.text = "<input type='" + ((this.selectType == SelectEnum.Single) ? "radio" : "checkbox") + "' " + itemSelectedStr + " " + ((this.selectType == SelectEnum.Single) ? "name='r" + (this.rootcall ? this.rootcall.id : "rSelect") + "'" : "") + " <<<id_checked,STR,INC>>> value='<<<id_same,SAME,id>>>' />";
                tdSelect.attr["rowspan"] = this.rm;
                tdSelect.style["text-align"] = "center";
                if (this.selectColumn == 0)
                    tr.cells.unshift(tdSelect);
                else
                    tr.cells.splice(this.selectColumn, 0, tdSelect);
            }
        }
    }
    binder.endGetRow = function (tr, r, s) {
        if (isContentRow(r)) {
            tr.attr["itemid"] = "<<<id_same,SAME,id>>>";
            this.setContentRow(tr, r, s);
        }
        if (isTitleRow(r)) {
            this.setTitleRow(tr, r, s);
        }
    }
    binder.startGetCol = function (td, c, r, s) {
    }
    binder.endGetCol = function (td, c, r, s) {
        if (c <= idcol)
            td.style["display"] = "none";
        td.style["background-color"] = "";
        if (isTitleRow(r)) {
            var w = this.widths[c - 1];
            if (!((w.width <= 0) || (w.width == "0%"))) {
                colLast = Math.max(colLast, c);
            }
        }
        if (isContentRow(r))
            this.setContentCol(td, c, r, s);
        if (isTitleRow(r))
            this.setTitleCol(td, c, r, s);
    }
    Ysh.Object.addHandle(binder, "setTdText", function (td, text, c, r, s) {
        if (isTitleRow(r)) {
            var arr = td.text.split(':');
            if (arr.length > 1) {
                td.text = arr[0];
                this.widths[c - 1].width = arr[1];
            }
        }
    });
    return binder;
}

// JScript File
function CellBindFillerObj() {
    this.filename = "";
    this.content = null;
    this.filler = null;
    this.rowCount = 0;
    this.createBinder = function (cellctrl) {
        var binder = TableCellBind.createGeneralBind(cellctrl);
        return binder;
    }
    this.initBinder = function (binder) { }
    this.getRowHtmlArray = function (lst, titleRows) {
        var lstText = [];
        var html = "";
        for (var i = 0; i < lst.length; i++) {
            var tr = lst[i];
            var thisHtml = "<tr " + Ysh.Web.getAttributeHtml(tr.attr, tr.style) + ">" + Ysh.Array.link(tr.cells, function (td) {
                return "<td  " + Ysh.Web.getAttributeHtml(td.attr, td.style) + ">" + td.text.replace(/\r/g, "").replace(/\n/g, "<br>") + "</td>";
            }, "") + "</tr>";
            if (i < titleRows) {
                lstText.push(thisHtml);
            } else {
                html += thisHtml;
            }
        }
        lstText.push(html);
        return lstText;
    }
    this.getRowJsonArray = function (binder) {
        var lst = this.getRowArray(binder);
        return jsonToString(lst);
    }
    this.getRowArray = function (binder) {
        return binder.getRowList(binder);
    }
    this.fillContent = function (content) { }
    this.fillBegin = function (content, filler) {
    }
    this.fillFinished = function (template, filler) {
    }
    this.dealRow = function (n, str) {
        return str;
    }
    this.showEnd = function (tableobj, html, template) {
    }
    this.doFill = function (cellctrl, tableobj) {
        if (cellctrl) {
            var n = cellctrl.OpenFile(this.filename, "");
            if (n < 1) {
                alert("打开模板文件失败，错误码：" + n);
                return;
            }
        }
        var binder = this.createBinder(cellctrl);
        this.initBinder(binder);
        this.binder = binder;
        var lstText = [];
        if (this.templateHTML && this.templateHTML.length > 0) {
            var lstTr = [];
            Ysh.Object.extendDeep(lstTr, this.templateHTML);
            lstTr = this.FormatHTML(lstTr, binder);
            lstText = this.getRowHtmlArray(lstTr, binder.titleRows);
        }
        else {
            //alert("模板HTML为空，请返回重新保存cell！");
            //return;
            var lst = this.getRowArray(binder);
            lstText = this.getRowHtmlArray(lst, binder.titleRows);
        }
        var content = new CTemplateContent();
        this.content = content;
        this.fillContent(content);
        this.rSpan = binder.rm;
        var filler = content.createHtmlArrayFiller1D(lstText);
        filler.encode = function (v) {
            if (typeof v == "string")
                return Ysh.String.htmlEncode(v).replace(/\r/g, "").replace(/\n/g, "<br>");
            return v;
        }
        content.noGroup = true;
        this.filler = filler;
        this.fillBegin(content, filler);
        //cellctrl.CloseFile();
        //initCell(cellctrl);
        var template = content.fillCell(filler, null);
        this.fillFinished(template, filler);
        //id必须是第一列，根据id对应的内容来找表头列
        var idField = template.field(template.getFieldIndex("id"));
        this.rect = idField._rects[0];
        var idValue = idField._value;
        var lst = this.filler.array;
        var html = "";
        var n = 0;
        for (var i = 0; i < lst.length; i++) {
            var str = lst[i];
            var valueIndex = i - this.rect.r0 + 1;
            if (valueIndex >= idValue.length)
                break;
            if (valueIndex >= 0) {
                if (idValue[valueIndex] == "")
                    continue;
                str = this.dealRow(n, str);
                n++;
            }
            html += str;
        }
        this.rowCount = n;
        Ysh.Web.Table.setInnerHTML(tableobj, html);
        this.showEnd(tableobj, html, template);
        SetTableSelectStyle(tableobj, binder.titleRows, binder.rm);
    }
}

CellBindFillerObj.createFiller = function () {
    var rp = new CellBindFillerObj();
    rp.createBinder = function (cellctrl) {
        var binder = TableCellBind.createGeneralBind(cellctrl);
        binder.setContentRow = function (tr, r, s) {
            Ysh.Array.each(tr.cells, function (td) { td.attr["class"] = "tbCellBoth trFirst"; });
        }
        binder.setTitleRow = function (tr, r, s) {
            Ysh.Array.each(tr.cells, function (td) { td.attr["class"] = "sTitle"; });
        }
        binder.endBind = function (rows) {
            if (rows.length == 0 || this.titleRows == 0)
                return;
            var tr = rows[0]; //标题行，弄个圆角
            //          var tdLeft = TableCellBind.createCell();
            //          tdLeft.text = "<img src='/i/sTitle0.jpg' />";
            //          tdLeft.style["width"] = "16px";
            ////          tdLeft.style["display"] = "none";
            //          tdLeft.attr["rowspan"] = this.titleRows;
            //          tr.cells.insert(0, [tdLeft]);
            //          var tdRight = TableCellBind.createCell();
            //          tdRight.text = "<img src='/i/sTitle2.jpg' />";
            //          tdRight.style["width"] = "14px";
            //          tdRight.style["display"] = "none";
            //          tdRight.attr["rowspan"] = this.titleRows;
            //          tr.cells.push(tdRight);
            for (var i = this.titleRows; i < rows.length; i++) {
                var tr = rows[i];
                for (var c = 0; c < tr.cells.length; c++) {
                    var td = tr.cells[c];
                    if (td.style.display == "none")
                        continue;
                    td.attr["colspan"];
                    i += (td.attr["rowspan"] - 1); //没有标题行会有问题
                    break;
                }
            }
            for (var i = this.titleRows; i < rows.length; i++) {
                var tr = rows[i];
                for (var c = tr.cells.length - 1; c >= 0; c--) {
                    var td = tr.cells[c];
                    if (td.style.display == "none")
                        continue;
                    td.attr["colspan"];
                    i += (td.attr["rowspan"] - 1);
                    break;
                }
            }
        }
        return binder;
    }
    rp.dealRow = function (n, str) {
        if (n % 2 == 1)
            return str.replaceAll("trFirst", "trSecond");
        return str;
    }
    return rp;
}
function jsonToString(obj) {
    var THIS = this;
    switch (typeof (obj)) {
        case 'string':
            return '"' + obj.replace(/(["\\])/g, '\\$1') + '"';
        case 'array':
            return '[' + obj.map(THIS.jsonToString).join(',') + ']';
        case 'object':
            if (Ysh.Type.isArray(obj)) {
                var strArr = [];
                var len = obj.length;
                for (var i = 0; i < len; i++) {
                    strArr.push(THIS.jsonToString(obj[i]));
                }
                return '[' + strArr.join(',') + ']';
            } else if (obj == null) {
                return 'null';

            } else {
                var string = [];
                for (var property in obj) string.push(THIS.jsonToString(property) + ':' + THIS.jsonToString(obj[property]));
                return '{' + string.join(',') + '}';
            }
        case 'number':
            return obj;
        case false:
            return obj;
    }
}

Ysh.Spread = {
    export: function (filename, type, content, cols, fields, json, head, finish) {
        Ysh.Refs.include([
            "/conn/jsfile/sp/gc.spread.sheets.excel2013white.11.1.1.css",
            "/conn/jsfile/sp/gc.spread.sheets.all.11.1.1.min.js",
            "/conn/jsfile/sp/gc.spread.excelio.11.1.0.min.js",
            "/conn/jsfile/sp/FileSaver.min.js",
            "/conn/jsfile/FillTemplate.js",
            "/conn/pdpjs/ctrl/spread.js"],
            function () {
                var c = new (Vue.component("spread"))();
                c.type = type;
                c.content = content;
                c.fields = fields;
                c.cols = cols;
                c.json = json;
                c.head = head;
                c.finish = finish;
                c.$mount();
                c.export(filename);
            }
        );
    }
}

Ysh.Vue = {
    Function: {
        fold: function (el, v) {
            if (!el._foldNum)
                return;
            v = parseInt(el._foldNum || 0, 10);
            var objNext = el.nextSibling;
            if (null == objNext)
                return;
            if (objNext.style.display == "") {
                var n = 0;
                do {
                    objNext.style.display = "none";
                    objNext = objNext.nextSibling;
                    n++;
                } while ((n < v) && objNext);
            } else {
                var n = 0;
                do {
                    objNext.style.display = "";
                    objNext = objNext.nextSibling;
                    n++;
                } while ((n < v) && objNext);
            }
        }
    },
    attachResize: function (vm) {
        var zoom = Ysh.Request.get("_z_");
        if (zoom)
            $("body").css("zoom", zoom);
        Ysh.Web.Event.attachEvent(window, "resize", function () { vm.resize(); });
    },
    addHandle: function (o, event, handle, before) {
        var old = o[event];
        if (!old)
            o[event] = handle;
        else {
            o[event] = function () {
                if (before) {
                    if (handle.apply(this, arguments) === false)
                        return;
                    this.$nextTick(function () {
                        old.apply(this, arguments);
                    });
                } else {
                    old.apply(this, arguments);
                    handle.apply(this, arguments);
                }
            }
        }
    },
    m: function (field) {
        return {
            set: function (v) {
                if (Ysh.Type.isArray(this.field))
                    this[field][0] = v;
                else
                    this[field] = v;
            },
            get: function () {
                var v = this[field];
                if (Ysh.Type.isArray(v))
                    v = v[0];
                if (v === undefined)
                    return "";
                //if ((v === true)||(v === false))
                return v;
                //return v.toString();
            }
        };
    },
    m2: function (o, f) {
        return {
            set: function (v) { o[f] = v },
            get: function () { return o[f]; }
        };
    },
    getValue: function (v, t) {
        if (Ysh.Type.isArray(v))
            v = v[0];
        if (v === undefined)
            return "";
        if (Ysh.Type.isDate(v))
            return v;
        if (Ysh.Type.isObject(v))
            return v;
        if ((t == "time") || (t == "date") || (t == "datetime")) {
            return new Date(v);
        }
        return v.toString();
    },
    getTopVm: function () {
        var vm = null;
        var p = window;
        while (p) {
            var pdp = p.pdp;
            if (pdp)
                vm = pdp;
            if (p == p.parent)
                break;
            p = p.parent;
        }
        return vm;
    },
    dialog: function (vm, src, options) {
        options = options || {};
        options.closable = true;
        options.render = function (h) { return h("iframe", { attrs: { width: '100%', height: options.height, src: src }, ref: 'dlg' }); };
        if (!vm) {
            vm = this.getTopVm();
        }
        vm.$Modal.confirm(options);
        return vm;
    },
    prompt: function (vm, options) {
        var options = options || {};
        options.closable = true;
        options.msg = "aaa";
        options.render = function (h) {
            return h("textarea", {
                style: { width: '100%', height: options.height }, on: {
                    input: function (val) {
                        options.msg = val;
                    }
                }
            });
        };

        if (!vm) {
            vm = this.getTopVm();
        }
        vm.$Modal.confirm(options);
        return vm;
    },
    addTemplate: function (id, template) {
        if (document.getElementById(id))
            return;
        var style;
        if (document.all) {    //IE
            style = document.createStyleSheet();
            style.type = "text/x-template";
            style.id = id;
            style.cssText = template;
        }
        else {
            style = document.createElement("style");
            style.type = "text/x-template";
            style.id = id;
            style.textContent = template; //Safari、Chrome 下innerHTML只读
        }
        document.body.appendChild(style);
    },
    addFile: function (jq, file) {
        var c = new (Vue.component("dynfile"))();
        c.file = file;
        c.$mount();
        jq.append(c.$el);
    },
    getPageParameter: function (args) {
        var arg = "?a=" + (new Date()).getTime();
        if (args) {
            for (var a in args) {
                var v = args[a];
                if (Ysh.Type.isFunction(v))
                    continue;
                arg += ("&" + a + "=" + escape(v));
            }
        }
        return arg;
    },
    getTag: function (vm) {
        var vnode = vm.$vnode;
        if (!vnode) return "";
        if (!vnode.componentOptions) return "";
        return vnode.componentOptions.tag;
    },
    redirect: function (vue, file, args) {
        var isDlg = false;
        if (event && event.srcElement) {
            var e = event.srcElement;
            while (e) {
                if (e == e.parentElement)
                    break;
                if (e.tagName.toLowerCase() == "iframe") {
                    isDlg = false;
                    break;
                }
                if (e.className == "dlg") {
                    isDlg = true;
                    break;
                }
                e = e.parentElement;
            }
        }
        if (typeof vMain != "undefined")
            file = vMain.getRealPage(file);
        if (isDlg) {
            Ysh.Refs.include("../conn/pdpjs/ctrl/dynfile.js", function () {
                var c = new (Vue.component("dynfile"))();
                c.file = file;
                c.args = args;
                c.$mount(vue.$el);
            });
        } else {
            window.location.href = file + ".html" + this.getPageParameter(args);
        }
    },
    Dialog: {
        dlg: null,
        show: function (name, file, args, icon, w, h, cssName) {
            if (this.dlg != null) {
                document.body.removeChild(this.dlg.$el);
            }
            this.dlg = new (Vue.component("guddialog"))();
            this.dlg.$mount();
            document.body.appendChild(this.dlg.$el);

            /*if (this.dlg == null) {
                this.dlg = new (Vue.component("guddialog"))();
                this.dlg.$mount();
                document.body.appendChild(this.dlg.$el);
            }*/
            this.dlg.name = name || "网页对话框";
            this.dlg.icon = icon || "../i/source.png"
            this.dlg.width = w;
            this.dlg.height = h;
            this.dlg.css = cssName || "dlg";
            this.dlg.args = args;
            this.dlg.refresh(file);
            return this.dlg;
        },
        showEx: function (file, args, options) {
            if (this.dlg != null) {
                document.body.removeChild(this.dlg.$el);
            }
            this.dlg = new (Vue.component("guddialog"))();
            this.dlg.$mount();
            document.body.appendChild(this.dlg.$el);
            this.dlg.name = options.name || "网页对话框";
            this.dlg.icon = options.icon || "../i/source.png"
            this.dlg.width = options.width;
            this.dlg.height = options.height;
            this.dlg.css = options.css || "dlg";
            this.dlg.left = options.left;
            this.dlg.top = options.top;
            this.dlg.args = args;
            this.dlg.refresh(file);
            return this.dlg;
        }
    },
    IView: {
        getSort: function (type) {
            return function (x, y, t) {
                if (typeof x == "undefined") return 1;
                if (typeof y == "undefined") return -1;
                var b = (t == "asc");
                return (b ? 1 : -1) * Ysh.Compare.getComparison(type)(x, y);
            }
        },
        filter: function (data, key, type,start) {
            var lst = [];
            for (var i = start || 0; i < data.length; i++) {
                var item = data[i][key];
                if (typeof item == "undefined")
                    item = "";
                if (!lst.contains(item))
                    lst.push(item);
            }
            var f = Ysh.Compare.getComparison(type);
            lst.sort(f);
            var ret = [];
            for (var i = 0; i < lst.length; i++)
                ret.push({ label: lst[i], value: lst[i] });
            return ret;
        },
        createTableEdit: function (vm, src, fields) {
            return {
                row: null,
                index: -1,
                vm: vm,
                src: src,
                fields: fields,
                indexAdded: -1,
                add: function (arr) {
                    if (this.index >= 0)
                        return;
                    if (!arr) {
                        arr = [];
                        for (var i = 0; i < this.fields.length; i++)
                            arr.push("");
                    }
                    this.vm[src].push(arr);
                    this.indexAdded = this.vm[src].length - 1;
                    this.row = Ysh.Array.toObject(arr, fields);
                    this.index = this.indexAdded;
                },
                del: function (row, index) {
                    if (this.index >= 0)
                        return;
                    this.row = Ysh.Object.clone(row);
                    this.index = index;
                    if (!this.doDelete())
                        return;
                    Vue.delete(this.vm[src], index);
                    this.index = -1;
                },
                modify: function (row, index) {
                    if (this.index >= 0) {
                        return;
                    }
                    this.row = Ysh.Object.clone(row);
                    this.index = index;
                    this.indexAdded = -1;
                },
                doSave: function () {
                    return true;
                },
                doDelete: function () {
                    return true;
                },
                save: function () {
                    if (!this.doSave())
                        return;
                    Ysh.Vue.setArrayObject(this.vm[src], this.index, this.row, this.fields);
                    this.index = -1;
                },
                cancel: function () {
                    this.index = -1;
                    if (this.indexAdded >= 0)
                        this.vm[src].splice(this.indexAdded, 1);
                }
            };
        },
        table: {
            props: {
                // 高亮匹配的列名
                highlightField: {
                    type: String,
                    "default": ''
                },
                // 是否高亮
                clickHighlight: {
                    type: Boolean,
                    "default": false
                },
                stripe: {
                    type: Boolean,
                    "default": true
                },
                border: {
                    type: Boolean,
                    "default": false
                },
                showHeader: {
                    type: Boolean,
                    "default": true
                },
                height: {
                    type: Number | String
                },
                loading: {
                    type: Boolean,
                    "default": false
                },
                disabledHover: {
                    type: Boolean,
                    "default": false
                },
                highlightRow: {
                    type: Boolean,
                    "default": false
                },
                rowClassName: {
                    type: Function,
                    "default": function () { }
                },
                size: {
                    type: String,
                    "default": "default"
                },
                noDataText: {
                    type: String,
                    "default": "暂无数据"
                },
                noFilteredDataText: {
                    type: String,
                    "default": "暂无筛选结果"
                },
                spanMethod: {
                    type: Function,
                    "default": function () { }
                }
            },
            data: function () {
                return {
                    filters: [],
                    curSort: null,
                    lastWidth: 0,
                    forceUpdate: false,
                    highlightId: '',
                    logicColumns: [],
                    isFirstFilterRow: false
                };
            },
            computed: {
                showColumns: function () {
                    if (this.forceUpdate && false)
                        return this.columns;
                    var columns = [];
                    for (var i = 0; i < this.columns.length; i++) {
                        var c = this.columns[i];
                        var newC = this.removeHideSub(c);
                        if (null != newC)
                            columns.push(newC);
                    }
                    this.appendColumnAttrs(columns);
                    return columns;
                }
            },
            methods: {
                initLogicColumn: function (c) { },
                filterEnd: function () { },
                hasFilterHeader: function (columns) {
                    for (var i = 0; i < columns.length; i++) {
                        var c = columns[i];
                        if (c.children) {
                            if (this.hasFilterHeader(c.children))
                                return true;
                        } else if (c["filter-head"])
                            return true;
                    }
                    return false;
                },
                appendColumnAttrs: function (columns) {
                    var lcs = this.logicColumns;
                    for (var i = 0; i < columns.length; i++) {
                        var c = columns[i];
                        if (c.children)
                            this.appendColumnAttrs(c.children);
                        var key = c.id || c.key || c.type;
                        if (!key)
                            continue;
                        for (var j = 0; j < lcs.length; j++) {
                            var lc = lcs[j];
                            if ((lc.id || lc.key || lc.type) == key) {
                                for (var k in lc) {
                                    if (k == "width")
                                        continue;
                                    var v = lc[k];
                                    if (v === Ysh.Const.DESTORY) delete c[k];
                                    else c[k] = v;
                                }
                                break;
                            }
                        }
                    }
                },
                setColumnFilter: function (colname, v) {
                    var c = Ysh.Array.first(this.columns, function (o) { return o.key == colname; });
                    if (!c) return;
                    c._filterChecked = v;
                    this.onFilterChange(c);
                    this.$forceUpdate();
                },
                setFilterColumn: function (c) {
                    if (c.filterInited)
                        return;
                    c.filterInited = true;
                    if (c.sortable)
                        c.sortable = "custom";
                    if (c.filterable) {
                        c.filterMethod = function (value, row) {
                            return true;
                        };
                    }
                    if (!this.isFirstFilterRow)
                        return;
                    var tbl = this;
                    var old = c.render;
                    c.render = function (h, params) {
                        if (params.row._index == 0) {
                            var o = { style: { width: "100%" } };
                            if (c.filterable) {
                                o.attrs = { value: (c.filteredValue == Ysh.Const.DESTORY) ? "" : c.filteredValue, readOnly: true };
                            } else if (!c["filter-head"]) {
                                return h("");
                            } else {
                                o.attrs = { value: c._filterChecked };
                                o.on = {
                                    change: function (evt) {
                                        var oInput = evt.srcElement;
                                        var v = oInput.value;
                                        c._filterChecked = v;
                                        var colIndex = Ysh.Web.getParent(oInput, "TD").cellIndex;
                                        tbl.onFilterChange(c);
                                        tbl.$nextTick(function () {
                                            var el = this.$el;
                                            if (!el) return;
                                            var tbody = $(el).find(".ivu-table-body").find("table")[0];
                                            if (!tbody) return;
                                            var td = tbody.rows[0].cells[colIndex];
                                            var newInput = $(td).find("input");
                                            newInput.focus().val("").val(v);
                                        });
                                    }
                                };
                            }
                            return h("input", o);
                        }
                        return old ? old(h, params) : h("span", params.row[this.column.key]);
                    }
                },
                filterData: function (data) {
                    var ret = [];
                    if (this.filters.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            var r = data[i];
                            if (this.matchFilter(r))
                                ret.push(r)
                        }
                    } else {
                        for (var i = 0; i < data.length; i++)
                            ret.push(data[i]);
                    }
                    if (this.curSort) {
                        var k = this.curSort.key;
                        var b = this.curSort.order == "asc";
                        var t = this.curSort.column.dtype;
                        ret = ret.sort(function (r1, r2) {
                            var v1 = r1[k];
                            var v2 = r2[k];
                            return (b ? 1 : -1) * Ysh.Compare.getComparison(t)(v1, v2);
                        });
                    }
                    return ret;
                },
                getFilterRowData: function () {
                    var columns = this.logicColumns;
                    var o = { _disabled: true };
                    for (var i = 0; i < columns.length; i++) {
                        var c = columns[i];
                        if (c["filter-head"] && c.key) {
                            o[c.key] = "[[[FILTER]]]";
                        }
                    }
                    return o;
                },
                removeFilterCheckBox: function () {
                    if (!this.isFirstFilterRow)
                        return;
                    this.$nextTick(function () {
                        var el = this.$el;
                        if (!el) return;
                        var tbl = $(el).find(".ivu-table-body").find("table")[0];
                        if (!tbl) return;
                        var cols = this.logicColumns;
                        for (var i = 0; i < cols.length; i++) {
                            var c = cols[i];
                            if (c.type == "selection") {
                                tbl.rows[0].cells[i].innerHTML = "";
                                return;
                            }
                        }
                    });
                },
                resetColumnFilters: function (c) {
                    c.filters = Ysh.Vue.IView.filter(this.showData, c.key, c.dtype, this.isFirstFilterRow ? 1 : 0);
                    var filters = this.filters;
                    for (var i = 0; i < filters.length; i++) {
                        var f = filters[i];
                        if (f.key == c.key) {
                            c.filteredValue = f._filterChecked;
                            return;
                        }
                    }
                    c.filteredValue = Ysh.Const.DESTORY;
                },
                resetFilters: function () {
                    var columns = this.logicColumns;
                    for (var i = 0; i < columns.length; i++) {
                        var c = columns[i];
                        if (c.filters && c.key)
                            this.resetColumnFilters(c);
                    }
                    this.forceUpdate = !this.forceUpdate;
                    console.log("table resetFilters");
                },
                matchFilter: function (r) {
                    var filters = this.filters;
                    for (var i = 0; i < filters.length; i++) {
                        var f = filters[i];
                        var key = f.key;
                        var values = f._filterChecked;
                        if (!f.filterable) {
                            if (r[key].toString().indexOf(values) < 0)
                                return false;
                        } else {
                            if (!values.contains(r[key]))
                                return false;
                        }
                    }
                    return true;
                },
                isAllHide: function (lst) {
                    for (var i = 0; i < lst.length; i++) {
                        var c = lst[i];
                        var b = c.isHide;
                        if (c.children)
                            b = this.isAllHide(c.children);
                        if (!b)
                            return false;
                    }
                    return true;
                },
                removeHideSub: function (c) {
                    if (!c.children) {
                        return c.isHide ? null : c;
                    }
                    var newChildren = [];
                    for (var i = 0; i < c.children.length; i++) {
                        var newSub = this.removeHideSub(c.children[i]);
                        if (newSub != null)
                            newChildren.push(newSub);
                    }
                    if (newChildren.length == 0)
                        return null;
                    var newC = Ysh.Object.clone(c);
                    newC.children = newChildren;
                    return newC;
                },
                createColumnResetter: function (w, columns) {
                    var arr = [];
                    for (var i = 0; i < columns.length; i++) {
                        var c = columns[i];
                        arr.push(c);
                    }
                    arr.sort(function (c1, c2) { var d = (c1.hide || 0) - (c2.hide || 0); if (d != 0) return d; return c1.index - c2.index });
                    return {
                        width: w,
                        columns: arr,
                        resetPercent: function (cs) {
                            var all = 0;
                            var nNoSet = 0;
                            for (var i = 0; i < cs.length; i++) {
                                var c = cs[i];
                                if (c.value)
                                    all += c.value;
                                else
                                    nNoSet++;
                            }
                            if (nNoSet > 0) {
                                for (var i = 0; i < cs.length; i++) {
                                    var c = cs[i];
                                    if (c.value)
                                        continue;
                                    c.value = (100 - all) / nNoSet;
                                }
                            } else {
                                for (var i = 0; i < cs.length; i++) {
                                    var c = cs[i];
                                    c.value = c.value * 100 / all;
                                }
                            }
                        },
                        reset: function () {
                            var total = 0;
                            var arrPercent = [];
                            var totalValid = 0;
                            var totalMinValid = 0;
                            for (var i = 0; i < this.columns.length; i++) {
                                var c = this.columns[i];
                                var wThis = 0;
                                if (c.type == "%") {
                                    wThis = c.min;
                                } else {
                                    c.width = c.value;
                                    wThis = c.value;
                                }
                                if (total + wThis > this.width) {
                                    if (c.hide) c.width = 0;
                                    else
                                        if (c.type == "%")
                                            arrPercent.push(c);
                                } else {
                                    if (c.type == "%")
                                        arrPercent.push(c);
                                }
                                if (c.width > 0)
                                    totalValid += c.width;
                                if (c.width)
                                    totalMinValid += wThis;
                                total += wThis;
                            }
                            if (totalMinValid < this.width) {
                                var wAll = this.width - totalValid;
                                do {
                                    this.resetPercent(arrPercent);
                                    var bNeedReset = false;
                                    for (var i = arrPercent.length - 1; i >= 0; i--) {
                                        var c = arrPercent[i];
                                        if (wAll * c.value / 100 < c.min) {
                                            c.width = c.min;
                                            wAll -= c.width;
                                            arrPercent.erase(c);
                                            bNeedReset = true;
                                            break;
                                        }
                                        if (i > 0)
                                            c.width = Math.max(wAll * c.value / 100, c.min);
                                        else
                                            c.width = "delete";
                                    }
                                    if (!bNeedReset)
                                        break;
                                } while (true);
                            } else {
                                for (var i = 0; i < arrPercent.length; i++) {
                                    var c = arrPercent[i];
                                    c.width = c.min;
                                }
                            }
                            return true;
                        }
                    };
                },
                getColumnWidth: function (c, i) {
                    var w = c._width;
                    if (!w) {
                        c._width = c.width || "noset";
                        w = c.width;
                    }
                    var v = "";
                    var t = "%";
                    if (w&&(w!="noset")) {
                        if (!(w + "").endsWith("%"))
                            t = "px";
                        v = parseInt(w, 10);
                    }
                    var min = parseInt(c.minWidth || "10", 10);
                    return { column: c, index: i, type: t, value: v, width: -1, min: min, hide: c.hide };
                },
                resetColumnWidth: function (w, columns) {
                    var o = this.createColumnResetter(w, columns);
                    return o.reset();
                },
                appendColumnWidths: function (columns, lst) {
                    for (var i = 0; i < lst.length; i++) {
                        var c = lst[i];
                        if (c.children)
                            this.appendColumnWidths(columns, c.children);
                        else
                            columns.push(this.getColumnWidth(c, columns.length));
                    }
                },
                resetColumns: function (w, force) {
                    if (w < 100) return;
                    /*if (!force) {
                        if (this.lastWidth == w)
                            return;
                    }*/
                    this.lastWidth = w;
                    var columns = [];
                    this.appendColumnWidths(columns, this.columns);
                    if (this.resetColumnWidth(w, columns)) {
                        var temp = [w];
                        for (var i = 0; i < columns.length; i++) {
                            var c = columns[i];
                            var w = c.width;
                            if (w == "delete") {
                                c.column.isHide = false;
                                delete c.column.width;
                                temp.push("");
                                continue;
                            }
                            if (w == 0) {
                                c.column.isHide = true;
                            } else {
                                c.column.isHide = false;
                                c.column.width = parseInt(w, 10);// + "px";
                                temp.push(w);
                            }
                        }
                        this.forceUpdate = !this.forceUpdate;
                    }
                },
                //itable默认事件
                onCurrentChange: function (currentRow, oldCurrentRow) {
                    this.$emit('on-current-change', currentRow, oldCurrentRow);
                },
                onSelect: function (selection, row) {
                    this.$emit('on-select', selection, row);
                },
                onSelectCancel: function (selection, row) {
                    this.$emit('on-select-cancel', selection, row);
                },
                onSelectAll: function (selection) {
                    this.$emit('on-select-all', selection);
                },
                onSelectionChange: function (selection) {
                    this.$emit('on-selection-change', selection);
                },
                onSortChange: function (column, key, order) {
                    var columns = this.logicColumns;
                    for (var i = 0; i < columns.length; i++) {
                        var c = columns[i];
                        if (c.key == column.key) {
                            if (column.order == "normal") {
                                delete c.sortType;
                            } else {
                                c.sortType = column.order;
                            }

                        } else {
                            delete c.sortType;
                        }
                    }
                    if (column.order == "normal") {
                        this.curSort = null;
                    } else {
                        this.curSort = column;
                    }
                    this.$emit('on-sort-change', column, key, order);
                },
                onFilterChange: function (column) {
                    var idx = -1;
                    for (var i = 0; i < this.filters.length; i++) {
                        if (this.filters[i].key == column.key) {
                            idx = i;
                            break;
                        }
                    }
                    if (column._filterChecked.length == 0) {
                        if (idx >= 0)
                            Vue.delete(this.filters, idx);
                    } else {
                        if (idx >= 0)
                            Vue.set(this.filters, idx, column);
                        else
                            this.filters.push(column);
                    }
                    this.resetFilters();
                    this.filterEnd();
                    this.$emit('on-filter-change', column);
                },
                onRowDblclick: function (row, index) {
                    this.$emit('on-row-dblclick', row, index);
                },
                onExpand: function (row, status) {
                    this.$emit('on-expand', row, status);
                },
                getDataMergeRows: function (d, data) {
                    var m = d.column.merge;
                    if (!m) return -1;
                    var v = d.row[m];
                    if (d.rowIndex > 0) {
                        if (v == data[d.rowIndex - 1][m])
                            return 0;
                    }
                    for (var i = d.rowIndex + 1; i < data.length; i++) {
                        var row = data[i];
                        if (row[m] == v)
                            continue;
                        return i - d.rowIndex;
                    }
                    return data.length - d.rowIndex;
                },
                mergeColumn: function (d, data) {
                    var m = d.column.merge;
                    if (!m) return [1, 1];
                    var v = d.row[m];
                    if (d.rowIndex > 0) {
                        if (v == data[d.rowIndex - 1][m])
                            return [0, 0];
                    }
                    for (var i = d.rowIndex + 1; i < data.length; i++) {
                        var row = data[i];
                        if (row[m] == v)
                            continue;
                        return [i - d.rowIndex,1];
                    }
                    return [data.length - d.rowIndex, 1];                    
                }
            },
            watch: {
                columns: {
                    immediate: true,
                    handler: function () {
                        var isFirstFilterRow = this.hasFilterHeader(this.columns);
                        this.isFirstFilterRow = isFirstFilterRow;
                        function __getBottomElement(results, sources) {
                            for (var i = 0; i < sources.length; i++) {
                                var s = sources[i];
                                if (s.children)
                                    __getBottomElement(results, s.children);
                                else
                                    results.push(Ysh.Object.clone(s));
                            }
                        }
                        var lcs = [];
                        __getBottomElement(lcs, this.columns);
                        this.logicColumns = lcs;
                        var columns = this.logicColumns;
                        for (var i = 0; i < columns.length; i++) {
                            var c = columns[i];
                            this.setFilterColumn(c);
                            this.initLogicColumn(c);
                            if (!isFirstFilterRow)
                                continue;
                            if (c.type != "index")
                                continue;
                            var old = c.indexMethod;
                            if (old) {
                                c.indexMethod = function (row) {
                                    if (row._index == 0) return "";
                                    return old(row) - 1;
                                };
                            } else {
                                c.indexMethod = function (row) {
                                    if (row._index == 0) return "";
                                    return row._index;
                                };
                            }
                        }
                    }
                }
            }
        },
        exportTable: function (vm) {
            Ysh.Spread.export(vm.$attrs.export || "导出", "1", vm.data, vm.columns, undefined, undefined, function (sheet) {
                var thead = $(vm.$el).find("thead")[0];
                if (!thead)
                    return 0;
                var rowCount = thead.rows.length;
                if (rowCount < 2) return 0;
                sheet.setRowCount(rowCount + 1, GC.Spread.Sheets.SheetArea.viewport);
                var colCount = 0;
                var row0 = thead.rows[0];
                for (var i = 0; i < row0.cells.length; i++) {
                    var td = row0.cells[i];
                    if (i == row0.cells.length - 1) {
                        if (td.innerHTML == "")
                            continue;//最后可能有和滚动条对应的列
                    }
                    colCount += td.colSpan;
                }
                sheet.setColumnCount(colCount, GC.Spread.Sheets.SheetArea.viewport);
                var cells = [];
                for (var i = 0; i < rowCount; i++) {
                    var rowCells = [];
                    for (var j = 0; j < colCount; j++)
                        rowCells.push(null);
                    cells.push(rowCells);
                }
                var lst = [];
                for (var i = 0; i < thead.rows.length; i++) {
                    var row = thead.rows[i];
                    for (var j = 0; j < row.cells.length; j++) {
                        var cell = row.cells[j];
                        var o = { text: cell.innerText, r: i, c: -1, rs: cell.rowSpan, cs: cell.colSpan };
                        lst.push(o);
                        for (var k = 0; k < colCount; k++) {
                            if (cells[i][k] == null) {
                                o.c = k;
                                for (var r = 0; r < o.rs; r++)
                                    for (var c = 0; c < o.cs; c++)
                                        cells[i + r][k + c] = o;
                                break;
                            }
                        }
                    }
                }
                for (var i = 0; i < lst.length; i++) {
                    var o = lst[i];
                    if (o.c < 0)
                        continue;
                    sheet.getCell(o.r, o.c).value(o.text);
                    if (o.rs > 1 || o.cs > 1)
                        sheet.addSpan(o.r, o.c, o.rs, o.cs);
                }
                return cells.length;
            }, function (sheet, template) {
                if (vm.$attrs.nofit)
                    return;
                var sheetRowCount = sheet.getRowCount();
                for (var i = 0; i < sheetRowCount; i++) {
                    sheet.autoFitRow(i)
                }
            });
        }
    }, setArrayObject: function (array2d, index, obj, fields) {
        var array1d = []
        for (var i = 0; i < fields.length; i++) {
            array1d.push(obj[fields[i]]);
        }
        Vue.set(array2d, index, array1d);
    },
    Report: {
        export: function (id, name, cons, filename) {
            Ysh.Refs.include([
                "/ReportDetail/lib/spread/gc.spread.sheets.all.11.1.1.min.js",
                "/ReportDetail/lib/spread/interop/gc.spread.excelio.11.1.0.min.js",
                "/ReportDetail/lib/spread/plugins/gc.spread.sheets.charts.11.1.1.min.js",
                "/ReportDetail/lib/spread/plugins/gc.spread.sheets.print.11.1.1.min.js",
                "/ReportDetail/lib/FileSaver.min.js",
                "/ReportDetail/lib/spread/plugins/gc.spread.sheets.resources.zh.11.1.0.min.js",
                "/ReportDetail/scripts/SpreadJsHelper.js",
                "/Scripts/ViewsJs/ArrayEx.js",
                "/Scripts/ViewsJs/jsTools.js",
                "/Scripts/ViewsJs/AnalysisReportField.js",
                "/conn/pdpjs/ctrl/report_spread.js"], function () {
                    var c = new (Vue.component("reportshow"))();
                    c.report_id = id;
                    c.file_name = name;
                    c.conditions = cons;
                    c.$mount();
                    c.exportExcel(filename);
                });
        }
    }
}

if (typeof Vue != "undefined") {
    var mixinOption = {
        beforeCreate: function () {
            this.Ysh = Ysh;
            var tag = Ysh.Vue.getTag(this);
            if(tag !=="el-input"){
                var {pureValue,doResize,resize,} = mixinOption1.methods;
                if(!this.pureValue)
                this.pureValue = pureValue;
                if(!this.doResize)
                this.doResize = doResize;
                if(!this.resize)
                this.resize = resize;
            }
        },
        mounted: function () {
            var tag = Ysh.Vue.getTag(this);
            switch (tag) {
                case "pagetable":
                    break;
                case "scrolltable":
                    break;
                case "i-table":
                    if (Ysh.Vue.getTag(this.$parent) == "scrolltable")
                        return;
                    if (Ysh.Vue.getTag(this.$parent) == "stage2table")
                        return;
                    break;
                default:
                    return;
            }
            var vm = this;
            if(!YshConfig.contextmenuExport){
                return;
            }
            this.$el.oncontextmenu = function () {
                var x = window.event.pageX;
                var y = window.event.pageY;
                Ysh.Refs.include(["/conn/jsfile/flow_js/contextmenu.js"], function () {
                    var menus = [
                        {
                            img: "/i/flow_image/add_step.gif", text: "导出", url: "",
                            click: function () {
                                Ysh.Vue.IView.exportTable(vm);
                            }
                        }
                    ];
                    ShowContextMenu(menus, x, y);
                });
                return false;
            }
            Ysh.Web.Event.attachEvent(this.$el, "onclick", function () {
                if (typeof cleanContextMenu != "undefined")
                    cleanContextMenu();
            });
        },
    }
    var mixinOption1 = {
        methods: {
            pureValue: function (v) { return Ysh.Vue.getValue(v); },
            doResize: function () {
                for (var i = 0; i < this.$children.length; i++) {
                    this.$children[i].resize();
                }
            },
            resize: function () { this.doResize(); }
        }
    }
    Vue.mixin(mixinOption);

    

    Vue.directive('fold', {
        bind: function (el, binding, vnode) {
            var obj = el;
            //Ysh.Web.Event.detachEvent(obj, "onclick", obj.foldClick);
            var v = binding.value;
            obj._foldNum = v;
            if (obj.foldClick)
                return;
            //if (!v)
            //    return;
            var f = function () {
                Ysh.Vue.Function.fold(el);
            }
            obj.foldClick = f;
            Ysh.Web.Event.attachEvent(obj, "onclick", f);
        },
        update: function (el, binding, vnode) {
            var obj = el;
            el._foldNum = binding.value;
            return;
            Ysh.Web.Event.detachEvent(obj, "onclick", obj.foldClick);
            var v = binding.value;
            if (!v)
                return;
            var f = function () {
                Ysh.Vue.Function.fold(el, v);
            }
            obj.foldClick = f;
            Ysh.Web.Event.attachEvent(obj, "onclick", f);
        }
    });

    Vue.directive('bk', {
        bind: function (el, binding, vnode) {
            if (!el.style.position)
                el.style.position = "relative";
            var v = binding.value;
            if (Ysh.Type.isArray(v)) {
                var url = v[0];
                var wLeft = v[1];
                var hTop = v[2];
                var wRight = v[3];
                var hBottom = v[4];
                var zIndex = v[5] || "-1";
                if (zIndex == "none") zIndex = "";
                var w1 = wLeft + "px", w2 = "calc(100% - " + (wLeft + wRight) + "px)", w3 = wRight + "px";
                var h1 = hTop + "px", h2 = "calc(100% - " + (hTop + hBottom) + "px)", h3 = hBottom + "px";
                Ysh.Web.createElement(el, "img", { src: url + "/1.png" }, { position: "absolute", zIndex: zIndex, left: 0, top: 0, width: w1, height: h1 });
                Ysh.Web.createElement(el, "img", { src: url + "/2.png" }, { position: "absolute", zIndex: zIndex, left: w1, top: 0, width: w2, height: h1 });
                Ysh.Web.createElement(el, "img", { src: url + "/3.png" }, { position: "absolute", zIndex: zIndex, right: 0, top: 0, width: w3, height: h1 });
                Ysh.Web.createElement(el, "img", { src: url + "/4.png" }, { position: "absolute", zIndex: zIndex, left: 0, top: h1, width: w1, height: h2 });
                Ysh.Web.createElement(el, "img", { src: url + "/5.png" }, { position: "absolute", zIndex: zIndex, left: w1, top: h1, width: w2, height: h2 });
                Ysh.Web.createElement(el, "img", { src: url + "/6.png" }, { position: "absolute", zIndex: zIndex, right: 0, top: h1, width: w3, height: h2 });
                Ysh.Web.createElement(el, "img", { src: url + "/7.png" }, { position: "absolute", zIndex: zIndex, left: 0, bottom: 0, width: w1, height: h3 });
                Ysh.Web.createElement(el, "img", { src: url + "/8.png" }, { position: "absolute", zIndex: zIndex, left: w1, bottom: 0, width: w2, height: h3 });
                Ysh.Web.createElement(el, "img", { src: url + "/9.png" }, { position: "absolute", zIndex: zIndex, right: 0, bottom: 0, width: w3, height: h3 });
            } else if (v == "kuang") {
                var url = "/i/sgc/kuang";
                var zIndex = "-1";
                var w1v = 18, h1v = 10, h2v = 10, h3v = 10;
                var w1 = w1v + 'px', h1 = h1v + 'px', h2 = h2v + 'px', h3 = h3v + 'px';
                var w2 = "calc(100% - " + w1 + ")", h4 = "calc(50% - " + ((h1v + h2v + h3v) / 2) + "px)";
                Ysh.Web.createElement(el, "img", { src: url + "/1.png" }, { position: "absolute", zIndex: zIndex, left: 0, top: 0, width: w1, height: h1 });
                Ysh.Web.createElement(el, "img", { src: url + "/2.png" }, { position: "absolute", zIndex: zIndex, left: w1, top: 0, width: w2, height: h1 });
                Ysh.Web.createElement(el, "img", { src: url + "/3.png" }, { position: "absolute", zIndex: zIndex, left: 0, top: h1, width: w1, height: h4 });
                Ysh.Web.createElement(el, "img", { src: url + "/4.png" }, { position: "absolute", zIndex: zIndex, left: 0, top: "calc(50% - 5px)", width: w1, height: h2 });
                Ysh.Web.createElement(el, "img", { src: url + "/5.png" }, { position: "absolute", zIndex: zIndex, left: 0, bottom: h3, width: w1, height: h4 });
                Ysh.Web.createElement(el, "img", { src: url + "/6.png" }, { position: "absolute", zIndex: zIndex, left: 0, bottom: 0, width: w1, height: h3 });
                Ysh.Web.createElement(el, "img", { src: url + "/7.png" }, { position: "absolute", zIndex: zIndex, left: w1, top: h1, width: w2, height: "calc(100% - 20px)" });
                Ysh.Web.createElement(el, "img", { src: url + "/8.png" }, { position: "absolute", zIndex: zIndex, left: w1, bottom: 0, width: w2, height: h3 });
            } else if (Ysh.Type.isObject(v)) {
                var url = v.src;
                var type = v.type;
                if (type == "lmr") {//左中右固定
                    var h = v.height;
                    var zIndex = v.zIndex || "-1";
                    if (zIndex == "none") zIndex = "";
                    var w1 = v.widths[0];
                    var w2 = v.widths[1];
                    var w3 = v.widths[2];
                    var w4 = "calc(50% - " + ((w1 + w2 + w3) / 2) + "px";
                    var lm = "calc(50% - " + ((-w1 + w2 + w3) / 2) + "px";
                    w1 = w1 + "px";
                    w2 = w2 + "px";
                    w3 = w3 + "px";
                    Ysh.Web.createElement(el, "img", { src: url + "/1.png" }, { position: "absolute", zIndex: zIndex, left: 0, top: 0, width: w1, height: h });
                    Ysh.Web.createElement(el, "img", { src: url + "/2.png" }, { position: "absolute", zIndex: zIndex, left: w1, top: 0, width: w4, height: h });
                    Ysh.Web.createElement(el, "img", { src: url + "/3.png" }, { position: "absolute", zIndex: zIndex, left: lm, top: 0, width: w2, height: h });
                    Ysh.Web.createElement(el, "img", { src: url + "/4.png" }, { position: "absolute", zIndex: zIndex, right:w3, top: 0, width: w4, height: h });
                    Ysh.Web.createElement(el, "img", { src: url + "/5.png" }, { position: "absolute", zIndex: zIndex, right:0, top: 0, width: w3, height: h });
                }
            } else {
                Ysh.Web.createElement(el, "img", { src: v }, { position: "absolute", zIndex: "-1", width: "100%", height: "100%", left: 0, top: 0 });
            }
        }
    });

    Vue.directive("loading", {
        bind: function (el, binding, vnode) {
            if (!el.style.position)
                el.style.position = "relative";
            var MyComponent = Vue.extend({
                props: ["c", "v", "s"],
                computed: {
                    show: function () { if (!this.c) return true; return this.c[this.v]; },
                },
                template: '<div v-show="show" :style="s" style="cursor:wait;position:absolute;left:0;top:0;z-index:10000;background-color: #585858; width:100%;height:100%;display:flex;justify-content:center;align-items:center;"><span style="background-color:black;padding:2px;"><img src="../i/loading.gif" />&nbsp;数据获取中...</span></div>',
            });
            var c = new MyComponent();
            c.c = vnode.context;
            var v = binding.value;
            if (Ysh.Type.isArray(v)) {
                c.v = v[0];
                c.s = v[1];
            } else
                c.v = v;
            var component = c.$mount()
            el.appendChild(component.$el)
        }
    });

    Vue.component('ysh-link', {
        props: {
            url: "",
            args: ""
        }, computed: {
            needLink: function () { return this.args; },
            linkurl: function () { return this.url + this.args; }
        }, template: '<a :href="linkurl" v-if="needLink"><slot></slot></a><slot v-else></slot>'
    });

    Vue.component('ysh-input', {
        props: {
            itype: {
                type: String,
                "default": "input"
            },
            forbid: {
                type: String,
                "default": "0"
            }, value: String
        },
        methods: {
            doInput: function (e) {
                this.$emit('input', e.target ? e.target.value : e);
            }
        },
        //template: '<component :is="itype" v-if="forbid!=\'1\'" :value="value" @input="$emit(\'input\', $event.target.value)"></component><span v-else> {{ value }} </span>'
        template: '<textarea v-if="forbid!=\'1\'&&itype==\'textarea\'" :value="value" @input="doInput($event)"></textarea><component :is="itype" v-else-if="forbid!=\'1\'" :value="value" @input="doInput($event)"><slot></slot></component><span v-else> {{ value }} </span>'
    });

    Vue.component('ysh-select', {
        props: {
            itype: {
                type: String,
                "default": "input"
            },
            forbid: {
                type: String,
                "default": "0"
            },
            value: String,
            list: {
                type: Array,
                "default": []
            }
        },
        computed: {
            showText: function () {
                for (var i = 0; i < this.list.length; i++) {
                    var item = this.list[i];
                    if (item[0] == this.value)
                        return item[1];
                }
                return "";
            }
        },
        methods: {
            doInput: function (e) {
                this.$emit('input', e.target ? e.target.value : e);
            }
        },
        mounted: function () {
        },
        //template: '<component :is="itype" v-if="forbid!=\'1\'" :value="value" @input="$emit(\'input\', $event.target.value)"></component><span v-else> {{ value }} </span>'
        template: '<textarea v-if="forbid!=\'1\'&&itype==\'textarea\'" :value="value" @input="doInput($event)"></textarea><component :is="itype" v-else-if="forbid!=\'1\'" :value="value" @input="doInput($event)"><slot></slot></component><span v-else> {{ showText }} </span>'
    });

    Vue.component('ysh-count', {
        props: {
            list: {
                type: Array | Object, "default": []
            },
            unit: {
                type: String, "default": "条"
            },
            name: {
                type: String, "default": "共有记录"
            }
        }, template: '<span>{{name}} <span style="font-size:1.5rem">{{list.length}}</span> {{unit}}</span>'
    });
}
